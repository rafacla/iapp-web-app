{"version":3,"file":"index.js","sources":["../src/OFXException.ts","../src/OFXRuntimeException.ts","../src/OFXStatusException.ts","../src/OFXTransactionException.ts","../src/UnsupportedOFXSecurityTypeException.ts","../src/client/NoOFXResponseException.ts","../src/client/context/DefaultApplicationContext.ts","../src/client/context/OFXApplicationContextHolder.ts","../src/domain/data/MessageSetType.ts","../src/domain/data/banking/AccountType.ts","../src/collections/SortedSet.ts","../src/meta/PropertyDescriptor.ts","../src/meta/ChildAggregate.ts","../src/meta/Element.ts","../src/io/AggregateAttribute.ts","../src/io/AggregateInfo.ts","../src/io/AggregateIntrospector.ts","../src/meta/Aggregate_Add.ts","../src/meta/Element_add.ts","../src/domain/data/banking/BankAccountDetails.ts","../src/domain/data/creditcard/CreditCardAccountDetails.ts","../src/domain/data/investment/accounts/InvestmentAccountDetails.ts","../src/domain/data/common/StatementRange.ts","../src/client/impl/BaseAccountImpl.ts","../src/domain/data/RequestMessageSet.ts","../src/domain/data/RequestMessage.ts","../src/domain/data/TransactionWrappedRequestMessage.ts","../src/meta/ChildAggregate_add.ts","../src/domain/data/common/StatementRequest.ts","../src/domain/data/banking/BankStatementRequest.ts","../src/domain/data/banking/BankStatementRequestTransaction.ts","../src/domain/data/banking/BankingRequestMessageSet.ts","../src/client/impl/BankingAccountImpl.ts","../src/client/impl/BaseFinancialInstitutionData.ts","../src/domain/data/creditcard/CreditCardStatementRequest.ts","../src/domain/data/creditcard/CreditCardStatementRequestTransaction.ts","../src/domain/data/creditcard/CreditCardRequestMessageSet.ts","../src/client/impl/CreditCardAccountImpl.ts","../src/meta/Aggregate_add.ts","../src/meta/Header.ts","../src/meta/Header_add.ts","../src/domain/data/ApplicationSecurity.ts","../src/domain/data/RequestEnvelope.ts","../src/domain/data/signon/FinancialInstitution.ts","../src/domain/data/signon/SignonRequest.ts","../src/domain/data/profile/ClientRoutingCapability.ts","../src/domain/data/profile/ProfileRequest.ts","../src/domain/data/profile/ProfileRequestTransaction.ts","../src/domain/data/profile/ProfileRequestMessageSet.ts","../src/domain/data/signup/AccountInfoRequest.ts","../src/domain/data/signup/AccountInfoRequestTransaction.ts","../src/domain/data/signup/SignupRequestMessageSet.ts","../src/domain/data/investment/statements/IncludePosition.ts","../src/domain/data/investment/statements/InvestmentStatementRequest.ts","../src/domain/data/investment/statements/InvestmentStatementRequestTransaction.ts","../src/domain/data/seclist/SecurityId.ts","../src/domain/data/seclist/SecurityRequest.ts","../src/domain/data/seclist/SecurityListRequest.ts","../src/domain/data/seclist/SecurityListRequestTransaction.ts","../src/domain/data/investment/statements/InvestmentStatementRequestMessageSet.ts","../src/domain/data/seclist/SecurityListRequestMessageSet.ts","../src/client/impl/InvestmentAccountImpl.ts","../src/domain/data/signon/PasswordChangeRequest.ts","../src/domain/data/signon/PasswordChangeRequestTransaction.ts","../src/domain/data/signon/SignonRequestMessageSet.ts","../src/domain/data/common/StatusHolder.ts","../src/domain/data/ResponseMessage.ts","../src/domain/data/common/StatusCode.ts","../src/domain/data/common/Status.ts","../src/domain/data/TransactionWrappedResponseMessage.ts","../src/client/impl/FinancialInstitutionImpl.ts","../src/client/net/OFXConnectionException.ts","../src/client/net/OFXServerException.ts","../src/log/Log.ts","../src/domain/data/common/UnknownStatusCode.ts","../src/io/DefaultStringConversion.ts","../src/io/AggregateMarshaller.ts","../src/io/StringReader.ts","../src/io/DefaultHandler.ts","../src/io/OFXParseException.ts","../src/collections/Stack.ts","../src/io/OFXParseEvent.ts","../src/io/OFXV2ContentHandler.ts","../src/io/BaseOFXReader.ts","../src/io/OFXSyntaxException.ts","../src/io/AggregateStackContentHandler.ts","../src/io/AggregateUnmarshaller.ts","../src/domain/data/ResponseMessageSet.ts","../src/domain/data/ResponseEnvelope.ts","../src/io/StreamWriter.ts","../src/io/v1/OFXV1Writer.ts","../src/client/net/OFXV1Connection.ts","../src/io/v2/OFXV2Writer.ts","../src/client/net/OFXV2Connection.ts","../src/domain/data/common/AccountStatus.ts","../src/domain/data/banking/BankAccountInfo.ts","../src/domain/data/investment/transactions/TransactionType.ts","../src/domain/data/common/CorrectionAction.ts","../src/domain/data/common/Payee.ts","../src/domain/data/common/Currency.ts","../src/domain/data/common/Transaction.ts","../src/domain/data/common/TransactionList.ts","../src/domain/data/common/BalanceInfo.ts","../src/domain/data/common/StatementResponse.ts","../src/domain/data/banking/BankStatementResponse.ts","../src/domain/data/banking/BankStatementResponseTransaction.ts","../src/domain/data/banking/BankingResponseMessageSet.ts","../src/domain/data/common/BalanceRecord.ts","../src/domain/data/common/ProcessorDayOff.ts","../src/domain/data/common/T1099Request.ts","../src/domain/data/common/T1099Response.ts","../src/domain/data/common/TransactionType.ts","../src/domain/data/common/TransferInfo.ts","../src/domain/data/common/TransferStatusEvent.ts","../src/domain/data/common/TransferStatus.ts","../src/domain/data/creditcard/CreditCardAccountInfo.ts","../src/domain/data/creditcard/CreditCardStatementResponse.ts","../src/domain/data/creditcard/CreditCardStatementResponseTransaction.ts","../src/domain/data/creditcard/CreditCardResponseMessageSet.ts","../src/domain/data/investment/accounts/AccountType.ts","../src/domain/data/investment/accounts/ActivationStatus.ts","../src/domain/data/investment/accounts/UnitedStatesAccountType.ts","../src/domain/data/investment/accounts/InvestmentAccountInfo.ts","../src/domain/data/investment/accounts/SubAccountType.ts","../src/domain/data/investment/positions/PositionType.ts","../src/domain/data/investment/positions/Inv401KSource.ts","../src/domain/data/investment/positions/InvestmentPosition.ts","../src/domain/data/investment/positions/BasePosition.ts","../src/domain/data/investment/positions/DebtPosition.ts","../src/domain/data/investment/positions/InvestmentPositionList.ts","../src/domain/data/investment/positions/MutualFundPosition.ts","../src/domain/data/investment/positions/ShortOptionSecurity.ts","../src/domain/data/investment/positions/OptionsPosition.ts","../src/domain/data/investment/positions/OtherPosition.ts","../src/domain/data/investment/positions/StockPosition.ts","../src/domain/data/investment/statements/BalanceList.ts","../src/domain/data/investment/statements/InvestmentBalance.ts","../src/domain/data/investment/transactions/BaseInvestmentTransaction.ts","../src/domain/data/investment/transactions/InvestmentBankTransaction.ts","../src/domain/data/investment/transactions/InvestmentTransactionList.ts","../src/domain/data/investment/statements/InvestmentStatementResponse.ts","../src/domain/data/investment/statements/InvestmentStatementResponseTransaction.ts","../src/domain/data/investment/statements/InvestmentStatementResponseMessageSet.ts","../src/domain/data/investment/transactions/InvestmentTransaction.ts","../src/domain/data/investment/transactions/OriginalCurrency.ts","../src/domain/data/investment/transactions/BuyInvestmentTransaction.ts","../src/domain/data/investment/transactions/BaseBuyInvestmentTransaction.ts","../src/domain/data/investment/transactions/BaseOtherInvestmentTransaction.ts","../src/domain/data/investment/transactions/SellInvestmentTransaction.ts","../src/domain/data/investment/transactions/BaseSellInvestmentTransaction.ts","../src/domain/data/investment/transactions/BuyDebtTransaction.ts","../src/domain/data/investment/transactions/BuyType.ts","../src/domain/data/investment/transactions/BuyMutualFundTransaction.ts","../src/domain/data/investment/transactions/OptionBuyType.ts","../src/domain/data/investment/transactions/BuyOptionTransaction.ts","../src/domain/data/investment/transactions/BuyOtherTransaction.ts","../src/domain/data/investment/transactions/BuyStockTransaction.ts","../src/domain/data/investment/transactions/CloseOptionAction.ts","../src/domain/data/investment/transactions/CloseOptionTransaction.ts","../src/domain/data/investment/transactions/IncomeType.ts","../src/domain/data/investment/transactions/IncomeTransaction.ts","../src/domain/data/investment/transactions/InvestmentExpenseTransaction.ts","../src/domain/data/investment/transactions/JournalFundTransaction.ts","../src/domain/data/investment/transactions/JournalSecurityTransaction.ts","../src/domain/data/investment/transactions/MarginInterestTransaction.ts","../src/domain/data/investment/transactions/OptionSellType.ts","../src/domain/data/investment/transactions/ReinvestIncomeTransaction.ts","../src/domain/data/investment/transactions/RelatedOptionType.ts","../src/domain/data/investment/transactions/ReturnOfCapitalTransaction.ts","../src/domain/data/investment/transactions/SellDebtReason.ts","../src/domain/data/investment/transactions/SellDebtTransaction.ts","../src/domain/data/investment/transactions/SellType.ts","../src/domain/data/investment/transactions/SellMutualFundTransaction.ts","../src/domain/data/investment/transactions/SellOptionTransaction.ts","../src/domain/data/investment/transactions/SellOtherTransaction.ts","../src/domain/data/investment/transactions/SellStockTransaction.ts","../src/domain/data/investment/transactions/SplitTransaction.ts","../src/domain/data/investment/transactions/TransferAction.ts","../src/domain/data/investment/transactions/TransferInvestmentTransaction.ts","../src/domain/data/profile/SynchronizationCapability.ts","../src/domain/data/profile/CoreMessageSetInfo.ts","../src/domain/data/profile/VersionSpecificMessageSetInfo.ts","../src/domain/data/profile/AbstractMessageSetInfo.ts","../src/domain/data/profile/CharacterType.ts","../src/domain/data/profile/MessageSetInfoList.ts","../src/domain/data/profile/SignonInfo.ts","../src/domain/data/profile/SignonInfoList.ts","../src/domain/data/profile/ProfileResponse.ts","../src/domain/data/profile/ProfileResponseTransaction.ts","../src/domain/data/profile/ProfileResponseMessageSet.ts","../src/domain/data/profile/info/common/TransferProfile.ts","../src/domain/data/profile/info/banking/StopCheckProfile.ts","../src/domain/data/profile/info/banking/EmailProfile.ts","../src/domain/data/profile/info/common/ImageProfile.ts","../src/domain/data/profile/info/BankingV1MessageSetInfo.ts","../src/domain/data/profile/info/BankingMessageSetInfo.ts","../src/domain/data/profile/info/BillpayV1MessageSetInfo.ts","../src/domain/data/profile/info/BillpayMessageSetInfo.ts","../src/domain/data/profile/info/CreditCardV1MessageSetInfo.ts","../src/domain/data/profile/info/CreditCardMessageSetInfo.ts","../src/domain/data/profile/info/EmailV1MessageSetInfo.ts","../src/domain/data/profile/info/EmailMessageSetInfo.ts","../src/domain/data/profile/info/InterbankTransferV1MessageSetInfo.ts","../src/domain/data/profile/info/InterbankTransferMessageSetInfo.ts","../src/domain/data/profile/info/InvestmentV1MessageSetInfo.ts","../src/domain/data/profile/info/InvestmentMessageSetInfo.ts","../src/domain/data/profile/info/ProfileV1MessageSetInfo.ts","../src/domain/data/profile/info/ProfileMessageSetInfo.ts","../src/domain/data/profile/info/SecurityListV1MessageSetInfo.ts","../src/domain/data/profile/info/SecurityListMessageSetInfo.ts","../src/domain/data/profile/info/SignOnV1MessageSetInfo.ts","../src/domain/data/profile/info/SignOnMessageSetInfo.ts","../src/domain/data/profile/info/signup/ClientEnrollment.ts","../src/domain/data/profile/info/signup/WebEnrollment.ts","../src/domain/data/profile/info/signup/OtherEnrollment.ts","../src/domain/data/profile/info/SignupV1MessageSetInfo.ts","../src/domain/data/profile/info/SignupMessageSetInfo.ts","../src/domain/data/profile/info/WireTransferV1MessageSetInfo.ts","../src/domain/data/profile/info/WireTransferMessageSetInfo.ts","../src/domain/data/seclist/AssetClass.ts","../src/domain/data/seclist/SecurityInfo.ts","../src/domain/data/seclist/BaseSecurityInfo.ts","../src/domain/data/seclist/CallType.ts","../src/domain/data/seclist/CouponFrequency.ts","../src/domain/data/seclist/DebtClass.ts","../src/domain/data/seclist/DebtType.ts","../src/domain/data/seclist/DebtSecurityInfo.ts","../src/domain/data/seclist/MutualFundType.ts","../src/domain/data/seclist/MutualFundSecurityInfo.ts","../src/domain/data/seclist/OptionType.ts","../src/domain/data/seclist/OptionSecurityInfo.ts","../src/domain/data/seclist/OtherSecurityInfo.ts","../src/domain/data/seclist/SecurityList.ts","../src/domain/data/seclist/SecurityListResponse.ts","../src/domain/data/seclist/SecurityListResponseTransaction.ts","../src/domain/data/seclist/SecurityListResponseMessageSet.ts","../src/domain/data/seclist/StockType.ts","../src/domain/data/seclist/StockSecurityInfo.ts","../src/domain/data/signon/PasswordChangeResponse.ts","../src/domain/data/signon/PasswordChangeResponseTransaction.ts","../src/domain/data/signon/SignonResponse.ts","../src/domain/data/signon/SignonResponseMessageSet.ts","../src/domain/data/signup/AccountProfile.ts","../src/domain/data/signup/AccountInfoResponse.ts","../src/domain/data/signup/AccountInfoResponseTransaction.ts","../src/domain/data/signup/SignupResponseMessageSet.ts","../src/domain/data/tax1099/ProcDet.ts","../src/domain/data/tax1099/ExtDBInfo.ts","../src/domain/data/tax1099/PayerAddress.ts","../src/domain/data/tax1099/RecAddress.ts","../src/domain/data/tax1099/Tax1099B.ts","../src/domain/data/tax1099/Tax1099DIV.ts","../src/domain/data/tax1099/Tax1099INT.ts","../src/domain/data/tax1099/Tax1099MISC.ts","../src/domain/data/tax1099/Tax1099OID.ts","../src/domain/data/tax1099/Tax1099R.ts","../src/domain/data/tax1099/Tax1099Request.ts","../src/domain/data/tax1099/Tax1099RequestTransaction.ts","../src/domain/data/tax1099/Tax1099RequestMessageSet.ts","../src/domain/data/tax1099/Tax1099Response.ts","../src/domain/data/tax1099/Tax1099ResponseTransaction.ts","../src/domain/data/tax1099/Tax1099ResponseMessageSet.ts","../src/io/RequiredAttributeException.ts","../src/meta/Aggregate.ts"],"sourcesContent":["\r\nexport declare class Error {\r\n    public name: string;\r\n    public message: string;\r\n    public stack: string;\r\n    constructor(message?: string);\r\n}\r\n\r\n\r\n/**\r\n * Base exception class.\r\n */\r\nexport class OFXException extends Error {\r\n  private innerError: Error;\r\n\r\n  constructor(message: string = null, e: Error = null) {\r\n    super(message);\r\n    this.message = message;\r\n    this.innerError = e;\r\n  }\r\n}\r\n","import { OFXException } from './OFXException';\r\n\r\nexport class OFXRuntimeException extends OFXException {\r\n\r\n  constructor(message: string = null) {\r\n    super(message);\r\n  }\r\n}\r\n","import { Status } from './domain/data/common/Status'\r\nimport { OFXException } from './OFXException';\r\n\r\n/**\r\n * Exception based on a StatusCode response\r\n */\r\nexport class OFXStatusException extends OFXException {\r\n\tprivate status: Status;\r\n\r\n  constructor(status: Status, message: string) {\r\n    super(message);\r\n    this.status = status;\r\n  }\r\n\r\n  public getStatus(): Status {\r\n  \treturn this.status;\r\n  }\r\n}\r\n","import { OFXException } from \"./OFXException\";\r\n\r\n\r\nexport class OFXTransactionException extends OFXException {\r\n  public constructor(message: string = null) {\r\n    super(message);\r\n  }\r\n}\r\n","import { OFXException } from \"./OFXException\";\r\n\r\n\r\n/**\r\n * Thrown for unsupported OFX security type.\r\n */\r\nexport class UnsupportedOFXSecurityTypeException extends OFXException {\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n","import { OFXException } from \"../OFXException\";\r\n\r\n\r\nexport class NoOFXResponseException extends OFXException {\r\n\r\n  public constructor(message: string = null) {\r\n    super(message);\r\n  }\r\n}\r\n","import { OFXApplicationContext } from \"./OFXApplicationContext\";\r\n\r\n\r\n/**\r\n * Default application context.\r\n */\r\nexport class DefaultApplicationContext implements OFXApplicationContext {\r\n\r\n  private appId: string;\r\n  private appVersion: string;\r\n\r\n  constructor(appId: string, appVersion: string) {\r\n    this.appId = appId;\r\n    this.appVersion = appVersion;\r\n  }\r\n\r\n  public getAppId(): string {\r\n    return this.appId;\r\n  }\r\n\r\n  public getAppVersion(): string {\r\n    return this.appVersion;\r\n  }\r\n}\r\n","import { OFXApplicationContext } from \"./OFXApplicationContext\";\r\nimport { DefaultApplicationContext } from \"./DefaultApplicationContext\";\r\n\r\n\r\nexport class OFXApplicationContextHolder {\r\n\r\n  private static CURRENT_CONTEXT: OFXApplicationContext = new DefaultApplicationContext(\"Money\", \"1600\"); //some apps fail unless you're Quicken or Money...\r\n\r\n  /**\r\n   * Get the current (thread-safe) context.\r\n   *\r\n   * @return The thread-safe context.\r\n   */\r\n  public static getCurrentContext(): OFXApplicationContext {\r\n    //todo: implement a strategy (perhaps for thread-local access or something)?\r\n    return this.CURRENT_CONTEXT;\r\n  }\r\n\r\n  /**\r\n   * Set the current context.\r\n   *\r\n   * @param context The context.\r\n   */\r\n  public static setCurrentContext(context: OFXApplicationContext): void {\r\n    this.CURRENT_CONTEXT = context;\r\n  }\r\n}\r\n","\r\n/**\r\n * The message set type, used to define message set order in the envelope.\r\n *\r\n * @see \"Section 2.4.5.2, OFX spec\"\r\n */\r\nexport enum MessageSetType {\r\n\r\n  signon,\r\n\r\n  signup,\r\n\r\n  banking,\r\n\r\n  creditcard,\r\n\r\n  investment,\r\n\r\n  interbank_transfer,\r\n\r\n  wire_transfer,\r\n\r\n  payments,\r\n\r\n  email,\r\n\r\n  investment_security,\r\n\r\n  profile,\r\n\r\n  tax1099\r\n\r\n}\r\n","\r\n/**\r\n * @see \"OFX Spec, Section 11.3.1.1\"\r\n */\r\nexport enum AccountType {\r\n\r\n  CHECKING,\r\n\r\n  SAVINGS,\r\n\r\n  MONEYMRKT,\r\n\r\n  CREDITLINE\r\n\r\n}\r\n","import { ok as assert } from \"assert\";\r\n\r\nexport interface CompareFcn<T> {\r\n\t(a: T, b: T): number;\r\n}\r\n\r\n\r\nexport class SortedSet<T> {\r\n\tprivate valueArray: Array<T>;\r\n\tprivate compareFcn: CompareFcn<T>;\r\n\tprivate isSorted: boolean;\r\n\r\n\tconstructor(compareFcn: CompareFcn<T>) {\r\n\t\tthis.valueArray = [];\r\n\t\tthis.compareFcn = compareFcn;\r\n\t}\r\n\r\n\tvalues(): Array<T> {\r\n\t\tif(!this.isSorted) {\r\n\t\t\tassert(this.compareFcn);\r\n\t\t\tthis.valueArray.sort(this.compareFcn);\r\n\t\t\tthis.isSorted = true;\r\n\t\t}\r\n\t\treturn this.valueArray;\r\n\t}\r\n\r\n\tinsert(element: T): void {\r\n\t\tvar index: number = this.valueArray.indexOf(element);\r\n\t\tif(index == -1) {\r\n\t\t\tthis.isSorted = false;\r\n\t\t\tthis.valueArray.push(element);\r\n\t\t}\r\n\t}\r\n\r\n\tpush(element: T): void {\r\n\t\tthis.insert(element);\r\n\t}\r\n\r\n\tremove(element: T): boolean {\r\n\t\tvar index: number = this.valueArray.indexOf(element);\r\n\t\tif(index == -1) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tthis.valueArray = this.valueArray.splice(index, 1);\r\n\t}\r\n\r\n\tcount(): number {\r\n\t\treturn this.valueArray.length;\r\n\t}\r\n}\r\n","/**\r\n * convenience function to supply a default value if the given value is not specified\r\n */\r\nexport function _default<T>(value: T, defaultValue: T): T {\r\n  return (typeof value !== 'undefined') ? value : defaultValue;\r\n}\r\n\r\n\r\nexport function isAssignableFrom(entryType: any, assignableTo: any) {\r\n  return (assignableTo === entryType) ||\r\n    ((typeof entryType === \"function\") && (assignableTo.prototype instanceof entryType));\r\n};\r\n\r\n\r\n/**\r\n * a function called on an object instance that will return the desired property value\r\n */\r\nexport interface ReadMethod<Type> {\r\n\t(): Type;\r\n}\r\n\r\n\r\n/**\r\n * a function called on an object instance that will set the desired property value\r\n */\r\nexport interface WriteMethod<Type> {\r\n\t(value: Type): void;\r\n}\r\n\r\n\r\n/**\r\n * parameters used to create a PropertyDescriptor\r\n */\r\nexport interface PropertyDescriptorParams<T> {\r\n\ttype: any;\r\n\tread: ReadMethod<T>;\r\n\twrite: WriteMethod<T>;\r\n}\r\n\r\n\r\n/**\r\n * an interface to read and write a value into an object\r\n */\r\nexport abstract class PropertyDescriptor {\r\n\tprivate propertyType: any;\r\n\tprivate readMethod: ReadMethod<any>;\r\n\tprivate writeMethod: WriteMethod<any>;\r\n\r\n\tconstructor(params: PropertyDescriptorParams<any>) {\r\n\t\tthis.propertyType = params.type;\r\n\t\tthis.readMethod = params.read;\r\n\t\tthis.writeMethod = params.write;\r\n\t}\r\n\r\n\tpublic getPropertyType(): any {\r\n\t\treturn this.propertyType;\r\n\t}\r\n\r\n\tpublic getReadMethod(): ReadMethod<any> {\r\n\t\treturn this.readMethod;\r\n\t}\r\n\r\n\tpublic getWriteMethod(): WriteMethod<any> {\r\n\t\treturn this.writeMethod;\r\n\t}\r\n}\r\n","import { PropertyDescriptorParams, PropertyDescriptor, _default } from \"./PropertyDescriptor\";\r\n\r\n\r\nexport interface ChildAggregateParams<T> extends PropertyDescriptorParams<T> {\r\n  order: number;\r\n  name?: string;\r\n  required?: boolean;\r\n  collectionEntryType?: any;\r\n}\r\n\r\n\r\n/**\r\n * Marks a method as providing a child aggregate (or set of them to a top-level aggregate).\r\n */\r\nexport class ChildAggregate extends PropertyDescriptor {\r\n  private _name: string;\r\n  private _required: boolean;\r\n  private _order: number;\r\n  private _collectionEntryType: any;\r\n\r\n  constructor(params: ChildAggregateParams<any>) {\r\n    super(params);\r\n    this._order = params.order;\r\n    this._name = _default(params.name, \"##not_specified##\");\r\n    this._required = _default(params.required, false);\r\n    this._collectionEntryType = _default(params.collectionEntryType, null);\r\n  }\r\n\r\n  /**\r\n   * Used to specify the name of the aggregate in its context as a child aggregate.\r\n   *\r\n   * @return Used to specify the name of the aggregate in its context as a child aggregate.\r\n   */\r\n  public name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  /**\r\n   * Whether this aggregate is required.\r\n   *\r\n   * @return Whether this aggregate is required.\r\n   */\r\n  public required(): boolean {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * The order this child aggregate comes in its parent aggregate.\r\n   *\r\n   * @return The order this child aggregate comes in its parent aggregate.\r\n   */\r\n  public order(): number {\r\n    return this._order;\r\n  }\r\n\r\n  /**\r\n   * If the type is a collection, return the type of the elements of the collection (otherwise null)\r\n   */\r\n  public collectionEntryType(): any {\r\n    return this._collectionEntryType;\r\n  }\r\n}\r\n","import { PropertyDescriptorParams, PropertyDescriptor, _default } from \"./PropertyDescriptor\";\r\n\r\n\r\nexport interface ElementParams<T> extends PropertyDescriptorParams<T> {\r\n  order: number;\r\n  name: string;\r\n  required?: boolean;\r\n  collectionEntryType?: any;\r\n}\r\n\r\n\r\n/**\r\n * An OFX element, applied to a javabean property.\r\n */\r\nexport class Element extends PropertyDescriptor {\r\n  private _name: string;\r\n  private _required: boolean;\r\n  private _order: number;\r\n  private _collectionEntryType: any;\r\n\r\n  constructor(params: ElementParams<any>) {\r\n    super(params);\r\n    this._name = params.name;\r\n    this._required = _default(params.required, false);\r\n    this._order = params.order;\r\n    this._collectionEntryType = _default(params.collectionEntryType, null);\r\n  }\r\n\r\n  /**\r\n   * The name of the element.\r\n   *\r\n   * @return The name of the element.\r\n   */\r\n  public name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  /**\r\n   * Whether this element is required.\r\n   *\r\n   * @return Whether this element is required.\r\n   */\r\n  public required(): boolean {\r\n    return this._required;\r\n  }\r\n\r\n  /**\r\n   * The order this element comes in its parent aggregate.\r\n   *\r\n   * @return The order this element comes in its parent aggregate.\r\n   */\r\n  public order(): number {\r\n    return this._order;\r\n  }\r\n\r\n  /**\r\n   * If the type is a collection, return the type of the elements of the collection (otherwise null)\r\n   */\r\n  public collectionEntryType(): any {\r\n    return this._collectionEntryType;\r\n  }\r\n}\r\n","import { ok as assert } from \"assert\";\r\nimport { ChildAggregate } from '../meta/ChildAggregate';\r\nimport { Element } from '../meta/Element';\r\nimport { ReadMethod, WriteMethod } from '../meta/PropertyDescriptor';\r\nimport { SortedSet } from '../collections/SortedSet';\r\nimport { AggregateInfo } from './AggregateInfo';\r\nimport { OFXException } from '../OFXException';\r\nimport { AggregateIntrospector } from './AggregateIntrospector';\r\n\r\n\r\nexport enum AggregateAttributeType {\r\n  CHILD_AGGREGATE,\r\n  ELEMENT\r\n}\r\n\r\n\r\n/**\r\n * A generic descriptor for an attribute of an OFX aggregate.\r\n */\r\nexport class AggregateAttribute {\r\n\r\n  private readMethod: ReadMethod<any>;\r\n  private writeMethod: WriteMethod<any>;\r\n  private attributeType: any;\r\n  private collectionEntryType: any;\r\n  private name: string;\r\n  private order: number;\r\n  private required: boolean;\r\n  private type: AggregateAttributeType;\r\n  private toString_: string;\r\n  private collection: boolean;\r\n\r\n  constructor(arg: Element | ChildAggregate) {\r\n    if(arg instanceof Element) {\r\n      this.AggregateAttributeFromElement(arg);\r\n    } else if(arg instanceof ChildAggregate) {\r\n      this.AggregateAttributeFromChildAggregate(arg);\r\n    } else {\r\n      throw new OFXException(\"invalid type\");\r\n    }\r\n  }\r\n\r\n  AggregateAttributeFromElement(elementInfo: Element) {\r\n    this.readMethod = elementInfo.getReadMethod();\r\n    this.writeMethod = elementInfo.getWriteMethod();\r\n    if (this.readMethod == null) {\r\n      throw new OFXException(\"Illegal property for aggregate: no read method.\");\r\n    }\r\n    else if (this.writeMethod == null) {\r\n      throw new OFXException(\"Illegal property for aggregate: no write method.\");\r\n    }\r\n\r\n    this.attributeType = elementInfo.getPropertyType();\r\n    this.collectionEntryType = null;\r\n    this.name = elementInfo.name();\r\n    this.order = elementInfo.order();\r\n    this.required = elementInfo.required();\r\n    this.type = AggregateAttributeType.ELEMENT;\r\n    this.toString_ = \"Element '\" + this.name + \"'\";\r\n    this.collection = false;\r\n\r\n    //todo: validate known/supported element types here?\r\n  }\r\n\r\n  AggregateAttributeFromChildAggregate(childAggregate: ChildAggregate) {\r\n    this.readMethod = childAggregate.getReadMethod();\r\n    this.writeMethod = childAggregate.getWriteMethod();\r\n    if (this.readMethod == null) {\r\n      throw new OFXException(\"Illegal property for aggregate: no read method.\");\r\n    }\r\n    else if (this.writeMethod == null) {\r\n      throw new OFXException(\"Illegal property for aggregate: no write method.\");\r\n    }\r\n\r\n    this.attributeType = childAggregate.getPropertyType();\r\n    this.collection = false;\r\n    if (childAggregate.collectionEntryType()) {\r\n      this.collection = true;\r\n      this.name = null;\r\n      this.collectionEntryType = childAggregate.collectionEntryType();\r\n    }\r\n    else if (\"##not_specified##\" === childAggregate.name()) {\r\n      var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(this.attributeType);\r\n      if (aggregateInfo == null) {\r\n        throw new OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': no aggregate information available.\");\r\n      }\r\n\r\n      this.name = aggregateInfo.getName();\r\n      if (\"##not_specified##\" === this.name) {\r\n        throw new OFXException(\"Illegal child aggregate type '\" + childAggregate.getPropertyType() + \"': a child aggregate name must be specified.\");\r\n      }\r\n      this.collectionEntryType = null;\r\n    }\r\n    else {\r\n      this.name = childAggregate.name();\r\n      this.collectionEntryType = null;\r\n    }\r\n\r\n    this.order = childAggregate.order();\r\n    this.required = childAggregate.required();\r\n    this.type = AggregateAttributeType.CHILD_AGGREGATE;\r\n    this.toString_ = \"ChildAggregate '\" + this.name + \"'\";\r\n  }\r\n\r\n  public get(instance: Object) /*throws Exception*/: any {\r\n    let val = this.readMethod.call(instance);\r\n    if (this.attributeType && val in this.attributeType) {\r\n      val = this.attributeType[val]\r\n    }\r\n    return val;\r\n  }\r\n\r\n  public set(value: any, instance: Object) /*throws Exception*/: void {\r\n    if(this.collection) {\r\n      var collection: Array<Object> = this.get(instance);\r\n      if (collection == null) {\r\n        if(this.attributeType === SortedSet) {\r\n          assert(\"contentCompare\" in this.collectionEntryType);\r\n          collection = <any>new SortedSet((<any>this.collectionEntryType).contentCompare);\r\n        } else {\r\n          collection = new this.attributeType();\r\n        }\r\n      }\r\n      collection.push(value);\r\n      value = collection;\r\n    }\r\n\r\n    this.writeMethod.call(instance, value);\r\n  }\r\n\r\n  public getAttributeType(): any {\r\n    return this.attributeType;\r\n  }\r\n\r\n  public getArrayEntryType(): any {\r\n    return this.collectionEntryType;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public isRequired(): boolean {\r\n    return this.required;\r\n  }\r\n\r\n  public getOrder(): number {\r\n    return this.order;\r\n  }\r\n\r\n  public getType(): AggregateAttributeType {\r\n    return this.type;\r\n  }\r\n\r\n  public static contentCompare(left: AggregateAttribute, right: AggregateAttribute): number {\r\n    return left.order - right.order;\r\n  }\r\n\r\n//  public int compareTo(other: AggregateAttribute) {\r\n//    return this.order - other.order;\r\n//  }\r\n\r\n  public isArray(): boolean {\r\n    return this.collection;\r\n  }\r\n\r\n  //@Override\r\n  public toString(): string {\r\n    return this.toString_;\r\n  }\r\n}\r\n","import { ok as assert } from \"assert\";\r\nimport { SortedSet } from '../collections/SortedSet';\r\nimport { ChildAggregate } from '../meta/ChildAggregate';\r\nimport { Element } from '../meta/Element';\r\nimport { Header } from '../meta/Header';\r\nimport { isAssignableFrom } from '../meta/PropertyDescriptor';\r\nimport { AggregateAttribute } from './AggregateAttribute';\r\n\r\nexport interface HeaderMap {\r\n  [key: string]: Header;\r\n}\r\n\r\nexport interface HeaderValues {\r\n  [key: string]: Object;\r\n}\r\n\r\n/**\r\n * Holder for meta information about an aggregate class.\r\n */\r\nexport class AggregateInfo {\r\n\r\n  private name: string;\r\n  private attributes: SortedSet<AggregateAttribute>;\r\n  private headers: HeaderMap;\r\n  private owner: any;\r\n\r\n  constructor(name: string, owner: any, parentInfo?: AggregateInfo) {\r\n    this.name = name;\r\n    this.owner = owner;\r\n    this.headers = {};\r\n    this.attributes = new SortedSet<AggregateAttribute>(AggregateAttribute.contentCompare);\r\n\r\n    if(parentInfo) {\r\n      for(var header in parentInfo.headers) {\r\n        this.headers[header] = parentInfo.headers[header];\r\n      }\r\n      var parentAttributes: Array<AggregateAttribute> = parentInfo.attributes.values();\r\n      for(var i in parentAttributes) {\r\n        var attribute: AggregateAttribute = parentAttributes[i];\r\n        this.attributes.insert(attribute);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The name of the aggregate.\r\n   *\r\n   * @return The name of the aggregate.\r\n   */\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public setName(name: string): void {\r\n    this.name = name;\r\n  }\r\n\r\n  public getOwner(): any {\r\n    return this.owner;\r\n  }\r\n\r\n  /**\r\n   * The attributes.\r\n   *\r\n   * @return The attributes.\r\n   */\r\n  public getAttributes(): SortedSet<AggregateAttribute> {\r\n    return this.attributes;\r\n  }\r\n\r\n  /**\r\n   * Get the attribute by the specified name.\r\n   *\r\n   * @param name The name of the attribute.\r\n   * @param orderHint The order at which the attribute should come after in case there are more than one candidates.\r\n   * @param assignableTo The class this attribute must be assignable to\r\n   * @return The attribute by the specified name,\r\n   * or if there are more than one by that name,\r\n   * the first one after the specified order,\r\n   * or if there are none then the first collection that\r\n   * comes after the order hint, or the latest if there\r\n   * are none that come after the order hint, or null.\r\n   */\r\n  public getAttribute(name: string, orderHint: number, assignableTo: any = null): AggregateAttribute {\r\n    var candidates: Array<AggregateAttribute> = new Array<AggregateAttribute>();\r\n    var collectionBucket: AggregateAttribute = null;\r\n    for (var i in this.attributes.values()) {\r\n      var attribute: AggregateAttribute = this.attributes.values()[i];\r\n      if (name === attribute.getName()) {\r\n        candidates.push(attribute);\r\n      }\r\n      else if (attribute.isArray()) {\r\n        if (assignableTo != null) {\r\n          // Verify it's the right generic type.\r\n          var entryType: any = attribute.getArrayEntryType();\r\n          if (entryType != null && !isAssignableFrom(entryType, assignableTo)) {\r\n            // Array is of wrong type.\r\n            continue;\r\n          }\r\n        }\r\n        if (collectionBucket == null || collectionBucket.getOrder() < orderHint) {\r\n          //the default is the first collection that comes after the order hint, or the latest if there are none that come after the order hint.\r\n          collectionBucket = attribute;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (candidates.length != 0) {\r\n      if (candidates.length == 1) {\r\n        return candidates[0];\r\n      }\r\n      else {\r\n        for (var candidate of candidates) {\r\n          if (candidate.getOrder() >= orderHint) {\r\n            return candidate;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return collectionBucket;\r\n  }\r\n\r\n  /**\r\n   * Whether this aggregate has headers.\r\n   *\r\n   * @return Whether this aggregate has headers.\r\n   */\r\n  public hasHeaders(): boolean {\r\n    return Object.keys(this.headers).length != 0;\r\n  }\r\n\r\n  /**\r\n   * Get the headers defined by the specific aggregate instance.\r\n   *\r\n   * @param instance The aggregate instance.\r\n   * @return The headers.\r\n   */\r\n  public getHeaders(instance: Object): HeaderValues {\r\n    var headers: HeaderValues = {};\r\n    for (var headerKey in this.headers) {\r\n      var header: Header = this.headers[headerKey];\r\n      var headerValue: Object = header.getReadMethod().call(instance);\r\n      headers[header.name()] = headerValue;\r\n    }\r\n    return headers;\r\n  }\r\n\r\n  /**\r\n   * The type of the specified header.\r\n   *\r\n   * @param name The header name.\r\n   * @return The header type, or null if no header by the specified name exists.\r\n   */\r\n  public getHeaderType(name: string): any {\r\n    return (name in this.headers) ? this.headers[name].getPropertyType() : null;\r\n  }\r\n\r\n  /**\r\n   * Set the header value for the specified instance.\r\n   *\r\n   * @param instance The instance.\r\n   * @param name     The name of the header.\r\n   * @param value    the value of the header.\r\n   */\r\n  public setHeader(instance: Object, name: string, value: Object): void {\r\n    if (name in this.headers) {\r\n      this.headers[name].getWriteMethod().call(instance, value);\r\n    }\r\n  }\r\n\r\n\r\n  public addChildAggregate(childAggregate: ChildAggregate): void {\r\n    var attribute = new AggregateAttribute(childAggregate);\r\n    this.attributes.insert(attribute);\r\n  }\r\n\r\n  public addElement(element: Element): void {\r\n    var attribute = new AggregateAttribute(element);\r\n    this.attributes.insert(attribute);\r\n  }\r\n\r\n  public addHeader(header: Header): void {\r\n    assert(header.name());\r\n    this.headers[header.name()] = header;\r\n  }\r\n}\r\n","import { ok as assert } from \"assert\";\r\nimport { ChildAggregate } from '../meta/ChildAggregate';\r\nimport { Header } from '../meta/Header';\r\nimport { Element } from '../meta/Element';\r\nimport { AggregateInfo } from './AggregateInfo';\r\nimport { AnyMap } from '../collections/collections';\r\n\r\n\r\n/**\r\n * Introspector for aggregate information.\r\n */\r\nexport class AggregateIntrospector {\r\n\r\n  private static AGGREGATE_CLASSES_BY_NAME: AnyMap = {};\r\n  private static placeholderName = \"##PLACEHOLDER##\";\r\n\r\n  /**\r\n   * Get the aggregate meta information for the specified class.\r\n   *\r\n   * @param clazz the aggregate class.\r\n   * @return The aggregate meta information, or null if the class isn't an aggregate.\r\n   */\r\n  public static getAggregateInfo(clazz: any): AggregateInfo {\r\n    var aggregate: AggregateInfo = clazz.Aggregate;\r\n    if(aggregate != null && aggregate.getOwner() === clazz) {\r\n      return aggregate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private static getAncestorAggregateInfo(clazz: Function): AggregateInfo {\r\n    // traverse inheritence hierarchy.  This is janky because of typescript's __extends function, and may break in the future\r\n    for(var proto: Function = clazz.prototype; proto; proto = Object.getPrototypeOf(proto)) {\r\n      if((<any>proto).constructor && (<any>proto).constructor.Aggregate) {\r\n        return (<any>proto).constructor.Aggregate;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Find the aggregate class by name.\r\n   *\r\n   * @param aggregateName The name of the aggregate.\r\n   * @return The aggregate class.\r\n   */\r\n  public static findAggregateByName(aggregateName: string): any {\r\n    return AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[aggregateName];\r\n  }\r\n\r\n  public static addAggregate(clazz: any, name: string) {\r\n    AggregateIntrospector.AGGREGATE_CLASSES_BY_NAME[name] = clazz;\r\n\r\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\r\n    if(aggregateInfo) {\r\n      assert(aggregateInfo.getName() === AggregateIntrospector.placeholderName);\r\n      aggregateInfo.setName(name);\r\n    } else {\r\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\r\n      clazz.Aggregate = new AggregateInfo(name, clazz, parentInfo);\r\n    }\r\n  }\r\n\r\n  public static addChildAggregate(clazz: any, childAggregate: ChildAggregate) {\r\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\r\n    if(!aggregateInfo) {\r\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\r\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\r\n    }\r\n    assert(aggregateInfo != null);\r\n    if(aggregateInfo) {\r\n      aggregateInfo.addChildAggregate(childAggregate);\r\n    }\r\n  }\r\n\r\n  public static addElement(clazz: any, element: Element) {\r\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\r\n    if(!aggregateInfo) {\r\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\r\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\r\n    }\r\n    assert(aggregateInfo != null);\r\n    if(aggregateInfo) {\r\n      aggregateInfo.addElement(element);\r\n    }\r\n  }\r\n\r\n  public static addHeader(clazz: any, header: Header) {\r\n    var aggregateInfo = AggregateIntrospector.getAggregateInfo(clazz);\r\n    if(!aggregateInfo) {\r\n      var parentInfo: AggregateInfo = AggregateIntrospector.getAncestorAggregateInfo(clazz);\r\n      aggregateInfo = clazz.Aggregate = new AggregateInfo(AggregateIntrospector.placeholderName, clazz, parentInfo);\r\n    }\r\n    assert(aggregateInfo != null);\r\n    if(aggregateInfo) {\r\n      aggregateInfo.addHeader(header);\r\n    }\r\n  }\r\n}\r\n","import { AggregateIntrospector } from \"../io/AggregateIntrospector\";\r\n\r\nexport function Aggregate_add(clazz: Object, value: string = \"#NOT_SET#\"): void {\r\n  AggregateIntrospector.addAggregate(clazz, value);\r\n}\r\n","import { ok as assert } from \"assert\";\r\nimport { ElementParams, Element } from \"./Element\";\r\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\r\n\r\n\r\nexport function Element_add<Type>(clazz: any, params: ElementParams<Type>): void {\r\n  assert(params.type != null);\r\n  AggregateIntrospector.addElement(clazz, new Element(params));\r\n}\r\n","import { AccountDetails } from \"../common/AccountDetails\";\r\nimport { AccountType } from \"./AccountType\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Base bank account details.\r\n *\r\n * @see \"OFX Spec, Section 11.3.1\"\r\n */\r\nexport class BankAccountDetails implements AccountDetails {\r\n\r\n  private bankId: string;\r\n  private branchId: string;\r\n  private accountNumber: string;\r\n  private accountType: AccountType;\r\n  private accountKey: string;\r\n\r\n  /**\r\n   * The routing and transit number.\r\n   *\r\n   * @return The routing and transit number.\r\n   */\r\n  public getBankId(): string {\r\n    return this.bankId;\r\n  }\r\n\r\n  /**\r\n   * The routing and transit number.\r\n   *\r\n   * @param bankId The routing and transit number.\r\n   */\r\n  public setBankId(bankId: string): void {\r\n    this.bankId = bankId;\r\n  }\r\n\r\n  /**\r\n   * The routing and transit number.\r\n   *\r\n   * @return The routing and transit number.\r\n   */\r\n  public getRoutingNumber(): string {\r\n    return this.getBankId();\r\n  }\r\n\r\n  /**\r\n   * The routing and transit number.\r\n   *\r\n   * @param routingNumber The routing and transit number.\r\n   */\r\n  public setRoutingNumber(routingNumber: string): void {\r\n    this.setBankId(routingNumber);\r\n  }\r\n\r\n  /**\r\n   * The branch id.\r\n   *\r\n   * @return The branch id.\r\n   */\r\n  public getBranchId(): string {\r\n    return this.branchId;\r\n  }\r\n\r\n  /**\r\n   * The branch id.\r\n   *\r\n   * @param branchId The branch id.\r\n   */\r\n  public setBranchId(branchId: string): void {\r\n    this.branchId = branchId;\r\n  }\r\n\r\n  /**\r\n   * The account number.\r\n   *\r\n   * @return The account number.\r\n   */\r\n  public getAccountNumber(): string {\r\n    return this.accountNumber;\r\n  }\r\n\r\n  /**\r\n   * The account number.\r\n   *\r\n   * @param accountNumber The account number.\r\n   */\r\n  public setAccountNumber(accountNumber: string): void {\r\n    this.accountNumber = accountNumber;\r\n  }\r\n\r\n  /**\r\n   * The account type.\r\n   *\r\n   * @return The account type.\r\n   */\r\n  public getAccountType(): AccountType {\r\n    return this.accountType;\r\n  }\r\n\r\n  /**\r\n   * The account type.\r\n   *\r\n   * @param accountType The account type.\r\n   */\r\n  public setAccountType(accountType: AccountType): void {\r\n    this.accountType = accountType;\r\n  }\r\n\r\n  /**\r\n   * The account key.\r\n   *\r\n   * @return The account key.\r\n   */\r\n  public getAccountKey(): string {\r\n    return this.accountKey;\r\n  }\r\n\r\n  /**\r\n   * The account key.\r\n   *\r\n   * @param accountKey The account key.\r\n   */\r\n  public setAccountKey(accountKey: string): void {\r\n    this.accountKey = accountKey;\r\n  }\r\n}\r\n\r\nAggregate_add( BankAccountDetails );\r\nElement_add(BankAccountDetails, { name: \"BANKID\", required: true, order: 0, type: String, read: BankAccountDetails.prototype.getBankId, write: BankAccountDetails.prototype.setBankId });\r\nElement_add(BankAccountDetails, { name: \"BRANCHID\", order: 10, type: String, read: BankAccountDetails.prototype.getBranchId, write: BankAccountDetails.prototype.setBranchId });\r\nElement_add(BankAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: BankAccountDetails.prototype.getAccountNumber, write: BankAccountDetails.prototype.setAccountNumber });\r\nElement_add(BankAccountDetails, { name: \"ACCTTYPE\", required: true, order: 30, type: AccountType, read: BankAccountDetails.prototype.getAccountType, write: BankAccountDetails.prototype.setAccountType });\r\nElement_add(BankAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: BankAccountDetails.prototype.getAccountKey, write: BankAccountDetails.prototype.setAccountKey });\r\n","import { AccountDetails } from \"../common/AccountDetails\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n *\r\n * @see \"OFX Spec, Section 11.3.2\"\r\n */\r\nexport class CreditCardAccountDetails implements AccountDetails {\r\n\r\n  private accountNumber: string;\r\n  private accountKey: string;\r\n\r\n  /**\r\n   * The account number.\r\n   *\r\n   * @return The account number.\r\n   */\r\n  public getAccountNumber(): string {\r\n    return this.accountNumber;\r\n  }\r\n\r\n  /**\r\n   * The account number.\r\n   *\r\n   * @param accountNumber The account number.\r\n   */\r\n  public setAccountNumber(accountNumber: string): void {\r\n    this.accountNumber = accountNumber;\r\n  }\r\n\r\n  /**\r\n   * The account key.\r\n   *\r\n   * @return The account key.\r\n   */\r\n  public getAccountKey(): string {\r\n    return this.accountKey;\r\n  }\r\n\r\n  /**\r\n   * The account key.\r\n   *\r\n   * @param accountKey The account key.\r\n   */\r\n  public setAccountKey(accountKey: string): void {\r\n    this.accountKey = accountKey;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardAccountDetails );\r\nElement_add(CreditCardAccountDetails, { name: \"ACCTID\", required: true, order: 0, type: String, read: CreditCardAccountDetails.prototype.getAccountNumber, write: CreditCardAccountDetails.prototype.setAccountNumber });\r\nElement_add(CreditCardAccountDetails, { name: \"ACCTKEY\", order: 10, type: String, read: CreditCardAccountDetails.prototype.getAccountKey, write: CreditCardAccountDetails.prototype.setAccountKey });\r\n","import { AccountDetails } from \"../../common/AccountDetails\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Aggregate for the details that identifity a brokerage account.\r\n *\r\n * @see \"OFX Spec, Section 13.6.1\"\r\n */\r\nexport class InvestmentAccountDetails implements AccountDetails {\r\n\r\n  private brokerId: string;\r\n  private accountNumber: string;\r\n  private accountKey: string;\r\n\r\n\r\n  /**\r\n   * Gets the broker id.\r\n   *\r\n   * @return the id of the broker\r\n   */\r\n  public getBrokerId(): string {\r\n    return this.brokerId;\r\n  }\r\n\r\n  /**\r\n   * Sets the broker id.\r\n   *\r\n   * @param brokerId the id of the broker\r\n   */\r\n  public setBrokerId(brokerId: string): void {\r\n    this.brokerId = brokerId;\r\n  }\r\n\r\n  /**\r\n   * Gets the account number.\r\n   *\r\n   * @return the account number\r\n   */\r\n  public getAccountNumber(): string {\r\n    return this.accountNumber;\r\n  }\r\n\r\n  /**\r\n   * Sets the account number.\r\n   *\r\n   * @param accountNumber the account number\r\n   */\r\n  public setAccountNumber(accountNumber: string): void {\r\n    this.accountNumber = accountNumber;\r\n  }\r\n\r\n  /**\r\n   * Gets the account key.\r\n   *\r\n   * @return the account key\r\n   */\r\n  public getAccountKey(): string {\r\n    return this.accountKey;\r\n  }\r\n\r\n  /**\r\n   * Sets the account key.\r\n   *\r\n   * @param accountKey the account key\r\n   */\r\n  public setAccountKey(accountKey: string): void {\r\n    this.accountKey = accountKey;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentAccountDetails );\r\nElement_add(InvestmentAccountDetails, { name: \"BROKERID\", required: true, order: 0, type: String, read: InvestmentAccountDetails.prototype.getBrokerId, write: InvestmentAccountDetails.prototype.setBrokerId });\r\nElement_add(InvestmentAccountDetails, { name: \"ACCTID\", required: true, order: 20, type: String, read: InvestmentAccountDetails.prototype.getAccountNumber, write: InvestmentAccountDetails.prototype.setAccountNumber });\r\nElement_add(InvestmentAccountDetails, { name: \"ACCTKEY\", order: 40, type: String, read: InvestmentAccountDetails.prototype.getAccountKey, write: InvestmentAccountDetails.prototype.setAccountKey });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class StatementRange {\r\n\r\n  private start: Date;\r\n  private end: Date;\r\n  private includeTransactions: boolean;\r\n\r\n  constructor() {\r\n    this.includeTransactions = true;\r\n  }\r\n\r\n  /**\r\n   * The start of the statement range.\r\n   *\r\n   * @return The start of the statement range.\r\n   */\r\n  public getStart(): Date {\r\n    return this.start;\r\n  }\r\n\r\n  /**\r\n   * The start of the statement range.\r\n   *\r\n   * @param start The start of the statement range.\r\n   */\r\n  public setStart(start: Date): void {\r\n    this.start = start;\r\n  }\r\n\r\n  /**\r\n   * The end of the statement range.\r\n   *\r\n   * @return The end of the statement range.\r\n   */\r\n  public getEnd(): Date {\r\n    return this.end;\r\n  }\r\n\r\n  /**\r\n   * The end of the statement range.\r\n   *\r\n   * @param end The end of the statement range.\r\n   */\r\n  public setEnd(end: Date): void {\r\n    this.end = end;\r\n  }\r\n\r\n  /**\r\n   * Whether to include transactions.\r\n   *\r\n   * @return Whether to include transactions.\r\n   */\r\n  public getIncludeTransactions(): boolean {\r\n    return this.includeTransactions;\r\n  }\r\n\r\n  /**\r\n   * Whether to include transactions.\r\n   *\r\n   * @param includeTransactions Whether to include transactions.\r\n   */\r\n  public setIncludeTransactions(includeTransactions: boolean): void {\r\n    this.includeTransactions = includeTransactions;\r\n  }\r\n}\r\n\r\nAggregate_add( StatementRange, \"INCTRAN\" );\r\nElement_add(StatementRange, { name: \"DTSTART\", order: 0, type: Date, read: StatementRange.prototype.getStart, write: StatementRange.prototype.setStart });\r\nElement_add(StatementRange, { name: \"DTEND\", order: 10, type: Date, read: StatementRange.prototype.getEnd, write: StatementRange.prototype.setEnd });\r\nElement_add(StatementRange, { name: \"INCLUDE\", required: true, order: 20, type: Boolean, read: StatementRange.prototype.getIncludeTransactions, write: StatementRange.prototype.setIncludeTransactions });\r\n","import { FinancialInstitutionAccount } from \"../FinancialInstitutionAccount\";\r\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\r\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\r\nimport { BankAccountDetails } from \"../../domain/data/banking/BankAccountDetails\";\r\nimport { CreditCardAccountDetails } from \"../../domain/data/creditcard/CreditCardAccountDetails\";\r\nimport { InvestmentAccountDetails } from \"../../domain/data/investment/accounts/InvestmentAccountDetails\";\r\nimport { OFXException } from \"../../OFXException\";\r\nimport { AccountStatement } from \"../AccountStatement\";\r\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\r\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\r\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\r\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\r\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\r\nimport { StatementResponse } from \"../../domain/data/common/StatementResponse\";\r\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\r\nimport { StatementRequest } from \"../../domain/data/common/StatementRequest\";\r\n\r\n\r\n/**\r\n * Base account implementation. Supports banking and credit card accounts.\r\n */\r\nexport abstract class BaseAccountImpl<D> implements FinancialInstitutionAccount {\r\n\r\n  private details: D;\r\n  private messageType: MessageSetType;\r\n  private username: string;\r\n  private password: string;\r\n  private institution: FinancialInstitutionImpl;\r\n\r\n  constructor(details: D, username: string, password: string, institution: FinancialInstitutionImpl) {\r\n    this.details = details;\r\n    this.username = username;\r\n    this.password = password;\r\n    this.institution = institution;\r\n    this.messageType = this.getMessageSetType(details);\r\n  }\r\n\r\n  /**\r\n   * Get the message set type of the specified details.\r\n   *\r\n   * @param details The details.\r\n   * @return The message set type.\r\n   */\r\n  protected getMessageSetType(details: D): MessageSetType {\r\n    var messageType: MessageSetType;\r\n    if (details instanceof BankAccountDetails) {\r\n      messageType = MessageSetType.banking;\r\n    }\r\n    else if (this.getDetails() instanceof CreditCardAccountDetails) {\r\n      messageType = MessageSetType.creditcard;\r\n    }\r\n    else if (this.getDetails() instanceof InvestmentAccountDetails) {\r\n      messageType = MessageSetType.investment;\r\n    }\r\n    else {\r\n      throw new OFXException(\"Illegal details\");\r\n    }\r\n    return messageType;\r\n  }\r\n\r\n  public readStatement(start: Date, end: Date) /*throws OFXException*/: Promise<AccountStatement> {\r\n    var range: StatementRange = new StatementRange();\r\n    range.setIncludeTransactions(true);\r\n    range.setStart(start);\r\n    range.setEnd(end);\r\n\r\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\r\n    var requestTransaction: TransactionWrappedRequestMessage<RequestMessage> = this.createTransaction();\r\n    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\r\n    request.getMessageSets().insert(this.createRequestMessageSet(requestTransaction));\r\n\r\n    return this.institution.sendRequest(request)\r\n    .then((response: ResponseEnvelope): AccountStatement => {\r\n      this.institution.doGeneralValidationChecks(request, response);\r\n\r\n      return this.unwrapStatementResponse(response);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unwrap the statement response from the specified response envelope.\r\n   *\r\n   * @param response The response envelope to unwrap.\r\n   * @return The response.\r\n   */\r\n  protected abstract unwrapStatementResponse(response: ResponseEnvelope): StatementResponse /*throws OFXException*/;\r\n\r\n  /**\r\n   * Create a request message set from the specified transaction.\r\n   *\r\n   * @param transaction The transaction.\r\n   * @return The request message set.\r\n   */\r\n  protected abstract createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet;\r\n\r\n  /**\r\n   * Create a transaction.\r\n   *\r\n   * @return The transaction.\r\n   */\r\n  protected abstract createTransaction(): TransactionWrappedRequestMessage<RequestMessage>;\r\n\r\n  /**\r\n   * Create a statement request.\r\n   *\r\n   * @param details The details.\r\n   * @param range the range.\r\n   * @return The statement request.\r\n   */\r\n  protected abstract createStatementRequest(details: D, range: StatementRange): StatementRequest;\r\n\r\n  /**\r\n   * The details of this account.\r\n   *\r\n   * @return The details of this account.\r\n   */\r\n  public getDetails(): D {\r\n    return this.details;\r\n  }\r\n\r\n  /**\r\n   * The message set type.\r\n   *\r\n   * @return The message set type.\r\n   */\r\n  protected getMessageType(): MessageSetType {\r\n    return this.messageType;\r\n  }\r\n}\r\n","import { RequestMessage } from \"./RequestMessage\";\r\nimport { MessageSetType } from \"./MessageSetType\";\r\n\r\n\r\n /**\r\n * A message set enclosed in an OFX request envelope.\r\n */\r\nexport abstract class RequestMessageSet /*implements Comparable<RequestMessageSet>*/ {\r\n\r\n  private version: string;\r\n\r\n  public abstract getType(): MessageSetType;\r\n\r\n  constructor() {\r\n    this.version = \"1\";\r\n  }\r\n\r\n  public cast<T extends this>(): T {\r\n    return this as T;\r\n  }\r\n\r\n  /**\r\n   * The version of this request message.\r\n   *\r\n   * @return The version of this request message.\r\n   */\r\n  public getVersion(): string {\r\n    return this.version;\r\n  }\r\n\r\n  /**\r\n   * The version of this request message.\r\n   *\r\n   * @param version The version of this request message.\r\n   */\r\n  public setVersion(version: string): void {\r\n    this.version = version;\r\n  }\r\n\r\n  /**\r\n   * The request messages for this request message set.\r\n   *\r\n   * @return The request messages for this request message set.\r\n   */\r\n  public abstract getRequestMessages(): Array<RequestMessage>;\r\n\r\n  // Inherited.\r\n  /*public compareTo(o: RequestMessageSet): number {\r\n    return getType().compareTo(o.getType());\r\n  }*/\r\n\r\n  public static contentCompare(left: RequestMessageSet, right: RequestMessageSet): number {\r\n    return left.getType() - right.getType();\r\n  }\r\n\r\n}\r\n","\r\n/**\r\n * A message applicable to a request message set.\r\n */\r\nexport abstract class RequestMessage {\r\n}\r\n","import * as UUID from 'uuid'\r\nimport { RequestMessage } from './RequestMessage';\r\nimport { Element_add } from '../../meta/Element_add';\r\n\r\n/**\r\n * A request message wrapped in a transaction.\r\n *\r\n * @see \"Section 2.4.6, OFX Spec\"\r\n */\r\nexport abstract class TransactionWrappedRequestMessage<M extends RequestMessage> extends RequestMessage {\r\n\r\n  private UID: string;\r\n  private clientCookie: string;\r\n  private transactionAuthorizationNumber: string;\r\n\r\n  constructor(UID: string = UUID.v1()) {\r\n    super();\r\n    this.UID = UID;\r\n  }\r\n\r\n  /**\r\n   * UID of this transaction.\r\n   *\r\n   * @return UID of this transaction.\r\n   */\r\n  public getUID(): string {\r\n    return this.UID;\r\n  }\r\n\r\n  /**\r\n   * UID of this transaction.\r\n   *\r\n   * @param UID UID of this transaction.\r\n   */\r\n  public setUID(UID: string): void {\r\n    this.UID = UID;\r\n  }\r\n\r\n  /**\r\n   * Client cookie (echoed back by the response).\r\n   *\r\n   * @return Client cookie (echoed back by the response).\r\n   */\r\n  public getClientCookie(): string {\r\n    return this.clientCookie;\r\n  }\r\n\r\n  /**\r\n   * Client cookie (echoed back by the response).\r\n   *\r\n   * @param clientCookie Client cookie (echoed back by the response).\r\n   */\r\n  public setClientCookie(clientCookie: string): void {\r\n    this.clientCookie = clientCookie;\r\n  }\r\n\r\n  /**\r\n   * The transaction authorization number.\r\n   *\r\n   * @return The transaction authorization number.\r\n   */\r\n  public getTransactionAuthorizationNumber(): string {\r\n    return this.transactionAuthorizationNumber;\r\n  }\r\n\r\n  /**\r\n   * The transaction authorization number.\r\n   *\r\n   * @param transactionAuthorizationNumber The transaction authorization number.\r\n   */\r\n  public setTransactionAuthorizationNumber(transactionAuthorizationNumber: string): void {\r\n    this.transactionAuthorizationNumber = transactionAuthorizationNumber;\r\n  }\r\n\r\n  /**\r\n   * Set the wrapped message.\r\n   *\r\n   * @param message The wrapped message.\r\n   */\r\n  public abstract setWrappedMessage(message: M): void;\r\n\r\n}\r\n\r\nElement_add(TransactionWrappedRequestMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedRequestMessage.prototype.getUID, write: TransactionWrappedRequestMessage.prototype.setUID });\r\nElement_add(TransactionWrappedRequestMessage, { name: \"CLTCOOKIE\", order: 10, type: String, read: TransactionWrappedRequestMessage.prototype.getClientCookie, write: TransactionWrappedRequestMessage.prototype.setClientCookie });\r\nElement_add(TransactionWrappedRequestMessage, { name: \"TAN\", order: 20, type: String, read: TransactionWrappedRequestMessage.prototype.getTransactionAuthorizationNumber, write: TransactionWrappedRequestMessage.prototype.setTransactionAuthorizationNumber });\r\n","import { ok as assert } from \"assert\";\r\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\r\nimport { ChildAggregate, ChildAggregateParams } from \"./ChildAggregate\";\r\n\r\nexport function ChildAggregate_add<Type>(clazz: any, params: ChildAggregateParams<Type>): void {\r\n  assert(params.type != null);\r\n  AggregateIntrospector.addChildAggregate(clazz, new ChildAggregate(params));\r\n}\r\n","import { RequestMessage } from \"../RequestMessage\";\r\nimport { StatementRange } from \"./StatementRange\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class StatementRequest extends RequestMessage {\r\n\r\n  private statementRange: StatementRange;\r\n\r\n  /**\r\n   * The statement range.\r\n   *\r\n   * @return The statement range.\r\n   */\r\n  public getStatementRange(): StatementRange {\r\n    return this.statementRange;\r\n  }\r\n\r\n  /**\r\n   * The statement range.\r\n   *\r\n   * @param statementRange The statement range.\r\n   */\r\n  public setStatementRange(statementRange: StatementRange): void {\r\n    this.statementRange = statementRange;\r\n  }\r\n}\r\n\r\nAggregate_add( StatementRequest, \"STMTRQ\" );\r\nChildAggregate_add(StatementRequest, { name: \"INCTRAN\", required: false, order: 10, type: StatementRange, read: StatementRequest.prototype.getStatementRange, write: StatementRequest.prototype.setStatementRange });\r\n","import { StatementRequest } from \"../common/StatementRequest\";\r\nimport { BankAccountDetails } from \"./BankAccountDetails\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BankStatementRequest extends StatementRequest {\r\n\r\n  private account: BankAccountDetails;\r\n\r\n  /**\r\n   * The account details.\r\n   *\r\n   * @return The account details.\r\n   */\r\n  public getAccount(): BankAccountDetails {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * The account details.\r\n   *\r\n   * @param account The account details.\r\n   */\r\n  public setAccount(account: BankAccountDetails): void {\r\n    this.account = account;\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( BankStatementRequest, \"STMTRQ\" );\r\nChildAggregate_add(BankStatementRequest, { name: \"BANKACCTFROM\", required: true, order: 0, type: BankAccountDetails, read: BankStatementRequest.prototype.getAccount, write: BankStatementRequest.prototype.setAccount });\r\n","import { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\r\nimport { BankStatementRequest } from \"./BankStatementRequest\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BankStatementRequestTransaction extends TransactionWrappedRequestMessage<BankStatementRequest> {\r\n\r\n  private message: BankStatementRequest;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): BankStatementRequest {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   *\r\n   */\r\n  public setMessage(message: BankStatementRequest): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(message: BankStatementRequest): void {\r\n    this.setMessage(message);\r\n  }\r\n}\r\n\r\nAggregate_add( BankStatementRequestTransaction, \"STMTTRNRQ\" );\r\nChildAggregate_add(BankStatementRequestTransaction, { required: true, order: 30, type: BankStatementRequest, read: BankStatementRequestTransaction.prototype.getMessage, write: BankStatementRequestTransaction.prototype.setMessage });\r\n","import { RequestMessageSet } from \"../RequestMessageSet\";\r\nimport { BankStatementRequestTransaction } from \"./BankStatementRequestTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BankingRequestMessageSet extends RequestMessageSet {\r\n\r\n  private statementRequest: BankStatementRequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.banking;\r\n  }\r\n\r\n  /**\r\n   * The statement request.\r\n   *\r\n   * @return The statement request.\r\n   */\r\n  public getStatementRequest(): BankStatementRequestTransaction {\r\n    return this.statementRequest;\r\n  }\r\n\r\n  /**\r\n   * The statement request.\r\n   *\r\n   * @param statementRequest The statement request.\r\n   */\r\n  public setStatementRequest(statementRequest: BankStatementRequestTransaction): void {\r\n    this.statementRequest = statementRequest;\r\n  }\r\n\r\n  // Inherited.\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var requestMessages: Array<RequestMessage> = [];\r\n    if (this.getStatementRequest() != null) {\r\n      requestMessages.push(this.getStatementRequest());\r\n    }\r\n    return requestMessages;\r\n  }\r\n}\r\n\r\nAggregate_add( BankingRequestMessageSet, \"BANKMSGSRQV1\" );\r\nChildAggregate_add(BankingRequestMessageSet, { order: 0, type: BankStatementRequestTransaction, read: BankingRequestMessageSet.prototype.getStatementRequest, write: BankingRequestMessageSet.prototype.setStatementRequest });\r\n","import { BaseAccountImpl } from \"./BaseAccountImpl\";\r\nimport { BankAccountDetails } from \"../../domain/data/banking/BankAccountDetails\";\r\nimport { BankAccount } from \"../BankAccount\";\r\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\r\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\r\nimport { StatementResponse } from \"../../domain/data/common/StatementResponse\";\r\nimport { BankingResponseMessageSet } from \"../../domain/data/banking/BankingResponseMessageSet\";\r\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\r\nimport { OFXException } from \"../../OFXException\";\r\nimport { BankStatementResponseTransaction } from \"../../domain/data/banking/BankStatementResponseTransaction\";\r\nimport { BankStatementResponse } from \"../../domain/data/banking/BankStatementResponse\";\r\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\r\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\r\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\r\nimport { BankingRequestMessageSet } from \"../../domain/data/banking/BankingRequestMessageSet\";\r\nimport { BankStatementRequestTransaction } from \"../../domain/data/banking/BankStatementRequestTransaction\";\r\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\r\nimport { StatementRequest } from \"../../domain/data/common/StatementRequest\";\r\nimport { BankStatementRequest } from \"../../domain/data/banking/BankStatementRequest\";\r\n\r\n\r\nexport class BankingAccountImpl extends BaseAccountImpl<BankAccountDetails> implements BankAccount {\r\n\r\n  constructor(details: BankAccountDetails, username: string, password: string, institution: FinancialInstitutionImpl) {\r\n    super(details, username, password, institution);\r\n  }\r\n\r\n  protected unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: StatementResponse {\r\n    var bankingSet: BankingResponseMessageSet = <BankingResponseMessageSet> response.getMessageSet(MessageSetType.banking);\r\n    if (bankingSet == null) {\r\n      throw new OFXException(\"No banking response message set.\");\r\n    }\r\n\r\n    var statementTransactionResponse: BankStatementResponseTransaction = bankingSet.getStatementResponse();\r\n    if (statementTransactionResponse == null) {\r\n      throw new OFXException(\"No banking statement response transaction.\");\r\n    }\r\n\r\n    var statement: BankStatementResponse = statementTransactionResponse.getMessage();\r\n    if (statement == null) {\r\n      throw new OFXException(\"No banking statement in the transaction.\");\r\n    }\r\n\r\n    return statement;\r\n  }\r\n\r\n  protected createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet {\r\n    var bankingRequest: BankingRequestMessageSet = new BankingRequestMessageSet();\r\n    bankingRequest.setStatementRequest(<BankStatementRequestTransaction> transaction);\r\n    return bankingRequest;\r\n  }\r\n\r\n  protected createTransaction(): TransactionWrappedRequestMessage<RequestMessage> {\r\n    return new BankStatementRequestTransaction();\r\n  }\r\n\r\n  protected createStatementRequest(details: BankAccountDetails, range: StatementRange): StatementRequest {\r\n    var bankRequest: BankStatementRequest = new BankStatementRequest();\r\n    bankRequest.setAccount(details);\r\n    bankRequest.setStatementRange(range);\r\n    return bankRequest;\r\n  }\r\n\r\n}\r\n","import { FinancialInstitutionData } from \"../FinancialInstitutionData\";\r\n\r\n\r\n//import java.net.URL;\r\n\r\n/**\r\n * Base bean for FI data.\r\n */\r\nexport class BaseFinancialInstitutionData implements FinancialInstitutionData {\r\n\r\n  private id: string;\r\n  private fid: string;\r\n  private name: string;\r\n  private organization: string;\r\n  private ofxUrl: string;\r\n  private brokerId: string;\r\n\r\n  public constructor(id?: string) {\r\n    this.id = id;\r\n  }\r\n\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  public setId(id: string): void {\r\n    this.id = id;\r\n  }\r\n\r\n  public getFinancialInstitutionId(): string {\r\n    return this.fid;\r\n  }\r\n\r\n  public setFinancialInstitutionId(id: string): void {\r\n    this.fid = id;\r\n  }\r\n\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  public setName(name: string): void {\r\n    this.name = name;\r\n  }\r\n\r\n  public getOrganization(): string {\r\n    return this.organization;\r\n  }\r\n\r\n  public setOrganization(organization: string): void {\r\n    this.organization = organization;\r\n  }\r\n\r\n  public getOFXURL(): string {\r\n    return this.ofxUrl;\r\n  }\r\n\r\n  public setOFXURL(OFXURL: string): void {\r\n    this.ofxUrl = OFXURL;\r\n  }\r\n\r\n  public getBrokerId(): string {\r\n    return this.brokerId;\r\n  }\r\n\r\n  public setBrokerId(brokerId: string): void {\r\n    this.brokerId = brokerId;\r\n  }\r\n}\r\n","import { StatementRequest } from \"../common/StatementRequest\";\r\nimport { CreditCardAccountDetails } from \"./CreditCardAccountDetails\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class CreditCardStatementRequest extends StatementRequest {\r\n\r\n  private account: CreditCardAccountDetails;\r\n\r\n  /**\r\n   * The account details.\r\n   *\r\n   * @return The account details.\r\n   */\r\n  public getAccount(): CreditCardAccountDetails {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * The account details.\r\n   *\r\n   * @param account The account details.\r\n   */\r\n  public setAccount(account: CreditCardAccountDetails): void {\r\n    this.account = account;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardStatementRequest, \"CCSTMTRQ\" );\r\nChildAggregate_add(CreditCardStatementRequest, { name: \"CCACCTFROM\", required: true, order: 0, type: CreditCardAccountDetails, read: CreditCardStatementRequest.prototype.getAccount, write: CreditCardStatementRequest.prototype.setAccount });\r\n","import { CreditCardStatementRequest } from \"./CreditCardStatementRequest\";\r\nimport { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class CreditCardStatementRequestTransaction extends TransactionWrappedRequestMessage<CreditCardStatementRequest> {\r\n\r\n  private message: CreditCardStatementRequest;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): CreditCardStatementRequest {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   *\r\n   */\r\n  public setMessage(message: CreditCardStatementRequest): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(message: CreditCardStatementRequest): void {\r\n    this.setMessage(message);\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardStatementRequestTransaction, \"CCSTMTTRNRQ\" );\r\nChildAggregate_add(CreditCardStatementRequestTransaction, { required: true, order: 30, type: CreditCardStatementRequest, read: CreditCardStatementRequestTransaction.prototype.getMessage, write: CreditCardStatementRequestTransaction.prototype.setMessage });\r\n","import { RequestMessageSet } from \"../RequestMessageSet\";\r\nimport { CreditCardStatementRequestTransaction } from \"./CreditCardStatementRequestTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n//import java.util.List;\r\n//import java.util.ArrayList;\r\n\r\nexport class CreditCardRequestMessageSet extends RequestMessageSet {\r\n\r\n  private statementRequest: CreditCardStatementRequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.creditcard;\r\n  }\r\n\r\n  /**\r\n   * The request.\r\n   *\r\n   * @return The request.\r\n   */\r\n  public getStatementRequest(): CreditCardStatementRequestTransaction {\r\n    return this.statementRequest;\r\n  }\r\n\r\n  /**\r\n   * The request.\r\n   *\r\n   * @param statementRequest The request.\r\n   */\r\n  public setStatementRequest(statementRequest: CreditCardStatementRequestTransaction): void {\r\n    this.statementRequest = statementRequest;\r\n  }\r\n\r\n  // Inherited.\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var requestMessages: Array<RequestMessage> = [];\r\n    if (this.getStatementRequest() != null) {\r\n      requestMessages.push(this.getStatementRequest());\r\n    }\r\n    return requestMessages;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardRequestMessageSet, \"CREDITCARDMSGSRQV1\" );\r\nChildAggregate_add(CreditCardRequestMessageSet, { order: 0, type: CreditCardStatementRequestTransaction, read: CreditCardRequestMessageSet.prototype.getStatementRequest, write: CreditCardRequestMessageSet.prototype.setStatementRequest });\r\n","import { BaseAccountImpl } from \"./BaseAccountImpl\";\r\nimport { CreditCardAccountDetails } from \"../../domain/data/creditcard/CreditCardAccountDetails\";\r\nimport { CreditCardAccount } from \"../CreditCardAccount\";\r\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\r\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\r\nimport { StatementResponse } from \"../../domain/data/common/StatementResponse\";\r\nimport { CreditCardResponseMessageSet } from \"../../domain/data/creditcard/CreditCardResponseMessageSet\";\r\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\r\nimport { OFXException } from \"../../OFXException\";\r\nimport { CreditCardStatementResponseTransaction } from \"../../domain/data/creditcard/CreditCardStatementResponseTransaction\";\r\nimport { CreditCardStatementResponse } from \"../../domain/data/creditcard/CreditCardStatementResponse\";\r\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\r\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\r\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\r\nimport { CreditCardRequestMessageSet } from \"../../domain/data/creditcard/CreditCardRequestMessageSet\";\r\nimport { CreditCardStatementRequestTransaction } from \"../../domain/data/creditcard/CreditCardStatementRequestTransaction\";\r\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\r\nimport { StatementRequest } from \"../../domain/data/common/StatementRequest\";\r\nimport { CreditCardStatementRequest } from \"../../domain/data/creditcard/CreditCardStatementRequest\";\r\n\r\n\r\nexport class CreditCardAccountImpl extends BaseAccountImpl<CreditCardAccountDetails> implements CreditCardAccount {\r\n\r\n  constructor(details: CreditCardAccountDetails, username: string, password: string, institution: FinancialInstitutionImpl) {\r\n    super(details, username, password, institution);\r\n  }\r\n\r\n  protected unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: StatementResponse {\r\n    var creditCardSet: CreditCardResponseMessageSet = <CreditCardResponseMessageSet> response.getMessageSet(MessageSetType.creditcard);\r\n    if (creditCardSet == null) {\r\n      throw new OFXException(\"No credit card response message set.\");\r\n    }\r\n\r\n    var statementTransactionResponse: CreditCardStatementResponseTransaction = creditCardSet.getStatementResponse();\r\n    if (statementTransactionResponse == null) {\r\n      throw new OFXException(\"No credit card statement response transaction.\");\r\n    }\r\n\r\n    var statement: CreditCardStatementResponse = statementTransactionResponse.getMessage();\r\n    if (statement == null) {\r\n      throw new OFXException(\"No credit card statement in the transaction.\");\r\n    }\r\n\r\n    return statement;\r\n  }\r\n\r\n  protected createRequestMessageSet(transaction: TransactionWrappedRequestMessage<RequestMessage>): RequestMessageSet {\r\n    var creditCardRequest: CreditCardRequestMessageSet = new CreditCardRequestMessageSet();\r\n    creditCardRequest.setStatementRequest(<CreditCardStatementRequestTransaction> transaction);\r\n    return creditCardRequest;\r\n  }\r\n\r\n  protected createTransaction(): TransactionWrappedRequestMessage<RequestMessage> {\r\n    return new CreditCardStatementRequestTransaction();\r\n  }\r\n\r\n  protected createStatementRequest(details: CreditCardAccountDetails, range: StatementRange): StatementRequest {\r\n    var bankRequest: CreditCardStatementRequest = new CreditCardStatementRequest();\r\n    bankRequest.setAccount(details);\r\n    bankRequest.setStatementRange(range);\r\n    return bankRequest;\r\n  }\r\n\r\n}\r\n","import { AggregateIntrospector } from \"../io/AggregateIntrospector\";\r\n\r\nexport function Aggregate_add(clazz: Object, value: string = \"#NOT_SET#\"): void {\r\n  AggregateIntrospector.addAggregate(clazz, value);\r\n}\r\n","import { PropertyDescriptorParams, PropertyDescriptor } from \"./PropertyDescriptor\";\r\n\r\n\r\nexport interface HeaderParams<T> extends PropertyDescriptorParams<T> {\r\n  name: string;\r\n}\r\n\r\n\r\n/**\r\n * An OFX element, applied to a javabean property.\r\n */\r\nexport class Header extends PropertyDescriptor {\r\n  private _name: string;\r\n\r\n  constructor(params: HeaderParams<any>) {\r\n    super(params);\r\n    this._name = params.name;\r\n  }\r\n\r\n  /**\r\n   * The name of the element.\r\n   *\r\n   * @return The name of the element.\r\n   */\r\n  public name(): string {\r\n    return this._name;\r\n  }\r\n}\r\n","import * as assert from \"assert\";\r\nimport { HeaderParams, Header } from \"./Header\";\r\nimport { AggregateIntrospector } from \"../io/AggregateIntrospector\";\r\n\r\n\r\nexport function Header_add<Type>(clazz: any, params: HeaderParams<Type>): void {\r\n  assert.ok(params.type != null);\r\n  AggregateIntrospector.addHeader(clazz, new Header(params));\r\n}\r\n","\r\n/**\r\n * @see \"Section 4, OFX spec\"\r\n */\r\nexport enum ApplicationSecurity {\r\n\r\n  NONE,\r\n\r\n  TYPE1\r\n}\r\n","\r\nimport * as UUID from 'uuid';\r\nimport { SortedSet } from '../../collections/SortedSet';\r\nimport { Aggregate_add } from '../../meta/Aggregate_add';\r\nimport { ChildAggregate_add } from '../../meta/ChildAggregate_add';\r\nimport { Header_add } from '../../meta/Header_add';\r\nimport { ApplicationSecurity } from './ApplicationSecurity';\r\nimport { RequestMessageSet } from './RequestMessageSet';\r\n\r\n// import java.util.SortedSet;\r\n// import java.util.UUID;\r\n\r\n/**\r\n * Envelope for enclosing an OFX request.\r\n *\r\n * @see \"Section 2.4.3, OFX Spec\"\r\n */\r\nexport class RequestEnvelope {\r\n\r\n  //headers\r\n  private security: ApplicationSecurity;\r\n  private UID: string;\r\n  private lastProcessedUID: string;\r\n\r\n  //content\r\n  private messageSets: SortedSet<RequestMessageSet>;\r\n\r\n  constructor(UID: string = UUID.v1()) {\r\n    this.security = ApplicationSecurity.NONE;\r\n    this.UID = UID;\r\n  }\r\n\r\n  /**\r\n   * The security of this envelope.\r\n   *\r\n   * @return The security of this envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public getSecurity(): ApplicationSecurity {\r\n    return this.security;\r\n  }\r\n\r\n  /**\r\n   * The security of this envelope.\r\n   *\r\n   * @param security The security of this envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public setSecurity(security: ApplicationSecurity): void {\r\n    this.security = security;\r\n  }\r\n\r\n  /**\r\n   * The UID for the envelope.\r\n   *\r\n   * @return The UID for the envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public getUID(): string {\r\n    return this.UID;\r\n  }\r\n\r\n  /**\r\n   * The UID for the envelope.\r\n   *\r\n   * @param UID The UID for the envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public setUID(UID: string): void {\r\n    this.UID = UID;\r\n  }\r\n\r\n  /**\r\n   * The UID of the last-processed request/response (used for file-based error recovery).\r\n   *\r\n   * @return The UID of the last-processed request/response (used for file-based error recovery).\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public getLastProcessedUID(): string {\r\n    return this.lastProcessedUID;\r\n  }\r\n\r\n  /**\r\n   * The UID of the last-processed request/response (used for file-based error recovery).\r\n   *\r\n   * @param lastProcessedUID The UID of the last-processed request/response (used for file-based error recovery).\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public setLastProcessedUID(lastProcessedUID: string): void {\r\n    this.lastProcessedUID = lastProcessedUID;\r\n  }\r\n\r\n  /**\r\n   * The message sets that make up the content of this request.\r\n   *\r\n   * @return The message sets that make up the content of this request.\r\n   * @see \"Section 2.4.5, OFX Spec\"\r\n   */\r\n  public getMessageSets(): SortedSet<RequestMessageSet> {\r\n    return this.messageSets;\r\n  }\r\n\r\n  /**\r\n   * The message sets that make up the content of this request.\r\n   *\r\n   * @param messageSets The message sets that make up the content of this request.\r\n   * @see \"Section 2.4.5, OFX Spec\"\r\n   */\r\n  public setMessageSets(messageSets: SortedSet<RequestMessageSet>): void {\r\n    this.messageSets = messageSets;\r\n  }\r\n}\r\n\r\nAggregate_add( RequestEnvelope, \"OFX\" );\r\nHeader_add(RequestEnvelope, { name: \"SECURITY\", type: ApplicationSecurity, read: RequestEnvelope.prototype.getSecurity, write: RequestEnvelope.prototype.setSecurity });\r\nHeader_add(RequestEnvelope, { name: \"NEWFILEUID\", type: String, read: RequestEnvelope.prototype.getUID, write: RequestEnvelope.prototype.setUID });\r\nHeader_add(RequestEnvelope, { name: \"OLDFILEUID\", type: String, read: RequestEnvelope.prototype.getLastProcessedUID, write: RequestEnvelope.prototype.setLastProcessedUID });\r\nChildAggregate_add(RequestEnvelope, { order: 1, type: SortedSet, collectionEntryType: RequestMessageSet, read: RequestEnvelope.prototype.getMessageSets, write: RequestEnvelope.prototype.setMessageSets });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class FinancialInstitutionInfo {\r\n\r\n  private id: string;\r\n  private organization: string;\r\n\r\n  /**\r\n   * Financial institution id.\r\n   *\r\n   * @return Financial institution id.\r\n   */\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  /**\r\n   * Financial institution id.\r\n   *\r\n   * @param id Financial institution id.\r\n   */\r\n  public setId(id: string): void {\r\n    this.id = id;\r\n  }\r\n\r\n  /**\r\n   * The organization.\r\n   *\r\n   * @return The organization.\r\n   */\r\n  public getOrganization(): string {\r\n    return this.organization;\r\n  }\r\n\r\n  /**\r\n   * The organization.\r\n   *\r\n   * @param organization The organization.\r\n   */\r\n  public setOrganization(organization: string): void {\r\n    this.organization = organization;\r\n  }\r\n}\r\n\r\nAggregate_add( FinancialInstitutionInfo, \"FI\" );\r\nElement_add(FinancialInstitutionInfo, { name: \"FID\", order: 10, type: String, read: FinancialInstitutionInfo.prototype.getId, write: FinancialInstitutionInfo.prototype.setId });\r\nElement_add(FinancialInstitutionInfo, { name: \"ORG\", required: true, order: 0, type: String, read: FinancialInstitutionInfo.prototype.getOrganization, write: FinancialInstitutionInfo.prototype.setOrganization });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { FinancialInstitutionInfo } from \"./FinancialInstitution\";\r\n\r\n\r\n/**\r\n * Sign-on request\r\n *\r\n * @see \"Section 2.5.1.2, OFX Spec.\"\r\n */\r\nexport class SignonRequest extends RequestMessage {\r\n\r\n  /**\r\n   * @see \"Section 2.5.1\"\r\n   */\r\n  public static ANONYMOUS_USER: string = \"anonymous00000000000000000000000\";\r\n\r\n  private timestamp: Date;\r\n  private userId: string;\r\n  private password: string;\r\n  private userKey: string;\r\n  private generateUserKey: boolean;\r\n  private language: string;\r\n  private financialInstitution: FinancialInstitutionInfo;\r\n  private sessionId: string;\r\n  private applicationId: string;\r\n  private applicationVersion: string;\r\n  private clientUID: string;\r\n  private additionalCredentials1: string;\r\n  private additionalCredentials2: string;\r\n  private authToken: string;\r\n  private accessKey: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this.language = \"ENG\"; //Locale.US.getISO3Language().toUpperCase();\r\n    this.applicationId = \"Money\"; //many institutions just won't work with an unrecognized app id...\r\n    this.applicationVersion = \"1600\"; //many institutions just won't work with an unrecognized app id...\r\n  }\r\n\r\n  /**\r\n   * The date and time of the request.\r\n   *\r\n   * @return The date and time of the request.\r\n   */\r\n  public getTimestamp(): Date {\r\n    return this.timestamp;\r\n  }\r\n\r\n  /**\r\n   * The date and time of the request.\r\n   *\r\n   * @param timestamp The date and time of the request.\r\n   */\r\n  public setTimestamp(timestamp: Date): void {\r\n    this.timestamp = timestamp;\r\n  }\r\n\r\n  /**\r\n   * The user id.\r\n   *\r\n   * @return The user id.\r\n   */\r\n  public getUserId(): string {\r\n    return this.userId;\r\n  }\r\n\r\n  /**\r\n   * The user id.\r\n   *\r\n   * @param userId The user id.\r\n   */\r\n  public setUserId(userId: string): void {\r\n    this.userId = userId;\r\n  }\r\n\r\n  /**\r\n   * The password.\r\n   *\r\n   * @return The password.\r\n   */\r\n  public getPassword(): string {\r\n    return this.password;\r\n  }\r\n\r\n  /**\r\n   * The password.\r\n   *\r\n   * @param password The password.\r\n   */\r\n  public setPassword(password: string): void {\r\n    this.password = password;\r\n  }\r\n\r\n  /**\r\n   * The user key provided by the server so as not to require further username/password authentication.\r\n   *\r\n   * @return The user key provided by the server so as not to require further username/password authentication.\r\n   */\r\n  public getUserKey(): string {\r\n    return this.userKey;\r\n  }\r\n\r\n  /**\r\n   * The user key provided by the server so as not to require further username/password authentication.\r\n   *\r\n   * @param userKey The user key provided by the server so as not to require further username/password authentication.\r\n   */\r\n  public setUserKey(userKey: string): void {\r\n    this.userKey = userKey;\r\n  }\r\n\r\n  /**\r\n   * Whether to request the server to generate a user key.\r\n   *\r\n   * @return Whether to request the server to generate a user key.\r\n   */\r\n  public getGenerateUserKey(): boolean {\r\n    return this.generateUserKey;\r\n  }\r\n\r\n  /**\r\n   * Whether to request the server to generate a user key.\r\n   *\r\n   * @param generateUserKey Whether to request the server to generate a user key.\r\n   */\r\n  public setGenerateUserKey(generateUserKey: boolean): void {\r\n    this.generateUserKey = generateUserKey;\r\n  }\r\n\r\n  /**\r\n   * The three-letter langauge code.\r\n   *\r\n   * @return The three-letter langauge code.\r\n   * @see java.util.Locale#getISO3Language()\r\n   */\r\n  public getLanguage(): string {\r\n    return this.language;\r\n  }\r\n\r\n  /**\r\n   * The three-letter langauge code.\r\n   *\r\n   * @param language The three-letter langauge code.\r\n   */\r\n  public setLanguage(language: string): void {\r\n    this.language = language;\r\n  }\r\n\r\n  /**\r\n   * The financial institution.\r\n   *\r\n   * @return The financial institution.\r\n   */\r\n  public getFinancialInstitution(): FinancialInstitutionInfo {\r\n    return this.financialInstitution;\r\n  }\r\n\r\n  /**\r\n   * The financial institution.\r\n   *\r\n   * @param financialInstitution The financial institution.\r\n   */\r\n  public setFinancialInstitution(financialInstitution: FinancialInstitutionInfo): void {\r\n    this.financialInstitution = financialInstitution;\r\n  }\r\n\r\n  /**\r\n   * The server-supplied session id.\r\n   *\r\n   * @return The server-supplied session id.\r\n   */\r\n  public getSessionId(): string {\r\n    return this.sessionId;\r\n  }\r\n\r\n  /**\r\n   * The server-supplied session id.\r\n   *\r\n   * @param sessionId The server-supplied session id.\r\n   */\r\n  public setSessionId(sessionId: string): void {\r\n    this.sessionId = sessionId;\r\n  }\r\n\r\n  /**\r\n   * The application id.\r\n   *\r\n   * @return The application id.\r\n   */\r\n  public getApplicationId(): string {\r\n    return this.applicationId;\r\n  }\r\n\r\n  /**\r\n   * The application id.\r\n   *\r\n   * @param applicationId The application id.\r\n   */\r\n  public setApplicationId(applicationId: string): void {\r\n    this.applicationId = applicationId;\r\n  }\r\n\r\n  /**\r\n   * The application version.\r\n   *\r\n   * @return The application version.\r\n   */\r\n  public getApplicationVersion(): string {\r\n    return this.applicationVersion;\r\n  }\r\n\r\n  /**\r\n   * The application version.\r\n   *\r\n   * @param applicationVersion The application version.\r\n   */\r\n  public setApplicationVersion(applicationVersion: string): void {\r\n    this.applicationVersion = applicationVersion;\r\n  }\r\n\r\n  /**\r\n   * The client-supplied UID.\r\n   *\r\n   * @return The client-supplied UID.\r\n   */\r\n  public getClientUID(): string {\r\n    return this.clientUID;\r\n  }\r\n\r\n  /**\r\n   * The client-supplied UID.\r\n   *\r\n   * @param clientUID The client-supplied UID.\r\n   */\r\n  public setClientUID(clientUID: string): void {\r\n    this.clientUID = clientUID;\r\n  }\r\n\r\n  /**\r\n   * Any additional credentials.\r\n   *\r\n   * @return Any additional credentials.\r\n   */\r\n  public getAdditionalCredentials1(): string {\r\n    return this.additionalCredentials1;\r\n  }\r\n\r\n  /**\r\n   * Any additional credentials.\r\n   *\r\n   * @param additionalCredentials1 Any additional credentials.\r\n   */\r\n  public setAdditionalCredentials1(additionalCredentials1: string): void {\r\n    this.additionalCredentials1 = additionalCredentials1;\r\n  }\r\n\r\n  /**\r\n   * Any additional credentials.\r\n   *\r\n   * @return Any additional credentials.\r\n   */\r\n  public getAdditionalCredentials2(): string {\r\n    return this.additionalCredentials2;\r\n  }\r\n\r\n  /**\r\n   * Any additional credentials.\r\n   *\r\n   * @param additionalCredentials2 Any additional credentials.\r\n   */\r\n  public setAdditionalCredentials2(additionalCredentials2: string): void {\r\n    this.additionalCredentials2 = additionalCredentials2;\r\n  }\r\n\r\n  /**\r\n   * The authentication token.\r\n   *\r\n   * @return The authentication token.\r\n   */\r\n  public getAuthToken(): string {\r\n    return this.authToken;\r\n  }\r\n\r\n  /**\r\n   * The authentication token.\r\n   *\r\n   * @param authToken The authentication token.\r\n   */\r\n  public setAuthToken(authToken: string): void {\r\n    this.authToken = authToken;\r\n  }\r\n\r\n  /**\r\n   * The access key.\r\n   *\r\n   * @return The access key.\r\n   */\r\n  public getAccessKey(): string {\r\n    return this.accessKey;\r\n  }\r\n\r\n  /**\r\n   * The access key.\r\n   *\r\n   * @param accessKey The access key.\r\n   */\r\n  public setAccessKey(accessKey: string): void {\r\n    this.accessKey = accessKey;\r\n  }\r\n\r\n  //todo: MFA challenge stuff.\r\n}\r\n\r\nAggregate_add( SignonRequest, \"SONRQ\" );\r\nElement_add(SignonRequest, { name: \"DTCLIENT\", required: true, order: 0, type: Date, read: SignonRequest.prototype.getTimestamp, write: SignonRequest.prototype.setTimestamp });\r\nElement_add(SignonRequest, { name: \"USERID\", order: 10, type: String, read: SignonRequest.prototype.getUserId, write: SignonRequest.prototype.setUserId });\r\nElement_add(SignonRequest, { name: \"USERPASS\", order: 20, type: String, read: SignonRequest.prototype.getPassword, write: SignonRequest.prototype.setPassword });\r\nElement_add(SignonRequest, { name: \"USERKEY\", order: 30, type: String, read: SignonRequest.prototype.getUserKey, write: SignonRequest.prototype.setUserKey });\r\nElement_add(SignonRequest, { name: \"GENUSERKEY\", order: 40, type: Boolean, read: SignonRequest.prototype.getGenerateUserKey, write: SignonRequest.prototype.setGenerateUserKey });\r\nElement_add(SignonRequest, { name: \"LANGUAGE\", required: true, order: 50, type: String, read: SignonRequest.prototype.getLanguage, write: SignonRequest.prototype.setLanguage });\r\nChildAggregate_add(SignonRequest, { order: 60, type: FinancialInstitutionInfo, read: SignonRequest.prototype.getFinancialInstitution, write: SignonRequest.prototype.setFinancialInstitution });\r\nElement_add(SignonRequest, { name: \"SESSCOOKIE\", order: 70, type: String, read: SignonRequest.prototype.getSessionId, write: SignonRequest.prototype.setSessionId });\r\nElement_add(SignonRequest, { name: \"APPID\", required: true, order: 80, type: String, read: SignonRequest.prototype.getApplicationId, write: SignonRequest.prototype.setApplicationId });\r\nElement_add(SignonRequest, { name: \"APPVER\", required: true, order: 90, type: String, read: SignonRequest.prototype.getApplicationVersion, write: SignonRequest.prototype.setApplicationVersion });\r\nElement_add(SignonRequest, { name: \"CLIENTUID\", order: 100, type: String, read: SignonRequest.prototype.getClientUID, write: SignonRequest.prototype.setClientUID });\r\nElement_add(SignonRequest, { name: \"USERCRED1\", order: 110, type: String, read: SignonRequest.prototype.getAdditionalCredentials1, write: SignonRequest.prototype.setAdditionalCredentials1 });\r\nElement_add(SignonRequest, { name: \"USERCRED2\", order: 120, type: String, read: SignonRequest.prototype.getAdditionalCredentials2, write: SignonRequest.prototype.setAdditionalCredentials2 });\r\nElement_add(SignonRequest, { name: \"AUTHTOKEN\", order: 130, type: String, read: SignonRequest.prototype.getAuthToken, write: SignonRequest.prototype.setAuthToken });\r\nElement_add(SignonRequest, { name: \"ACCESSKEY\", order: 140, type: String, read: SignonRequest.prototype.getAccessKey, write: SignonRequest.prototype.setAccessKey });\r\n","\r\n/**\r\n * @see \"Section 7.1.5, OFX Spec\"\r\n */\r\nexport enum ClientRoutingCapability {\r\n\r\n  NONE,\r\n\r\n  SERVICE,\r\n\r\n  MESSAGE_SET\r\n}\r\n","import { RequestMessage } from \"../RequestMessage\";\r\nimport { ClientRoutingCapability } from \"./ClientRoutingCapability\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 7.1.5, OFX Spec\"\r\n */\r\nexport class ProfileRequest extends RequestMessage {\r\n\r\n  private routingCapability: ClientRoutingCapability;\r\n  private profileLastUpdated: Date;\r\n\r\n  constructor() {\r\n    super();\r\n    this.routingCapability = ClientRoutingCapability.MESSAGE_SET;\r\n  }\r\n\r\n  /**\r\n   * The client routing capability.\r\n   *\r\n   * @return The client routing capability.\r\n   */\r\n  public getRoutingCapability(): ClientRoutingCapability {\r\n    return this.routingCapability;\r\n  }\r\n\r\n  /**\r\n   * The client routing capability.\r\n   *\r\n   * @param routingCapability The client routing capability.\r\n   */\r\n  public setRoutingCapability(routingCapability: ClientRoutingCapability): void {\r\n    this.routingCapability = routingCapability;\r\n  }\r\n\r\n  /**\r\n   * The date the profile was last updated.\r\n   *\r\n   * @return The date the profile was last updated.\r\n   */\r\n  public getProfileLastUpdated(): Date {\r\n    return this.profileLastUpdated;\r\n  }\r\n\r\n  /**\r\n   * The date the profile was last updated.\r\n   *\r\n   * @param profileLastUpdated The date the profile was last updated.\r\n   */\r\n  public setProfileLastUpdated(profileLastUpdated: Date): void {\r\n    this.profileLastUpdated = profileLastUpdated;\r\n  }\r\n}\r\n\r\nAggregate_add( ProfileRequest, \"PROFRQ\" );\r\nElement_add(ProfileRequest, { name: \"CLIENTROUTING\", order: 0, type: ClientRoutingCapability, read: ProfileRequest.prototype.getRoutingCapability, write: ProfileRequest.prototype.setRoutingCapability });\r\nElement_add(ProfileRequest, { name: \"DTPROFUP\", order: 10, type: Date, read: ProfileRequest.prototype.getProfileLastUpdated, write: ProfileRequest.prototype.setProfileLastUpdated });\r\n","import { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\r\nimport { ProfileRequest } from \"./ProfileRequest\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class ProfileRequestTransaction extends TransactionWrappedRequestMessage<ProfileRequest> {\r\n\r\n  private message: ProfileRequest;\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @return The wrapped message.\r\n   */\r\n  public getMessage(): ProfileRequest {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @param message The wrapped message.\r\n   */\r\n  public setMessage(message: ProfileRequest): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(message: ProfileRequest): void {\r\n    this.setMessage(message);\r\n  }\r\n}\r\n\r\nAggregate_add( ProfileRequestTransaction, \"PROFTRNRQ\" );\r\nChildAggregate_add(ProfileRequestTransaction, { required: true, order: 30, type: ProfileRequest, read: ProfileRequestTransaction.prototype.getMessage, write: ProfileRequestTransaction.prototype.setMessage });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { RequestMessageSet } from \"../RequestMessageSet\";\r\nimport { ProfileRequestTransaction } from \"./ProfileRequestTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 7 OFX Spec\"\r\n */\r\nexport class ProfileRequestMessageSet extends RequestMessageSet {\r\n\r\n  private profileRequest: ProfileRequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.profile;\r\n  }\r\n\r\n  /**\r\n   * The profile request.\r\n   *\r\n   * @return The profile request.\r\n   */\r\n  public getProfileRequest(): ProfileRequestTransaction {\r\n    return this.profileRequest;\r\n  }\r\n\r\n  /**\r\n   * The profile request.\r\n   *\r\n   * @param profileRequest The profile request.\r\n   */\r\n  public setProfileRequest(profileRequest: ProfileRequestTransaction): void {\r\n    this.profileRequest = profileRequest;\r\n  }\r\n\r\n\r\n  // Inherited.\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\r\n    if (this.getProfileRequest() != null) {\r\n      requestMessages.push(this.getProfileRequest());\r\n    }\r\n    return requestMessages;\r\n  }\r\n}\r\n\r\nAggregate_add( ProfileRequestMessageSet, \"PROFMSGSRQV1\" );\r\nChildAggregate_add(ProfileRequestMessageSet, { required: true, order: 0, type: ProfileRequestTransaction, read: ProfileRequestMessageSet.prototype.getProfileRequest, write: ProfileRequestMessageSet.prototype.setProfileRequest });\r\n","import { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class AccountInfoRequest extends RequestMessage {\r\n\r\n  private lastUpdated: Date;\r\n\r\n  constructor() {\r\n    super();\r\n    this.lastUpdated = new Date(0); //default is never updated.\r\n  }\r\n\r\n  /**\r\n   * When the account info was last updated.\r\n   *\r\n   * @return When the account info was last updated.\r\n   */\r\n  public getLastUpdated(): Date {\r\n    return this.lastUpdated;\r\n  }\r\n\r\n  /**\r\n   * When the account info was last updated.\r\n   *\r\n   * @param lastUpdated When the account info was last updated.\r\n   */\r\n  public setLastUpdated(lastUpdated: Date): void {\r\n    this.lastUpdated = lastUpdated;\r\n  }\r\n}\r\n\r\nAggregate_add(AccountInfoRequest, \"ACCTINFORQ\");\r\nElement_add(AccountInfoRequest, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoRequest.prototype.getLastUpdated, write: AccountInfoRequest.prototype.setLastUpdated });\r\n","import { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\r\nimport { AccountInfoRequest } from \"./AccountInfoRequest\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class AccountInfoRequestTransaction extends TransactionWrappedRequestMessage<AccountInfoRequest> {\r\n\r\n  private message: AccountInfoRequest;\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @return The wrapped message.\r\n   */\r\n  public getMessage(): AccountInfoRequest {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @param message The wrapped message.\r\n   */\r\n  public setMessage(message: AccountInfoRequest): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(message: AccountInfoRequest): void {\r\n    this.setMessage(message);\r\n  }\r\n}\r\n\r\nAggregate_add( AccountInfoRequestTransaction, \"ACCTINFOTRNRQ\" );\r\nChildAggregate_add(AccountInfoRequestTransaction, { required: true, order: 30, type: AccountInfoRequest, read: AccountInfoRequestTransaction.prototype.getMessage, write: AccountInfoRequestTransaction.prototype.setMessage });\r\n","import { RequestMessageSet } from \"../RequestMessageSet\";\r\nimport { AccountInfoRequestTransaction } from \"./AccountInfoRequestTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class SignupRequestMessageSet extends RequestMessageSet {\r\n\r\n  private accountInfoRequest: AccountInfoRequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.signup;\r\n  }\r\n\r\n  /**\r\n   * The account info request.\r\n   *\r\n   * @return The account info request.\r\n   */\r\n  public getAccountInfoRequest(): AccountInfoRequestTransaction {\r\n    return this.accountInfoRequest;\r\n  }\r\n\r\n  /**\r\n   * The account info request.\r\n   *\r\n   * @param accountInfoRequest The account info request.\r\n   */\r\n  public setAccountInfoRequest(accountInfoRequest: AccountInfoRequestTransaction): void {\r\n    this.accountInfoRequest = accountInfoRequest;\r\n  }\r\n\r\n  /**\r\n   * The request messages.\r\n   *\r\n   * @return The request messages.\r\n   */\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var messages: Array<RequestMessage> = new Array<RequestMessage>();\r\n\r\n    if (this.getAccountInfoRequest() != null) {\r\n      messages.push(this.getAccountInfoRequest());\r\n    }\r\n\r\n    return messages;\r\n  }\r\n}\r\n\r\nAggregate_add(SignupRequestMessageSet, \"SIGNUPMSGSRQV1\");\r\nChildAggregate_add(SignupRequestMessageSet, { order: 0, type: AccountInfoRequestTransaction, read: SignupRequestMessageSet.prototype.getAccountInfoRequest, write: SignupRequestMessageSet.prototype.setAccountInfoRequest });\r\n","import { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Aggreate to indicate whether position information is requested as part of the statement\r\n * @see \"Section 13.9.1.2, OFX Spec\"\r\n */\r\nexport class IncludePosition {\r\n\r\n  private sentDownDate: Date;\r\n  private includePositions: boolean;\r\n\r\n  constructor() {\r\n    this.includePositions = true;\r\n  }\r\n\r\n  /**\r\n   * Gets the date that the position should be sent down for. This is an optional field according\r\n   * to the OFX spec.\r\n   *\r\n   * @return the date for the position\r\n   */\r\n  public getDateSentDown(): Date {\r\n    return this.sentDownDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the date that the position should be sent down for. This is an optional field according\r\n   * to the OFX spec.\r\n   *\r\n   * @param sentDownDate the date for the position\r\n   */\r\n  public setDateSentDown(sentDownDate: Date): void {\r\n    this.sentDownDate = sentDownDate;\r\n  }\r\n\r\n  /**\r\n   * Gets whether to include positions in the statement download.\r\n   *\r\n   * @return whether to include positions in the statement download\r\n   */\r\n  public getIncludePositions(): boolean {\r\n    return this.includePositions;\r\n  }\r\n\r\n  /**\r\n   * Sets whether to include positions in the statement download.\r\n   *\r\n   * @param includePositions whether to include positions in the statement download\r\n   */\r\n  public setIncludePositions(includePositions: boolean): void {\r\n    this.includePositions = includePositions;\r\n  }\r\n}\r\n\r\nAggregate_add( IncludePosition, \"INCPOS\" );\r\nElement_add(IncludePosition, { name: \"DTASOF\", order: 0, type: Date, read: IncludePosition.prototype.getDateSentDown, write: IncludePosition.prototype.setDateSentDown });\r\nElement_add(IncludePosition, { name: \"INCLUDE\", order: 10, type: Boolean, read: IncludePosition.prototype.getIncludePositions, write: IncludePosition.prototype.setIncludePositions });\r\n","import { StatementRequest } from \"../../common/StatementRequest\";\r\nimport { InvestmentAccountDetails } from \"../accounts/InvestmentAccountDetails\";\r\nimport { IncludePosition } from \"./IncludePosition\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Aggregate for the investment statement download request.\r\n * @see \"Section 13.9.1.1, OFX Spec\"\r\n */\r\nexport class InvestmentStatementRequest extends StatementRequest {\r\n\r\n  private account: InvestmentAccountDetails;\r\n  private includeOpenOrders: boolean;\r\n  private includePosition: IncludePosition;\r\n  private includeBalance: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.includeOpenOrders = false;\r\n    this.includeBalance = true;\r\n  }\r\n\r\n  /**\r\n   * The account details.\r\n   *\r\n   * @return The account details.\r\n   */\r\n  public getAccount(): InvestmentAccountDetails {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * The account details.\r\n   *\r\n   * @param account The account details.\r\n   */\r\n  public setAccount(account: InvestmentAccountDetails): void {\r\n    this.account = account;\r\n  }\r\n\r\n  /**\r\n   * Gets whether to include open orders. This is an optional field according to the OFX spec.\r\n   * <br>\r\n   * Note, open orders are not yet implemented.\r\n   *\r\n   * @return whether to include open orders\r\n   */\r\n  public getIncludeOpenOrders(): boolean {\r\n    return this.includeOpenOrders;\r\n  }\r\n\r\n  /**\r\n   * Sets whether to include open orders. This is an optional field according to the OFX spec.\r\n   * <br>\r\n   * Note, open orders are not yet implemented.\r\n   *\r\n   * @param includeOpenOrders whether to include open orders\r\n   */\r\n  public setIncludeOpenOrders(includeOpenOrders: boolean): void {\r\n    this.includeOpenOrders = includeOpenOrders;\r\n  }\r\n\r\n  /**\r\n   * Gets the include position child aggregate. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the include position child aggregate\r\n   */\r\n  public getIncludePosition(): IncludePosition {\r\n    return this.includePosition;\r\n  }\r\n\r\n  /**\r\n   * Gets the include position child aggregate. This is a required field according to the OFX spec.\r\n   *\r\n   * @param includePosition the include position child aggregate\r\n   */\r\n  public setIncludePosition(includePosition: IncludePosition): void {\r\n    this.includePosition = includePosition;\r\n  }\r\n\r\n  /**\r\n   * Gets whether to include balance info in the response. This is a required field according to\r\n   * the OFX spec.\r\n   *\r\n   * @return whether to include balance info in the response\r\n   */\r\n  public getIncludeBalance(): boolean {\r\n    return this.includeBalance;\r\n  }\r\n\r\n  /**\r\n   * Sets whether to include balance info in the response. This is a required field according to\r\n   * the OFX spec.\r\n   *\r\n   * @param includeBalance whether to include balance info in the response\r\n   */\r\n  public setIncludeBalance(includeBalance: boolean): void {\r\n    this.includeBalance = includeBalance;\r\n  }\r\n}\r\n\r\nAggregate_add(InvestmentStatementRequest, \"INVSTMTRQ\");\r\nChildAggregate_add(InvestmentStatementRequest, { name: \"INVACCTFROM\", required: true, order: 0, type: InvestmentAccountDetails, read: InvestmentStatementRequest.prototype.getAccount, write: InvestmentStatementRequest.prototype.setAccount });\r\nElement_add(InvestmentStatementRequest, { name: \"INCOO\", order: 20, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeOpenOrders, write: InvestmentStatementRequest.prototype.setIncludeOpenOrders });\r\nChildAggregate_add(InvestmentStatementRequest, { name: \"INCPOS\", required: true, order: 30, type: IncludePosition, read: InvestmentStatementRequest.prototype.getIncludePosition, write: InvestmentStatementRequest.prototype.setIncludePosition });\r\nElement_add(InvestmentStatementRequest, { name: \"INCBAL\", required: true, order: 40, type: Boolean, read: InvestmentStatementRequest.prototype.getIncludeBalance, write: InvestmentStatementRequest.prototype.setIncludeBalance });\r\n","import { InvestmentStatementRequest } from \"./InvestmentStatementRequest\";\r\nimport { TransactionWrappedRequestMessage } from \"../../TransactionWrappedRequestMessage\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Investment statement transaction request.\r\n * @see \"Section 13.9.1.1, OFX Spec\"\r\n */\r\nexport class InvestmentStatementRequestTransaction\r\n    extends TransactionWrappedRequestMessage<InvestmentStatementRequest> {\r\n\r\n  private message: InvestmentStatementRequest;\r\n\r\n  /**\r\n   * Gets the the statement request message.\r\n   *\r\n   * @return the statement request message.\r\n   */\r\n  public getMessage(): InvestmentStatementRequest {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * Sets the the statement request message.\r\n   *\r\n   * @param message the statement request message.\r\n   */\r\n  public setMessage(message: InvestmentStatementRequest): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(message: InvestmentStatementRequest): void {\r\n    this.setMessage(message);\r\n  }\r\n}\r\n\r\nAggregate_add(InvestmentStatementRequestTransaction, \"INVSTMTTRNRQ\");\r\nChildAggregate_add(InvestmentStatementRequestTransaction, { required: true, order: 30, type: InvestmentStatementRequest, read: InvestmentStatementRequestTransaction.prototype.getMessage, write: InvestmentStatementRequestTransaction.prototype.setMessage });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Identifier for a security.\r\n * @see \"Section 13.8.1, OFX Spec\"\r\n */\r\nexport class SecurityId {\r\n\r\n  private uniqueId: string;\r\n  private uniqueIdType: string;\r\n\r\n  /**\r\n   * Gets the unique id for the security. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the unique id\r\n   */\r\n  public getUniqueId(): string {\r\n    return this.uniqueId;\r\n  }\r\n\r\n  /**\r\n   * Sets the unique id for the security. This is a required field according to the OFX spec.\r\n   *\r\n   * @param uniqueId the unique id\r\n   */\r\n  public setUniqueId(uniqueId: string): void {\r\n    this.uniqueId = uniqueId;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of unique id.\r\n   *\r\n   * @return the type of unique id\r\n   */\r\n  public getUniqueIdType(): string {\r\n    return this.uniqueIdType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of unique id.\r\n   *\r\n   * @param uniqueIdType the type of unique id\r\n   */\r\n  public setUniqueIdType(uniqueIdType: string): void {\r\n    this.uniqueIdType = uniqueIdType;\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityId, \"SECID\" );\r\nElement_add(SecurityId, { name: \"UNIQUEID\", required: true, order: 10, type: String, read: SecurityId.prototype.getUniqueId, write: SecurityId.prototype.setUniqueId });\r\nElement_add(SecurityId, { name: \"UNIQUEIDTYPE\", required: true, order: 20, type: String, read: SecurityId.prototype.getUniqueIdType, write: SecurityId.prototype.setUniqueIdType });\r\n","import { SecurityId } from \"./SecurityId\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Security request aggregate.\r\n * @see \"Section 13.8.2.2, OFX Spec\"\r\n */\r\nexport class SecurityRequest {\r\n\r\n  private securityId: SecurityId;\r\n  private tickerSymbol: string;\r\n  private fiId: string;\r\n\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n    this.tickerSymbol = null;\r\n    this.fiId = null;\r\n  }\r\n\r\n  public getTickerSymbol(): string {\r\n    return this.tickerSymbol;\r\n  }\r\n\r\n  public setTickerSymbol(tickerSymbol: string): void {\r\n    this.tickerSymbol = tickerSymbol;\r\n    this.securityId = null;\r\n    this.fiId = null;\r\n  }\r\n\r\n  public getFiId(): string {\r\n    return this.fiId;\r\n  }\r\n\r\n  public setFiId(fiId: string): void {\r\n    this.fiId = fiId;\r\n    this.securityId = null;\r\n    this.tickerSymbol = null;\r\n  }\r\n}\r\n\r\nAggregate_add(SecurityRequest, \"SECRQ\");\r\nElement_add(SecurityRequest, { name: \"SECID\", order: 10, type: SecurityId, read: SecurityRequest.prototype.getSecurityId, write: SecurityRequest.prototype.setSecurityId });\r\nElement_add(SecurityRequest, { name: \"TICKER\", order: 20, type: String, read: SecurityRequest.prototype.getTickerSymbol, write: SecurityRequest.prototype.setTickerSymbol });\r\nElement_add(SecurityRequest, { name: \"FIID\", order: 30, type: String, read: SecurityRequest.prototype.getFiId, write: SecurityRequest.prototype.setFiId });\r\n","import { RequestMessage } from \"../RequestMessage\";\r\nimport { SecurityRequest } from \"./SecurityRequest\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Request aggregate for the security list.\r\n * @see \"Section 13.8.2.2, OFX Spec\"\r\n */\r\nexport class SecurityListRequest extends RequestMessage {\r\n\r\n  private securityRequests: Array<SecurityRequest>;\r\n\r\n  public getSecurityRequests(): Array<SecurityRequest> {\r\n    return this.securityRequests;\r\n  }\r\n\r\n  public setSecurityRequests(securityRequests: Array<SecurityRequest>): void {\r\n    this.securityRequests = securityRequests;\r\n  }\r\n}\r\n\r\nAggregate_add(SecurityListRequest, \"SECLISTRQ\");\r\nChildAggregate_add(SecurityListRequest, { required: true, order: 10, type: Array, collectionEntryType: SecurityRequest, read: SecurityListRequest.prototype.getSecurityRequests, write: SecurityListRequest.prototype.setSecurityRequests });\r\n","import { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\r\nimport { SecurityListRequest } from \"./SecurityListRequest\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Security list transaction request.\r\n * @see \"Section 13.8.2.1, OFX Spec\"\r\n */\r\nexport class SecurityListRequestTransaction\r\n    extends TransactionWrappedRequestMessage<SecurityListRequest> {\r\n\r\n  private message: SecurityListRequest;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): SecurityListRequest {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   *\r\n   */\r\n  public setMessage(message: SecurityListRequest) {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(message: SecurityListRequest): void {\r\n    this.setMessage(message);\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityListRequestTransaction, \"SECLISTTRNRQ\" );\r\nChildAggregate_add(SecurityListRequestTransaction, { required: true, order: 30, type: SecurityListRequest, read: SecurityListRequestTransaction.prototype.getMessage, write: SecurityListRequestTransaction.prototype.setMessage });\r\n","import { RequestMessageSet } from \"../../RequestMessageSet\";\r\nimport { InvestmentStatementRequestTransaction } from \"./InvestmentStatementRequestTransaction\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { RequestMessage } from \"../../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Investment statement request message set.\r\n * @see \"Section 13.7.1.2.1, OFX Spec\"\r\n */\r\nexport class InvestmentStatementRequestMessageSet extends RequestMessageSet {\r\n\r\n  private statementRequest: InvestmentStatementRequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.investment;\r\n  }\r\n\r\n  /**\r\n   * Gets the statement request.\r\n   *\r\n   * @return the request\r\n   */\r\n  public getStatementRequest(): InvestmentStatementRequestTransaction {\r\n    return this.statementRequest;\r\n  }\r\n\r\n  /**\r\n   * Sets the statement request.\r\n   *\r\n   * @param statementRequest the request\r\n   */\r\n  public setStatementRequest(statementRequest: InvestmentStatementRequestTransaction): void {\r\n    this.statementRequest = statementRequest;\r\n  }\r\n\r\n  // Inherited.\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\r\n    if (this.getStatementRequest() != null) {\r\n      requestMessages.push(this.getStatementRequest());\r\n    }\r\n    return requestMessages;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentStatementRequestMessageSet, \"INVSTMTMSGSRQV1\" );\r\nChildAggregate_add(InvestmentStatementRequestMessageSet, { order: 0, type: InvestmentStatementRequestTransaction, read: InvestmentStatementRequestMessageSet.prototype.getStatementRequest, write: InvestmentStatementRequestMessageSet.prototype.setStatementRequest });\r\n","import { RequestMessageSet } from \"../RequestMessageSet\";\r\nimport { SecurityListRequestTransaction } from \"./SecurityListRequestTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Security list request message set.\r\n * @see \"Section 13.7.2.2.1, OFX Spec\"\r\n */\r\nexport class SecurityListRequestMessageSet extends RequestMessageSet {\r\n\r\n  private securityListRequest: SecurityListRequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.investment;\r\n  }\r\n\r\n  /**\r\n   * Gets the security list request.\r\n   *\r\n   * @return the request\r\n   */\r\n  public getSecurityListRequest(): SecurityListRequestTransaction {\r\n    return this.securityListRequest;\r\n  }\r\n\r\n  /**\r\n   * Sets the security list request.\r\n   *\r\n   * @param statementRequest the request\r\n   */\r\n  public setSecurityListRequest(statementRequest: SecurityListRequestTransaction): void {\r\n    this.securityListRequest = statementRequest;\r\n  }\r\n\r\n  // Inherited.\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\r\n    if (this.getSecurityListRequest() != null) {\r\n      requestMessages.push(this.getSecurityListRequest());\r\n    }\r\n    return requestMessages;\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityListRequestMessageSet, \"SECLISTMSGSRQV1\" );\r\nChildAggregate_add(SecurityListRequestMessageSet, { order: 0, type: SecurityListRequestTransaction, read: SecurityListRequestMessageSet.prototype.getSecurityListRequest, write: SecurityListRequestMessageSet.prototype.setSecurityListRequest });\r\n","import { InvestmentAccount } from \"../InvestmentAccount\";\r\nimport { InvestmentAccountDetails } from \"../../domain/data/investment/accounts/InvestmentAccountDetails\";\r\nimport { FinancialInstitutionImpl } from \"./FinancialInstitutionImpl\";\r\nimport { InvestmentStatementResponse } from \"../../domain/data/investment/statements/InvestmentStatementResponse\";\r\nimport { StatementRange } from \"../../domain/data/common/StatementRange\";\r\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\r\nimport { InvestmentStatementRequestTransaction } from \"../../domain/data/investment/statements/InvestmentStatementRequestTransaction\";\r\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\r\nimport { SecurityRequest } from \"../../domain/data/seclist/SecurityRequest\";\r\nimport { SecurityList } from \"../../domain/data/seclist/SecurityList\";\r\nimport { SecurityListRequestTransaction } from \"../../domain/data/seclist/SecurityListRequestTransaction\";\r\nimport { InvestmentStatementResponseMessageSet } from \"../../domain/data/investment/statements/InvestmentStatementResponseMessageSet\";\r\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\r\nimport { OFXException } from \"../../OFXException\";\r\nimport { InvestmentStatementResponseTransaction } from \"../../domain/data/investment/statements/InvestmentStatementResponseTransaction\";\r\nimport { SecurityListResponseMessageSet } from \"../../domain/data/seclist/SecurityListResponseMessageSet\";\r\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\r\nimport { InvestmentStatementRequestMessageSet } from \"../../domain/data/investment/statements/InvestmentStatementRequestMessageSet\";\r\nimport { InvestmentStatementRequest } from \"../../domain/data/investment/statements/InvestmentStatementRequest\";\r\nimport { IncludePosition } from \"../../domain/data/investment/statements/IncludePosition\";\r\nimport { SecurityListRequestMessageSet } from \"../../domain/data/seclist/SecurityListRequestMessageSet\";\r\nimport { SecurityListRequest } from \"../../domain/data/seclist/SecurityListRequest\";\r\n\r\n\r\nexport class InvestmentAccountImpl implements InvestmentAccount {\r\n  private details: InvestmentAccountDetails;\r\n  private username: string;\r\n  private password: string;\r\n  private institution: FinancialInstitutionImpl;\r\n\r\n  constructor(details: InvestmentAccountDetails, username: string, password: string,\r\n                               institution: FinancialInstitutionImpl) {\r\n    this.details = details;\r\n    this.username = username;\r\n    this.password = password;\r\n    this.institution = institution;\r\n  }\r\n\r\n  public readStatement(start: Date, end: Date) /*throws OFXException*/: Promise<InvestmentStatementResponse> {\r\n    var range: StatementRange = new StatementRange();\r\n    range.setIncludeTransactions(true);\r\n    range.setStart(start);\r\n    range.setEnd(end);\r\n\r\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\r\n    var requestTransaction: InvestmentStatementRequestTransaction = new InvestmentStatementRequestTransaction();\r\n    requestTransaction.setWrappedMessage(this.createStatementRequest(this.getDetails(), range));\r\n    request.getMessageSets().insert(this.createStatementRequestMessageSet(requestTransaction));\r\n\r\n    return this.institution.sendRequest(request)\r\n    .then((response: ResponseEnvelope): InvestmentStatementResponse => {\r\n      this.institution.doGeneralValidationChecks(request, response);\r\n      return this.unwrapStatementResponse(response);\r\n    });\r\n  }\r\n\r\n  public readSecurityList(securities: Array<SecurityRequest>) /*throws OFXException*/: Promise<SecurityList> {\r\n    var request: RequestEnvelope = this.institution.createAuthenticatedRequest(this.username, this.password);\r\n    var requestTransaction: SecurityListRequestTransaction = new SecurityListRequestTransaction();\r\n    requestTransaction.setWrappedMessage(this.createSecurityListRequest(securities));\r\n    request.getMessageSets().insert(this.createSecurityListRequestMessageSet(requestTransaction));\r\n\r\n    return this.institution.sendRequest(request)\r\n    .then((response: ResponseEnvelope): SecurityList => {\r\n      this.institution.doGeneralValidationChecks(request, response);\r\n\r\n      return this.unwrapSecurityList(response);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The details of this account.\r\n   *\r\n   * @return The details of this account.\r\n   */\r\n  public getDetails(): InvestmentAccountDetails {\r\n    return this.details;\r\n  }\r\n\r\n  private unwrapStatementResponse(response: ResponseEnvelope) /*throws OFXException*/: InvestmentStatementResponse {\r\n    var investmentStatementSet: InvestmentStatementResponseMessageSet =\r\n        <InvestmentStatementResponseMessageSet> response.getMessageSet(MessageSetType.investment);\r\n    if (investmentStatementSet == null) {\r\n      throw new OFXException(\"No investment response message set.\");\r\n    }\r\n\r\n    var statementTransactionResponse: InvestmentStatementResponseTransaction =\r\n        investmentStatementSet.getStatementResponse();\r\n    if (statementTransactionResponse == null) {\r\n      throw new OFXException(\"No investment statement response transaction.\");\r\n    }\r\n\r\n    var statement: InvestmentStatementResponse = statementTransactionResponse.getMessage();\r\n    if (statement == null) {\r\n      throw new OFXException(\"No investment statement in the transaction.\");\r\n    }\r\n\r\n    // See if there's a security list -- often sent back with an account statement by servers.\r\n    var securityListMessageSet: SecurityListResponseMessageSet =\r\n        <SecurityListResponseMessageSet> response.getMessageSet(\r\n            MessageSetType.investment_security);\r\n    if (securityListMessageSet != null) {\r\n      statement.setSecurityList(securityListMessageSet.getSecurityList());\r\n    }\r\n\r\n    return statement;\r\n  }\r\n\r\n  private createStatementRequestMessageSet(transaction: InvestmentStatementRequestTransaction): RequestMessageSet {\r\n    var investmentStatementRequest: InvestmentStatementRequestMessageSet =\r\n        new InvestmentStatementRequestMessageSet();\r\n    investmentStatementRequest.setStatementRequest(transaction);\r\n    return investmentStatementRequest;\r\n  }\r\n\r\n  private createStatementRequest(details: InvestmentAccountDetails, range: StatementRange): InvestmentStatementRequest {\r\n    var investRequest: InvestmentStatementRequest = new InvestmentStatementRequest();\r\n    investRequest.setAccount(details);\r\n    investRequest.setStatementRange(range);\r\n    investRequest.setIncludePosition(new IncludePosition());\r\n    return investRequest;\r\n  }\r\n\r\n  private createSecurityListRequestMessageSet(transaction: SecurityListRequestTransaction): RequestMessageSet {\r\n    var securityListRequest: SecurityListRequestMessageSet =\r\n        new SecurityListRequestMessageSet();\r\n    securityListRequest.setSecurityListRequest(transaction);\r\n    return securityListRequest;\r\n  }\r\n\r\n  private createSecurityListRequest(securities: Array<SecurityRequest>): SecurityListRequest {\r\n    var securityListRequest: SecurityListRequest = new SecurityListRequest();\r\n    securityListRequest.setSecurityRequests(securities);\r\n    return securityListRequest;\r\n  }\r\n\r\n  private unwrapSecurityList(response: ResponseEnvelope) /*throws OFXException*/: SecurityList {\r\n    var securityListSet: SecurityListResponseMessageSet =\r\n        <SecurityListResponseMessageSet> response.getMessageSet(MessageSetType.investment_security);\r\n    if (securityListSet == null) {\r\n      throw new OFXException(\"No security list response message set.\");\r\n    }\r\n\r\n    var securityList: SecurityList = securityListSet.getSecurityList();\r\n    if (securityList == null) {\r\n      throw new OFXException(\"No security list response transaction.\");\r\n    }\r\n\r\n    return securityList;\r\n  }\r\n}\r\n","import { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Request to change a user password.\r\n *\r\n * @see \"Section 2.5.2.1, OFX Spec.\"\r\n */\r\nexport class PasswordChangeRequest extends RequestMessage {\r\n\r\n  private userId: string;\r\n  private newPassword: string;\r\n\r\n  /**\r\n   * The id of the user changing password.\r\n   *\r\n   * @return The id of the user changing password.\r\n   */\r\n  public getUserId(): string {\r\n    return this.userId;\r\n  }\r\n\r\n  /**\r\n   * The id of the user changing password.\r\n   *\r\n   * @param userId The id of the user changing password.\r\n   */\r\n  public setUserId(userId: string): void {\r\n    this.userId = userId;\r\n  }\r\n\r\n  /**\r\n   * The new password.\r\n   *\r\n   * @return The new password.\r\n   */\r\n  public getNewPassword(): string {\r\n    return this.newPassword;\r\n  }\r\n\r\n  /**\r\n   * The new password.\r\n   *\r\n   * @param newPassword The new password.\r\n   */\r\n  public setNewPassword(newPassword: string): void {\r\n    this.newPassword = newPassword;\r\n  }\r\n}\r\n\r\nAggregate_add( PasswordChangeRequest, \"PINCHRQ\" );\r\nElement_add(PasswordChangeRequest, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeRequest.prototype.getUserId, write: PasswordChangeRequest.prototype.setUserId });\r\nElement_add(PasswordChangeRequest, { name: \"NEWUSERPASS\", required: true, order: 10, type: String, read: PasswordChangeRequest.prototype.getNewPassword, write: PasswordChangeRequest.prototype.setNewPassword });\r\n","import { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\r\nimport { PasswordChangeRequest } from \"./PasswordChangeRequest\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class PasswordChangeRequestTransaction extends TransactionWrappedRequestMessage<PasswordChangeRequest> {\r\n\r\n  private message: PasswordChangeRequest;\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @return The wrapped message.\r\n   */\r\n  public getMessage(): PasswordChangeRequest {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @param message The wrapped message.\r\n   */\r\n  public setMessage(message: PasswordChangeRequest) {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(message: PasswordChangeRequest): void {\r\n    this.setMessage(message);\r\n  }\r\n}\r\n\r\nAggregate_add(PasswordChangeRequestTransaction, \"PINCHTRNRQ\");\r\nChildAggregate_add(PasswordChangeRequestTransaction, { required: true, order: 30, type: PasswordChangeRequest, read: PasswordChangeRequestTransaction.prototype.getMessage, write: PasswordChangeRequestTransaction.prototype.setMessage });\r\n","import { RequestMessageSet } from \"../RequestMessageSet\";\r\nimport { SignonRequest } from \"./SignonRequest\";\r\nimport { PasswordChangeRequestTransaction } from \"./PasswordChangeRequestTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * The sign-on request message set.\r\n *\r\n * @see \"Section 2.5, OFX Spec.\"\r\n */\r\nexport class SignonRequestMessageSet extends RequestMessageSet {\r\n\r\n  private signonRequest: SignonRequest;\r\n  private passwordChangeRequest: PasswordChangeRequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.signon;\r\n  }\r\n\r\n  /**\r\n   * The message for this message set.\r\n   *\r\n   * @return The message for this message set.\r\n   */\r\n  public getSignonRequest(): SignonRequest {\r\n    return this.signonRequest;\r\n  }\r\n\r\n  /**\r\n   * The message for this message set.\r\n   *\r\n   * @param signonRequest The message for this message set.\r\n   */\r\n  public setSignonRequest(signonRequest: SignonRequest): void {\r\n    this.signonRequest = signonRequest;\r\n  }\r\n\r\n  /**\r\n   * The password change request.\r\n   *\r\n   * @return The password change request.\r\n   */\r\n  public getPasswordChangeRequest(): PasswordChangeRequestTransaction {\r\n    return this.passwordChangeRequest;\r\n  }\r\n\r\n  /**\r\n   * The password change request.\r\n   *\r\n   * @param passwordChangeRequest The password change request.\r\n   */\r\n  public setPasswordChangeRequest(passwordChangeRequest: PasswordChangeRequestTransaction): void {\r\n    this.passwordChangeRequest = passwordChangeRequest;\r\n  }\r\n\r\n  //todo: challenge request/response\r\n\r\n\r\n  // Inherited.\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\r\n\r\n    if (this.getSignonRequest() != null) {\r\n      requestMessages.push(this.getSignonRequest());\r\n    }\r\n\r\n    if (this.getPasswordChangeRequest() != null) {\r\n      requestMessages.push(this.getPasswordChangeRequest());\r\n    }\r\n\r\n    return requestMessages;\r\n  }\r\n}\r\n\r\nAggregate_add(SignonRequestMessageSet, \"SIGNONMSGSRQV1\");\r\nChildAggregate_add(SignonRequestMessageSet, { required: true, order: 0, type: SignonRequest, read: SignonRequestMessageSet.prototype.getSignonRequest, write: SignonRequestMessageSet.prototype.setSignonRequest });\r\nChildAggregate_add(SignonRequestMessageSet, { order: 10, type: PasswordChangeRequestTransaction, read: SignonRequestMessageSet.prototype.getPasswordChangeRequest, write: SignonRequestMessageSet.prototype.setPasswordChangeRequest });\r\n","import { Status } from \"./Status\";\r\n\r\n\r\n/**\r\n * A status holder (usually applied to a response).\r\n */\r\nexport interface StatusHolder {\r\n\r\n  /**\r\n   * The name of this status holder (for error reporting).\r\n   *\r\n   * @return The name of this status holder (for error reporting).\r\n   */\r\n  getStatusHolderName(): string;\r\n\r\n  /**\r\n   * Get the status.\r\n   *\r\n   * @return The status.\r\n   */\r\n  getStatus(): Status;\r\n}\r\n\r\n\r\nexport function instanceof_StatusHolder(obj: any) : boolean {\r\n   return (obj instanceof Object\r\n       && (typeof obj.getStatusHolderName === 'function')\r\n       && (typeof obj.getStatus === 'function'));\r\n}\r\n","\r\n/**\r\n * A message applicable to a response message set.\r\n */\r\nexport abstract class ResponseMessage {\r\n\r\n  /**\r\n   * The name of the response message.\r\n   *\r\n   * @return The name of the response message.\r\n   */\r\n  public abstract getResponseMessageName(): string;\r\n\r\n}\r\n","\r\n\r\nimport { OFXException } from \"../../../OFXException\";\r\n\r\n/**\r\n * Severity of the status.\r\n */\r\nexport enum Severity {\r\n  INFO,\r\n  WARN,\r\n  ERROR\r\n}\r\n\r\nexport abstract class StatusCode {\r\n\r\n  getCode(): number { throw new OFXException(\"abstract\"); }\r\n\r\n  getMessage(): string { throw new OFXException(\"abstract\"); }\r\n\r\n  getDefaultSeverity(): /*Status.*/Severity { throw new OFXException(\"abstract\"); }\r\n}\r\n","import { Aggregate_add } from '../../../meta/Aggregate_add'\r\nimport { Element_add } from '../../../meta/Element_add'\r\nimport { Severity, StatusCode } from './StatusCode'\r\n\r\n\r\n/**\r\n * Known status codes.\r\n */\r\nexport class KnownCode extends StatusCode {\r\n  public static SUCCESS: KnownCode = new KnownCode(0, \"Success\", Severity.INFO);\r\n  public static CLIENT_UP_TO_DATE: KnownCode = new KnownCode(1, \"Client is up-to-date\", Severity.INFO);\r\n  public static GENERAL_ERROR: KnownCode = new KnownCode(2000, \"General error.\", Severity.ERROR);\r\n  public static GENERAL_ACCOUNT_ERROR: KnownCode = new KnownCode(2002, \"General account error.\", Severity.ERROR);\r\n  public static ACCOUNT_NOT_FOUND: KnownCode = new KnownCode(2003, \"Account not found.\", Severity.ERROR);\r\n  public static ACCOUNT_CLOSED: KnownCode = new KnownCode(2004, \"Account closed.\", Severity.ERROR);\r\n  public static ACCOUNT_NOT_AUTHORIZED: KnownCode = new KnownCode(2005, \"Account not authorized.\", Severity.ERROR);\r\n  public static DATE_TOO_SOON: KnownCode = new KnownCode(2014, \"Date too soon\", Severity.ERROR);\r\n  public static DUPLICATE_REQUEST: KnownCode = new KnownCode(2019, \"Duplicate request.\", Severity.ERROR);\r\n  public static UNSUPPORTED_VERSION: KnownCode = new KnownCode(2021, \"Unsupported version\", Severity.ERROR);\r\n  public static INVALID_TAN: KnownCode = new KnownCode(2022, \"Invalid transaction authorization number.\", Severity.ERROR);\r\n  public static MFA_CHALLENGE_REQUIRED: KnownCode = new KnownCode(3000, \"Further authentication required.\", Severity.ERROR);\r\n  public static MFA_CHALLENGE_FAILED: KnownCode = new KnownCode(3001, \"MFA failed.\", Severity.ERROR);\r\n  public static PASSWORD_CHANGE_REQUIRED: KnownCode = new KnownCode(15000, \"Password change required.\", Severity.INFO);\r\n  public static SIGNON_INVALID: KnownCode = new KnownCode(15500, \"Invalid signon\", Severity.ERROR);\r\n  public static CUSTOMER_ACCOUNT_IN_USE: KnownCode = new KnownCode(15501, \"Customer account in use.\", Severity.ERROR);\r\n  public static PASSWORD_LOCKED: KnownCode = new KnownCode(15502, \"Password locked.\", Severity.ERROR);\r\n  public static INVALID_CLIENT_UID: KnownCode = new KnownCode(15510, \"Invalid client UID.\", Severity.ERROR);\r\n  public static CONTACT_FI: KnownCode = new KnownCode(15511, \"User must contact FI.\", Severity.ERROR);\r\n  public static AUTHTOKEN_REQUIRED: KnownCode = new KnownCode(15512, \"Auth token required.\", Severity.ERROR);\r\n  public static INVALID_AUTHTOKEN: KnownCode = new KnownCode(15513, \"Invalid auth token.\", Severity.ERROR);\r\n  public static NO_DATA: KnownCode = new KnownCode(14701, \"No Tax Data for Account.\", Severity.ERROR);\r\n  public static DB_EXCEPTION: KnownCode = new KnownCode(14702,\"Database error has occured.\",Severity.ERROR);\r\n  public static NO_TAXSUPPORT: KnownCode = new KnownCode(14703,\"This Tax Year is not supported.\",Severity.ERROR);\r\n\r\n  static KnownCodes: KnownCode[] = [\r\n    KnownCode.SUCCESS,\r\n    KnownCode.CLIENT_UP_TO_DATE,\r\n    KnownCode.GENERAL_ERROR,\r\n    KnownCode.GENERAL_ACCOUNT_ERROR,\r\n    KnownCode.ACCOUNT_NOT_FOUND,\r\n    KnownCode.ACCOUNT_CLOSED,\r\n    KnownCode.ACCOUNT_NOT_AUTHORIZED,\r\n    KnownCode.DATE_TOO_SOON,\r\n    KnownCode.DUPLICATE_REQUEST,\r\n    KnownCode.UNSUPPORTED_VERSION,\r\n    KnownCode.INVALID_TAN,\r\n    KnownCode.MFA_CHALLENGE_REQUIRED,\r\n    KnownCode.MFA_CHALLENGE_FAILED,\r\n    KnownCode.PASSWORD_CHANGE_REQUIRED,\r\n    KnownCode.SIGNON_INVALID,\r\n    KnownCode.CUSTOMER_ACCOUNT_IN_USE,\r\n    KnownCode.PASSWORD_LOCKED,\r\n    KnownCode.INVALID_CLIENT_UID,\r\n    KnownCode.CONTACT_FI,\r\n    KnownCode.AUTHTOKEN_REQUIRED,\r\n    KnownCode.INVALID_AUTHTOKEN,\r\n    KnownCode.NO_DATA,\r\n    KnownCode.DB_EXCEPTION,\r\n    KnownCode.NO_TAXSUPPORT,\r\n  ];\r\n\r\n  private code: number;\r\n  private message: string;\r\n  private defaultSeverity: Severity;\r\n\r\n  constructor(code: number, message: string, defaultSeverity: Severity) {\r\n    super();\r\n    this.code = code;\r\n    this.message = message;\r\n    this.defaultSeverity = defaultSeverity;\r\n  }\r\n\r\n  public getCode(): number {\r\n    return this.code;\r\n  }\r\n\r\n  public getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  public getDefaultSeverity(): Severity {\r\n    return this.defaultSeverity;\r\n  }\r\n\r\n  public static fromCode(code: number): KnownCode {\r\n    for (var i in KnownCode.KnownCodes) {\r\n      var value: KnownCode = KnownCode.KnownCodes[i];\r\n      if (value.getCode() == code) {\r\n        return value;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  //@Override\r\n  public toString(): string {\r\n    return this.code.toString();\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Transaction status element.\r\n *\r\n * @see \"Section 3.1.4, OFX Spec\"\r\n */\r\nexport class Status {\r\n\r\n  private code: StatusCode;\r\n  private severity: Severity;\r\n  private message: string;\r\n\r\n  constructor() {\r\n    this.code = KnownCode.SUCCESS;\r\n    this.severity = undefined;\r\n  }\r\n\r\n  /**\r\n   * Status code.\r\n   *\r\n   * @return The status code.\r\n   */\r\n  public getCode(): StatusCode {\r\n    return this.code;\r\n  }\r\n\r\n  /**\r\n   * Status code.\r\n   *\r\n   * @param code Status code.\r\n   */\r\n  public setCode(code: StatusCode): void {\r\n    this.code = code;\r\n    if (typeof this.severity === 'undefined') {\r\n      this.severity = code.getDefaultSeverity();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The severity.\r\n   *\r\n   * @return The severity.\r\n   */\r\n  public getSeverity(): Severity {\r\n    return this.severity;\r\n  }\r\n\r\n  /**\r\n   * The severity.\r\n   *\r\n   * @param severity The severity.\r\n   */\r\n  public setSeverity(severity: Severity): void {\r\n    this.severity = severity;\r\n  }\r\n\r\n  /**\r\n   * Server-supplied message.\r\n   *\r\n   * @return Server-supplied message.\r\n   */\r\n  public getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * Server-supplied message.\r\n   *\r\n   * @param message Server-supplied message.\r\n   */\r\n  public setMessage(message: string): void {\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nAggregate_add( Status, \"STATUS\" );\r\nElement_add(Status, { name: \"CODE\", required: true, order: 0, type: StatusCode, read: Status.prototype.getCode, write: Status.prototype.setCode });\r\nElement_add(Status, { name: \"SEVERITY\", required: true, order: 10, type: Severity, read: Status.prototype.getSeverity, write: Status.prototype.setSeverity });\r\nElement_add(Status, { name: \"MESSAGE\", order: 20, type: String, read: Status.prototype.getMessage, write: Status.prototype.setMessage });\r\n","import { ResponseMessage } from \"./ResponseMessage\";\r\nimport { StatusHolder } from \"./common/StatusHolder\";\r\nimport { Status } from \"./common/Status\";\r\nimport { Element_add } from \"../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * A response message wrapped in a transaction.\r\n *\r\n * @see \"Section 2.4.6, OFX Spec\"\r\n */\r\nexport abstract class TransactionWrappedResponseMessage<M extends ResponseMessage> extends ResponseMessage implements StatusHolder {\r\n\r\n  private UID: string;\r\n  private clientCookie: string;\r\n  private status: Status;\r\n\r\n  /**\r\n   * UID of this transaction.\r\n   *\r\n   * @return UID of this transaction.\r\n   */\r\n  public getUID(): string {\r\n    return this.UID;\r\n  }\r\n\r\n  /**\r\n   * UID of this transaction.\r\n   *\r\n   * @param UID UID of this transaction.\r\n   */\r\n  public setUID(UID: string): void {\r\n    this.UID = UID;\r\n  }\r\n\r\n  /**\r\n   * Client cookie (echoed back by the response).\r\n   *\r\n   * @return Client cookie (echoed back by the response).\r\n   */\r\n  public getClientCookie(): string {\r\n    return this.clientCookie;\r\n  }\r\n\r\n  /**\r\n   * Client cookie (echoed back by the response).\r\n   *\r\n   * @param clientCookie Client cookie (echoed back by the response).\r\n   */\r\n  public setClientCookie(clientCookie: string): void {\r\n    this.clientCookie = clientCookie;\r\n  }\r\n\r\n  // Inherited.\r\n  public getStatusHolderName(): string {\r\n    return this.getResponseMessageName();\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessageName(): string {\r\n    var name: string = \"transaction response\";\r\n    if (this.getWrappedMessage() != null) {\r\n      name = this.getWrappedMessage().getResponseMessageName() + \" transaction\";\r\n    }\r\n//    else if ((<any>(<Object>this).constructor).Aggregate) {\r\n//      // TODO- does this work?\r\n//      var aggregate: AggregateInfo = (<any>(<Object>this).constructor).Aggregate;\r\n//      name = aggregate.getName() + \" transaction\";\r\n//    }\r\n\r\n    return name;\r\n  }\r\n\r\n  /**\r\n   * Status of the transaction.\r\n   *\r\n   * @return Status of the transaction.\r\n   */\r\n  public getStatus(): Status {\r\n    return this.status;\r\n  }\r\n\r\n  /**\r\n   * Status of the transaction.\r\n   *\r\n   * @param status Status of the transaction.\r\n   */\r\n  public setStatus(status: Status): void {\r\n    this.status = status;\r\n  }\r\n\r\n  /**\r\n   * Get the wrapped message.\r\n   *\r\n   * @return The wrapped message.\r\n   */\r\n  public abstract getWrappedMessage(): M;\r\n\r\n}\r\n\r\nElement_add(TransactionWrappedResponseMessage, { name: \"TRNUID\", required: true, order: 0, type: String, read: TransactionWrappedResponseMessage.prototype.getUID, write: TransactionWrappedResponseMessage.prototype.setUID });\r\nElement_add(TransactionWrappedResponseMessage, { name: \"CLTCOOKIE\", order: 20, type: String, read: TransactionWrappedResponseMessage.prototype.getClientCookie, write: TransactionWrappedResponseMessage.prototype.setClientCookie });\r\nChildAggregate_add(TransactionWrappedResponseMessage, { required: true, order: 10, type: Status, read: TransactionWrappedResponseMessage.prototype.getStatus, write: TransactionWrappedResponseMessage.prototype.setStatus });\r\n","import { OFXConnection } from \"../net/OFXConnection\";\r\nimport { FinancialInstitutionData } from \"../FinancialInstitutionData\";\r\nimport { OFXException } from \"../../OFXException\";\r\nimport { FinancialInstitutionProfile } from \"../FinancialInstitutionProfile\";\r\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\r\nimport { SignonRequest } from \"../../domain/data/signon/SignonRequest\";\r\nimport { ProfileRequestMessageSet } from \"../../domain/data/profile/ProfileRequestMessageSet\";\r\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\r\nimport { AccountProfile } from \"../../domain/data/signup/AccountProfile\";\r\nimport { SignupRequestMessageSet } from \"../../domain/data/signup/SignupRequestMessageSet\";\r\nimport { BankAccountDetails } from \"../../domain/data/banking/BankAccountDetails\";\r\nimport { BankAccount } from \"../BankAccount\";\r\nimport { BankingAccountImpl } from \"./BankingAccountImpl\";\r\nimport { CreditCardAccountDetails } from \"../../domain/data/creditcard/CreditCardAccountDetails\";\r\nimport { CreditCardAccount } from \"../CreditCardAccount\";\r\nimport { CreditCardAccountImpl } from \"./CreditCardAccountImpl\";\r\nimport { InvestmentAccountDetails } from \"../../domain/data/investment/accounts/InvestmentAccountDetails\";\r\nimport { InvestmentAccount } from \"../InvestmentAccount\";\r\nimport { InvestmentAccountImpl } from \"./InvestmentAccountImpl\";\r\nimport { SortedSet } from \"../../collections/SortedSet\";\r\nimport { RequestMessageSet } from \"../../domain/data/RequestMessageSet\";\r\nimport { SignonRequestMessageSet } from \"../../domain/data/signon/SignonRequestMessageSet\";\r\nimport { ProfileResponseMessageSet } from \"../../domain/data/profile/ProfileResponseMessageSet\";\r\nimport { MessageSetType } from \"../../domain/data/MessageSetType\";\r\nimport { ProfileResponseTransaction } from \"../../domain/data/profile/ProfileResponseTransaction\";\r\nimport { ProfileResponse } from \"../../domain/data/profile/ProfileResponse\";\r\nimport { ApplicationSecurity } from \"../../domain/data/ApplicationSecurity\";\r\nimport { UnsupportedOFXSecurityTypeException } from \"../../UnsupportedOFXSecurityTypeException\";\r\nimport { ResponseMessageSet } from \"../../domain/data/ResponseMessageSet\";\r\nimport { NoOFXResponseException } from \"../NoOFXResponseException\";\r\nimport { SignonResponse } from \"../../domain/data/signon/SignonResponse\";\r\nimport { SignonResponseMessageSet } from \"../../domain/data/signon/SignonResponseMessageSet\";\r\nimport { StringSet } from \"../../collections/collections\";\r\nimport { TransactionWrappedRequestMessage } from \"../../domain/data/TransactionWrappedRequestMessage\";\r\nimport { RequestMessage } from \"../../domain/data/RequestMessage\";\r\nimport { instanceof_StatusHolder, StatusHolder } from \"../../domain/data/common/StatusHolder\";\r\nimport { TransactionWrappedResponseMessage } from \"../../domain/data/TransactionWrappedResponseMessage\";\r\nimport { ResponseMessage } from \"../../domain/data/ResponseMessage\";\r\nimport { OFXTransactionException } from \"../../OFXTransactionException\";\r\nimport { Status, KnownCode } from \"../../domain/data/common/Status\";\r\nimport { OFXStatusException } from \"../../OFXStatusException\";\r\nimport { ProfileRequestTransaction } from \"../../domain/data/profile/ProfileRequestTransaction\";\r\nimport { ProfileRequest } from \"../../domain/data/profile/ProfileRequest\";\r\nimport { OFXApplicationContextHolder } from \"../context/OFXApplicationContextHolder\";\r\nimport { AccountInfoRequestTransaction } from \"../../domain/data/signup/AccountInfoRequestTransaction\";\r\nimport { AccountInfoRequest } from \"../../domain/data/signup/AccountInfoRequest\";\r\nimport { SignupResponseMessageSet } from \"../../domain/data/signup/SignupResponseMessageSet\";\r\nimport { AccountInfoResponseTransaction } from \"../../domain/data/signup/AccountInfoResponseTransaction\";\r\nimport { AccountInfoResponse } from \"../../domain/data/signup/AccountInfoResponse\";\r\nimport { FinancialInstitutionInfo } from \"../../domain/data/signon/FinancialInstitution\";\r\n\r\n\r\n/**\r\n * Base implementation for the financial institution.\r\n */\r\nexport class FinancialInstitutionImpl extends FinancialInstitutionInfo {\r\n\r\n  private connection: OFXConnection;\r\n  private data: FinancialInstitutionData;\r\n\r\n  constructor(data: FinancialInstitutionData, connection: OFXConnection) {\r\n    super();\r\n    if (data == null) {\r\n      throw new OFXException(\"Data cannot be null\");\r\n    }\r\n    if (connection == null) {\r\n      throw new OFXException(\"An OFX connection must be supplied\");\r\n    }\r\n\r\n    this.data = data;\r\n    this.connection = connection;\r\n  }\r\n\r\n  // Inherited.\r\n  public readProfile() /*throws OFXException*/: Promise<FinancialInstitutionProfile> {\r\n    var request: RequestEnvelope = this.createAuthenticatedRequest(SignonRequest.ANONYMOUS_USER, SignonRequest.ANONYMOUS_USER);\r\n    var profileRequest: ProfileRequestMessageSet = new ProfileRequestMessageSet();\r\n    profileRequest.setProfileRequest(this.createProfileTransaction());\r\n    request.getMessageSets().insert(profileRequest);\r\n    return this.sendRequest(request, this.getData().getOFXURL())\r\n    .then((response: ResponseEnvelope): FinancialInstitutionProfile => {\r\n      this.doGeneralValidationChecks(request, response);\r\n      return this.getProfile(response);\r\n    });\r\n  }\r\n\r\n  // Inherited.\r\n  public readAccountProfiles(username: string, password: string) /*throws OFXException*/: Promise<Array<AccountProfile>> {\r\n    var request: RequestEnvelope = this.createAuthenticatedRequest(username, password);\r\n    var signupRequest: SignupRequestMessageSet = new SignupRequestMessageSet();\r\n    signupRequest.setAccountInfoRequest(this.createAccountInfoTransaction());\r\n    request.getMessageSets().insert(signupRequest);\r\n    return this.sendRequest(request, this.getData().getOFXURL())\r\n    .then((response: ResponseEnvelope): Array<AccountProfile> => {\r\n      this.doGeneralValidationChecks(request, response);\r\n      return this.getAccountProfiles(response);\r\n    });\r\n  }\r\n\r\n  // Inherited.\r\n  public loadBankAccount(details: BankAccountDetails, username: string, password: string): BankAccount {\r\n    return new BankingAccountImpl(details, username, password, this);\r\n  }\r\n\r\n  // Inherited.\r\n  public loadCreditCardAccount(details: CreditCardAccountDetails, username: string, password: string): CreditCardAccount {\r\n    return new CreditCardAccountImpl(details, username, password, this);\r\n  }\r\n\r\n  // Inherited\r\n  public loadInvestmentAccount(details: InvestmentAccountDetails, username: string, password: string): InvestmentAccount {\r\n    return new InvestmentAccountImpl(details, username, password, this);\r\n  }\r\n\r\n  /**\r\n   * Create an authenticated request envelope.\r\n   *\r\n   * @param username The username.\r\n   * @param password The password.\r\n   * @return The request envelope.\r\n   */\r\n  public createAuthenticatedRequest(username: string, password: string): RequestEnvelope {\r\n    var request: RequestEnvelope = new RequestEnvelope();\r\n    var messageSets: SortedSet<RequestMessageSet> = new SortedSet<RequestMessageSet>(RequestMessageSet.contentCompare);\r\n    var signonRequest: SignonRequestMessageSet = new SignonRequestMessageSet();\r\n    signonRequest.setSignonRequest(this.createSignonRequest(username, password));\r\n    messageSets.insert(signonRequest);\r\n    request.setMessageSets(messageSets);\r\n    return request;\r\n  }\r\n\r\n  /**\r\n   * Send a request to a specific URL.\r\n   *\r\n   * @param request The request.\r\n   * @param url The url.\r\n   * @return The request.\r\n   */\r\n  public sendRequest(request: RequestEnvelope, url: string = this.getData().getOFXURL()) /*throws OFXConnectionException*/: Promise<ResponseEnvelope> {\r\n    return this.getConnection().sendRequest(request, url);\r\n  }\r\n\r\n  /**\r\n   * Open the specified response envelope and look for the profile.\r\n   *\r\n   * @param response The response envelope.\r\n   * @return The profile.\r\n   */\r\n  protected getProfile(response: ResponseEnvelope) /*throws OFXException*/: FinancialInstitutionProfile {\r\n\r\n    var profileSet: ProfileResponseMessageSet = <ProfileResponseMessageSet> response.getMessageSet(MessageSetType.profile);\r\n    if (profileSet == null) {\r\n      throw new OFXException(\"No profile response set.\");\r\n    }\r\n\r\n    var transactionResponse: ProfileResponseTransaction = profileSet.getProfileResponse();\r\n    if (transactionResponse == null) {\r\n      throw new OFXException(\"No profile transaction wrapper.\");\r\n    }\r\n\r\n    var message: ProfileResponse = transactionResponse.getMessage();\r\n    if (message == null) {\r\n      throw new OFXException(\"No profile message.\");\r\n    }\r\n    return message;\r\n  }\r\n\r\n  /**\r\n   * General validation checks on the specified response.\r\n   *\r\n   * @param request The request.\r\n   * @param response Their response.\r\n   * @throws OFXException Upon invalid response.\r\n   */\r\n  public doGeneralValidationChecks(request: RequestEnvelope, response: ResponseEnvelope) /*throws OFXException*/: void {\r\n    if (response.getSecurity() != ApplicationSecurity.NONE) {\r\n      throw new UnsupportedOFXSecurityTypeException(\"Unable to participate in \" + response.getSecurity() + \" security.\");\r\n    }\r\n\r\n    if (request.getUID() !== response.getUID()) {\r\n      throw new OFXException(\"Invalid transaction ID '\" + response.getUID() + \"' in response.  Expected: \" + request);\r\n    }\r\n\r\n    for (var requestSet of request.getMessageSets().values()) {\r\n      var responseSet: ResponseMessageSet = response.getMessageSet(requestSet.getType());\r\n      if (responseSet == null) {\r\n        throw new NoOFXResponseException(\"No response for the \" + requestSet.getType() + \" request.\");\r\n      }\r\n\r\n      if (responseSet.getType() == MessageSetType.signon) {\r\n        var signonResponse: SignonResponse = (<SignonResponseMessageSet> responseSet).getSignonResponse();\r\n\r\n        if (signonResponse == null) {\r\n          throw new NoOFXResponseException(\"No signon response.\");\r\n        }\r\n      }\r\n\r\n      var transactionIds: StringSet = {};\r\n      for (var requestMessage of requestSet.getRequestMessages()) {\r\n        if (requestMessage instanceof TransactionWrappedRequestMessage) {\r\n          transactionIds[(<TransactionWrappedRequestMessage<RequestMessage>> requestMessage).getUID()] = true;\r\n        }\r\n      }\r\n\r\n      for (var responseMessage of responseSet.getResponseMessages()) {\r\n        if (instanceof_StatusHolder(responseMessage)) {\r\n          this.validateStatus(<StatusHolder><any>responseMessage);\r\n        }\r\n\r\n        if (responseMessage instanceof TransactionWrappedResponseMessage) {\r\n          var uid: string = (<TransactionWrappedResponseMessage<ResponseMessage>> responseMessage).getUID();\r\n          if (uid == null) {\r\n            throw new OFXTransactionException(\"Invalid response transaction: no UID.\");\r\n          }\r\n          else if (!(uid in transactionIds)) {\r\n            throw new OFXTransactionException(\"Response to an unknown transaction: \" + uid + \".\");\r\n          } else {\r\n            delete transactionIds[uid];\r\n          }\r\n        }\r\n      }\r\n\r\n      if (Object.keys(transactionIds).length != 0) {\r\n        throw new OFXTransactionException(\"No response to the following transactions: \" + transactionIds);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate the status of the given status holder.\r\n   *\r\n   * @param statusHolder The status holder.\r\n   */\r\n  protected validateStatus(statusHolder: StatusHolder) /*throws OFXException*/: void {\r\n    var status: Status = statusHolder.getStatus();\r\n    if (status == null) {\r\n      throw new OFXException(\"Invalid OFX response: no status returned in the \" + statusHolder.getStatusHolderName() + \" response.\");\r\n    }\r\n\r\n    if (KnownCode.SUCCESS != status.getCode()) {\r\n      var message: string = status.getMessage();\r\n      if (message == null) {\r\n        message = \"No response status code.\";\r\n\r\n        if (status.getCode() != null) {\r\n          message = status.getCode().getMessage();\r\n        }\r\n      }\r\n\r\n      throw new OFXStatusException(status, \"Invalid \" + statusHolder.getStatusHolderName() + \": \" + message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a transaction message for a profile request.\r\n   *\r\n   * @return The transaction message.\r\n   */\r\n  protected createProfileTransaction(): ProfileRequestTransaction {\r\n    var profileTx: ProfileRequestTransaction = new ProfileRequestTransaction();\r\n    profileTx.setMessage(this.createProfileRequest());\r\n    return profileTx;\r\n  }\r\n\r\n  /**\r\n   * Create a profile request.\r\n   *\r\n   * @return The profile request.\r\n   */\r\n  protected createProfileRequest(): ProfileRequest {\r\n    var profileRequest: ProfileRequest = new ProfileRequest();\r\n    profileRequest.setProfileLastUpdated(new Date(0));\r\n    return profileRequest;\r\n  }\r\n\r\n  /**\r\n   * Create a sign-on request for the specified user.\r\n   *\r\n   * @param username The username.\r\n   * @param password The password.\r\n   * @return The signon request.\r\n   */\r\n  protected createSignonRequest(username: string, password: string): SignonRequest {\r\n    var signonRequest: SignonRequest = new SignonRequest();\r\n    signonRequest.setTimestamp(new Date());\r\n    var fi: FinancialInstitutionInfo = new FinancialInstitutionInfo();\r\n    fi.setId(this.getData().getFinancialInstitutionId());\r\n    fi.setOrganization(this.getData().getOrganization());\r\n    signonRequest.setFinancialInstitution(fi);\r\n    signonRequest.setUserId(username);\r\n    signonRequest.setPassword(password);\r\n    signonRequest.setApplicationId(OFXApplicationContextHolder.getCurrentContext().getAppId());\r\n    signonRequest.setApplicationVersion(OFXApplicationContextHolder.getCurrentContext().getAppVersion());\r\n    return signonRequest;\r\n  }\r\n\r\n  /**\r\n   * Create a transaction for an account info request.\r\n   *\r\n   * @return The transaction.\r\n   */\r\n  protected createAccountInfoTransaction(): AccountInfoRequestTransaction {\r\n    var transaction: AccountInfoRequestTransaction = new AccountInfoRequestTransaction();\r\n    transaction.setMessage(this.createAccountInfoRequest());\r\n    return transaction;\r\n  }\r\n\r\n  /**\r\n   * Create an account info request.\r\n   *\r\n   * @return The account info request.\r\n   */\r\n  protected createAccountInfoRequest(): AccountInfoRequest {\r\n    return new AccountInfoRequest();\r\n  }\r\n\r\n  /**\r\n   * Get the account profiles for the specified response envelope.\r\n   *\r\n   * @param response The response envelope.\r\n   * @return The account profiles.\r\n   */\r\n  protected getAccountProfiles(response: ResponseEnvelope) /*throws OFXException*/: Array<AccountProfile> {\r\n    var messageSet: SignupResponseMessageSet = <SignupResponseMessageSet> response.getMessageSet(MessageSetType.signup);\r\n    if (messageSet == null) {\r\n      throw new OFXException(\"No signup response message set.\");\r\n    }\r\n\r\n    var transaction: AccountInfoResponseTransaction = messageSet.getAccountInfoResponse();\r\n    if (transaction == null) {\r\n      throw new OFXException(\"No account info transaction in the signup response.\");\r\n    }\r\n\r\n    var infoResponse: AccountInfoResponse = transaction.getMessage();\r\n    if (infoResponse == null) {\r\n      throw new OFXException(\"No account info response in the transaction.\");\r\n    }\r\n\r\n    return infoResponse.getAccounts();\r\n  }\r\n\r\n  /**\r\n   * The connection used by this implementation.\r\n   *\r\n   * @return The connection used by this implementation.\r\n   */\r\n  public getConnection(): OFXConnection {\r\n    return this.connection;\r\n  }\r\n\r\n  /**\r\n   * The financial institution data.\r\n   *\r\n   * @return The financial institution data.\r\n   */\r\n  public getData(): FinancialInstitutionData {\r\n    return this.data;\r\n  }\r\n}\r\n","import { OFXException, Error } from \"../../OFXException\";\r\n\r\n\r\n/**\r\n * Error with a particular OFX connection.\r\n */\r\nexport class OFXConnectionException extends OFXException {\r\n\r\n  public constructor(message: string, e: Error = null) {\r\n    super(message, e);\r\n  }\r\n\r\n}\r\n","import { OFXConnectionException } from \"./OFXConnectionException\";\r\n\r\n\r\nexport class OFXServerException extends OFXConnectionException {\r\n\r\n  private httpCode: number;\r\n\r\n  constructor(message: string, httpCode: number) {\r\n    super(message);\r\n    this.httpCode = httpCode;\r\n  }\r\n\r\n  public getHttpCode(): number {\r\n    return this.httpCode;\r\n  }\r\n}\r\n","const debug = require('debug') as debug.IDebug;\r\n\r\nexport const LOG = {\r\n\tinfo: debug('ofx4js:info'),\r\n\tdebug: debug('ofx4js:debug'),\r\n\twarning: debug('ofx4js:warning'),\r\n\terror: debug('ofx4js:error'),\r\n}\r\n","import { Severity, StatusCode } from \"./StatusCode\";\r\n\r\n/**\r\n * Holder for an unknown status code.\r\n */\r\nexport class UnknownStatusCode extends StatusCode {\r\n\r\n  private code: number;\r\n  private message: string;\r\n  private defaultSeverity: /*Status.*/Severity;\r\n\r\n  constructor(code: number, message: string, defaultSeverity: /*Status.*/Severity) {\r\n    super();\r\n    this.code = code;\r\n    this.message = message;\r\n    this.defaultSeverity = defaultSeverity;\r\n  }\r\n\r\n  public getCode(): number {\r\n    return this.code;\r\n  }\r\n\r\n  public getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  public getDefaultSeverity(): /*Status.*/Severity {\r\n    return this.defaultSeverity;\r\n  }\r\n\r\n  //@Override\r\n  public toString(): string {\r\n    return this.code.toString();\r\n  }\r\n}\r\n","import { ok as assert } from \"assert\";\r\nimport { KnownCode } from '../domain/data/common/Status';\r\nimport { StatusCode, Severity } from '../domain/data/common/StatusCode';\r\nimport { UnknownStatusCode } from '../domain/data/common/UnknownStatusCode';\r\nimport { isAssignableFrom } from '../meta/PropertyDescriptor';\r\nimport { StringConversion } from './StringConversion';\r\n\r\n/**\r\n * Utility class for conversion to/from OFX strings.\r\n */\r\nexport class DefaultStringConversion implements StringConversion {\r\n\r\n  public toString(value: Object): string {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    else if (typeof value === \"boolean\") {\r\n      return value ? \"Y\" : \"N\";\r\n    }\r\n    else if (value instanceof Date) {\r\n      return this.formatDate(value);\r\n    }\r\n    else if (typeof value === \"number\") {\r\n      return value + \"\";\r\n    }\r\n    else {\r\n      return value.toString();\r\n    }\r\n  }\r\n\r\n  public fromString<E>(clazz: any, value: string): E {\r\n    if (!value) {\r\n      return null;\r\n    }\r\n    else if (clazz === StatusCode) {\r\n      var code: number = <number><any>value;\r\n      var statusCode: StatusCode = KnownCode.fromCode(code);\r\n      if (!statusCode) {\r\n        statusCode = new UnknownStatusCode(code, \"Unknown status code.\", Severity.ERROR);\r\n      }\r\n\r\n      return <E><any>statusCode;\r\n    }\r\n    else if (isAssignableFrom(Number, clazz)) {\r\n      return <E><any>parseFloat(value)\r\n    }\r\n    else if (isAssignableFrom(Boolean, clazz)) {\r\n      return <E><any>(\"Y\" === value.toUpperCase());\r\n    }\r\n    else if (isAssignableFrom(Date, clazz)) {\r\n      return <E><any>this.parseDate(value);\r\n    }\r\n    // this goes last because a lot of things are objects\r\n    else if (typeof clazz === \"object\") {\r\n      // enum\r\n      assert(value in clazz);\r\n      if(value in clazz) {\r\n        return clazz[value];\r\n      }\r\n    }\r\n    return <E><any>value;\r\n  }\r\n\r\n  /**\r\n   * Parses a date according to OFX.\r\n   *\r\n   * @param value The value of the date.\r\n   * @return The date value.\r\n   */\r\n  protected parseDate(value: string) {\r\n    var year: number = parseInt(value.substr(0, 4));\r\n    var month: number = parseInt(value.substr(4, 2)) - 1; // javascript month numbers are zero-based\r\n    var day: number = parseInt(value.substr(6, 2));\r\n    var hour: number = parseInt(value.substr(8, 2));\r\n    var minute: number = parseInt(value.substr(10, 2));\r\n    var second: number = parseInt(value.substr(12, 2)) || 0;\r\n    var milli: number = parseInt(value.substr(15, 3)) || 0;\r\n\r\n    // add timezone offset\r\n    var bracket: number = value.indexOf(\"[\");\r\n    if(bracket != -1) {\r\n      var close = value.indexOf(\":\");\r\n      if(close === -1) {\r\n        close = value.indexOf(\"]\");\r\n      }\r\n      var gmtOffset: any = value.substring(bracket+1, close);\r\n      hour -= 1.0 * gmtOffset;\r\n    }\r\n\r\n    // create date as UTC\r\n    return new Date(Date.UTC(year, month, day, hour, minute, second, milli));\r\n  }\r\n\r\n  /**\r\n   * Format the date according to the OFX spec.\r\n   *\r\n   * @param date The date.\r\n   * @return The date format.\r\n   */\r\n  protected formatDate(date: Date): string {\r\n    var gmt = new Date(date.valueOf() + date.getTimezoneOffset() * 60000);\r\n    return this.pad(gmt.getFullYear(), 4) +\r\n      this.pad(gmt.getMonth() + 1, 2) +\r\n      this.pad(gmt.getDate(), 2) +\r\n      this.pad(gmt.getHours(), 2) +\r\n      this.pad(gmt.getMinutes(), 2) +\r\n      this.pad(gmt.getSeconds(), 2) +\r\n      \".\" +\r\n      this.dpad(gmt.getMilliseconds(), 3);\r\n  }\r\n\r\n\r\n  /**\r\n   * Pad a number with leading zeroes until it is of <tt>size</tt> length\r\n   *\r\n   * @param num number\r\n   * @param size number of digits in final number\r\n   * @return padded number\r\n   */\r\n  private pad(num: number, size: number): string {\r\n    var s = num+\"\";\r\n    while (s.length < size) {\r\n      s = \"0\" + s;\r\n    }\r\n    return s;\r\n  }\r\n\r\n  /**\r\n   * Pad a number with trailing zeroes until it is of <tt>size</tt> length.\r\n   * Intended for numbers after a decimal point to get a fixed number of decimals\r\n   *\r\n   * @param num number\r\n   * @param size number of digits in final number\r\n   * @return padded number\r\n   */\r\n  private dpad(num: number, size: number): string {\r\n    var s = num+\"\";\r\n    while (s.length < size) {\r\n      s = s + \"0\";\r\n    }\r\n    return s;\r\n  }\r\n}\r\n","import { LOG } from \"../log/Log\";\r\nimport { StringConversion } from \"./StringConversion\";\r\nimport { DefaultStringConversion } from \"./DefaultStringConversion\";\r\nimport { OFXWriter } from \"./OFXWriter\";\r\nimport { AggregateInfo, HeaderValues } from \"./AggregateInfo\";\r\nimport { AggregateIntrospector } from \"./AggregateIntrospector\";\r\nimport { OFXException } from \"../OFXException\";\r\nimport { StringMap } from \"../collections/collections\";\r\nimport { SortedSet } from \"../collections/SortedSet\";\r\nimport { AggregateAttribute, AggregateAttributeType } from \"./AggregateAttribute\";\r\n\r\n\r\n/**\r\n * Marshaller for aggregate objects.\r\n */\r\nexport class AggregateMarshaller {\r\n\r\n  private conversion: StringConversion;\r\n\r\n  constructor() {\r\n    this.conversion = new DefaultStringConversion();\r\n  }\r\n\r\n  /**\r\n   * Marshal the specified aggregate object.\r\n   *\r\n   * @param aggregate The aggregate to marshal.\r\n   * @param writer    The writer.\r\n   */\r\n  public marshal(aggregate: Object, writer: OFXWriter) /*throws IOException*/: void {\r\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(aggregate.constructor);\r\n    if (aggregateInfo == null) {\r\n      throw new OFXException(\"Unable to marshal object (no aggregate metadata found).\");\r\n    }\r\n\r\n    if (aggregateInfo.hasHeaders()) {\r\n      var headerValues: HeaderValues = aggregateInfo.getHeaders(aggregate);\r\n      var convertedValues: StringMap = {};\r\n      for (var header in headerValues) {\r\n        convertedValues[header] = this.getConversion().toString(headerValues[header]);\r\n      }\r\n      writer.writeHeaders(convertedValues);\r\n    }\r\n\r\n    writer.writeStartAggregate(aggregateInfo.getName());\r\n    var AggregateAttributes: SortedSet<AggregateAttribute> = aggregateInfo.getAttributes();\r\n    this.writeAggregateAttributes(aggregate, writer, AggregateAttributes);\r\n    writer.writeEndAggregate(aggregateInfo.getName());\r\n  }\r\n\r\n  /**\r\n   * Write the aggregate attributes for the specified aggregate.\r\n   *\r\n   * @param aggregate           The aggregate.\r\n   * @param writer              The writer.\r\n   * @param aggregateAttributes The aggregate attributes.\r\n   */\r\n  protected writeAggregateAttributes(aggregate: Object, writer: OFXWriter, aggregateAttributes: SortedSet<AggregateAttribute>) /*throws IOException*/: void {\r\n    for (var i in aggregateAttributes.values()) {\r\n      var aggregateAttribute: AggregateAttribute = aggregateAttributes.values()[i];\r\n      var childValue: Object = null;\r\n      try {\r\n        childValue = aggregateAttribute.get(aggregate);\r\n      }\r\n      catch (e) {\r\n        LOG.error(\"Unable to get \" + aggregateAttribute.toString() + \"%o\", e);\r\n      }\r\n\r\n      if (childValue != null) {\r\n        switch (aggregateAttribute.getType()) {\r\n          case AggregateAttributeType.CHILD_AGGREGATE:\r\n            var childValues: Array<Object>;\r\n            if (childValue instanceof Array) {\r\n              childValues = childValue;\r\n            }\r\n            else if(childValue instanceof SortedSet) {\r\n              childValues = (<SortedSet<Object>>childValue).values();\r\n            }\r\n            else {\r\n              childValues = [childValue];\r\n            }\r\n\r\n            for (var objValue of childValues) {\r\n              var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(objValue.constructor);\r\n              if (aggregateInfo == null) {\r\n                throw new OFXException(\"Unable to marshal object of type \" + objValue.constructor.name + \" (no aggregate metadata found).\");\r\n              }\r\n\r\n              var attributeName: string = aggregateAttribute.getName();\r\n              if (aggregateAttribute.isArray()) {\r\n                attributeName = aggregateInfo.getName();\r\n              }\r\n\r\n              writer.writeStartAggregate(attributeName);\r\n              this.writeAggregateAttributes(objValue, writer, aggregateInfo.getAttributes());\r\n              writer.writeEndAggregate(attributeName);\r\n            }\r\n            break;\r\n          case AggregateAttributeType.ELEMENT:\r\n            var strValue: string = this.getConversion().toString(childValue);\r\n            if ((strValue != null) && (\"\" !== strValue.trim())) {\r\n              writer.writeElement(aggregateAttribute.getName(), strValue);\r\n            }\r\n            break;\r\n          default:\r\n            throw new OFXException(\"Unknown aggregate attribute type: \" + aggregateAttribute.getType());\r\n        }\r\n      }\r\n      else if (aggregateAttribute.isRequired()) {\r\n        throw new OFXException(\"Required \" + aggregateAttribute.toString() + \" is null or empty.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The conversion.\r\n   *\r\n   * @return The conversion.\r\n   */\r\n  public getConversion(): StringConversion {\r\n    return this.conversion;\r\n  }\r\n\r\n  /**\r\n   * The conversion.\r\n   *\r\n   * @param conversion The conversion.\r\n   */\r\n  public setConversion(conversion: StringConversion): void {\r\n    this.conversion = conversion;\r\n  }\r\n}\r\n","import { ok as assert } from \"assert\";\r\n\r\nexport class StringReader {\r\n  private _text: string;\r\n  private _cursor: number;\r\n  private _mark: number;\r\n\r\n  constructor(text: string) {\r\n    this._text = text;\r\n    this._cursor = 0;\r\n    this._mark = 0;\r\n  }\r\n\r\n  public read(cbuf?: Array<string>, offset?: number, length?: number): number|string {\r\n    if(this._cursor >= this._text.length) {\r\n      return -1;\r\n    } else {\r\n      if(arguments.length === 0) {\r\n        return this.readChar();\r\n      } else {\r\n        offset = offset || 0;\r\n        length = length || cbuf.length;\r\n        length = Math.min(length, this._text.length - this._cursor);\r\n        for(var i=0; i<length; i++) {\r\n          cbuf[offset + i] = this.readChar();\r\n        }\r\n        return length;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public readChar(): string {\r\n    assert(this._cursor < this._text.length);\r\n    var ch = this._text[this._cursor];\r\n    this._cursor++;\r\n    return ch;\r\n  }\r\n\r\n\r\n  public close(): void {\r\n    this._text = null;\r\n    this._cursor = null;\r\n    this._mark = null;\r\n  }\r\n\r\n\r\n  public mark(/*readLimit*/): void {\r\n    this._mark = this._cursor;\r\n  }\r\n\r\n\r\n  public reset(): void {\r\n    this._cursor = this._mark;\r\n  }\r\n\r\n\r\n  public remainder(): string {\r\n    return this._text.substring(this._cursor);\r\n  }\r\n}\r\n","import { OFXHandler } from \"./OFXHandler\";\r\n\r\n\r\n/**\r\n * Default (no-op) implementation of an OFX handler.\r\n */\r\nexport class DefaultHandler implements OFXHandler {\r\n\r\n  public onHeader(name: string, value: string): void {\r\n  }\r\n\r\n  public onElement(name: string, value: string): void {\r\n  }\r\n\r\n  public startAggregate(aggregateName: string): void {\r\n  }\r\n\r\n  public endAggregate(aggregateName: string): void {\r\n  }\r\n\r\n}\r\n","import { OFXException } from '../OFXException'\r\n\r\nexport class OFXParseException extends OFXException {\r\n\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n","export class Stack<T> {\r\n\tprivate values: Array<T>;\r\n\r\n\tconstructor() {\r\n\t\tthis.values = [];\r\n\t}\r\n\r\n\r\n\tpublic push(...values: Array<T>): void {\r\n\t  return Array.prototype.push.apply(this.values, arguments);\r\n\t}\r\n\r\n\r\n\tpublic pop(): T {\r\n\t  return Array.prototype.pop.call(this.values);\r\n\t}\r\n\r\n\r\n\tpublic peek(): T {\r\n\t  if(this.values.length === 0) {\r\n\t    return null;\r\n\t  } else {\r\n\t    return this.values[this.values.length - 1];\r\n\t  }\r\n\t}\r\n\r\n\r\n\tpublic isEmpty(): boolean {\r\n\t  return this.values.length === 0;\r\n\t}\r\n}\r\n","\r\nexport enum OFXParseEventType {\r\n  CHARACTERS,\r\n  ELEMENT\r\n}\r\n\r\n/**\r\n * An event during OFX parsing.\r\n */\r\nexport class OFXParseEvent {\r\n  private eventType: OFXParseEventType;\r\n  private eventValue: string;\r\n\r\n  constructor(eventType: OFXParseEventType, eventValue: string) {\r\n    this.eventType = eventType;\r\n    this.eventValue = eventValue;\r\n  }\r\n\r\n  public getEventType(): OFXParseEventType {\r\n    return this.eventType;\r\n  }\r\n\r\n  public getEventValue(): string {\r\n    return this.eventValue;\r\n  }\r\n}\r\n","import { ok as assert } from \"assert\";\r\nimport { Stack } from '../collections/Stack'\r\nimport { OFXParseEvent, OFXParseEventType } from './OFXParseEvent'\r\nimport { OFXHandler } from './OFXHandler'\r\nimport { LOG } from '../log/Log'\r\nimport { OFXException } from '../OFXException';\r\nimport { SAXParser, Tag as SAXTag } from 'sax';\r\n\r\n\r\nexport class OFXV2ContentHandler {\r\n\r\n  private eventStack: Stack<OFXParseEvent>;\r\n  private ofxHandler: OFXHandler;\r\n  private startedEvents: Array<OFXParseEvent>;\r\n\r\n  constructor(ofxHandler: OFXHandler) {\r\n    this.eventStack = new Stack<OFXParseEvent>();\r\n    this.startedEvents = new Array<OFXParseEvent>();\r\n\r\n    if (ofxHandler == null) {\r\n      throw new OFXException(\"An OFX handler must be supplied.\");\r\n    }\r\n\r\n    this.ofxHandler = ofxHandler;\r\n  }\r\n\r\n  public install(parser: SAXParser) {\r\n    parser.ontext = this.ontext.bind(this);\r\n    parser.onopentag = this.onopentag.bind(this);\r\n    parser.onclosetag = this.onclosetag.bind(this);\r\n  }\r\n\r\n  public onopentag(node: SAXTag): void {\r\n    var qName: string = node.name;\r\n    LOG.debug(\"START ELEMENT: \" + qName);\r\n\r\n    if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEventType.ELEMENT) && (!this.isAlreadyStarted(this.eventStack.peek()))) {\r\n      var eventValue: string = this.eventStack.peek().getEventValue();\r\n      LOG.debug(\"Element \" + qName + \" is starting aggregate \" + eventValue);\r\n\r\n      //the last element started was not ended; we are assuming we've started a new aggregate.\r\n      this.ofxHandler.startAggregate(eventValue);\r\n\r\n      this.startedEvents.push(this.eventStack.peek());\r\n    }\r\n\r\n    this.eventStack.push(new OFXParseEvent(OFXParseEventType.ELEMENT, qName));\r\n  }\r\n\r\n  /**\r\n   * Whether the specified element aggregate has already been started.\r\n   *\r\n   * @param event The event containing the start.\r\n   * @return Whether the specified element aggregate has already been started.\r\n   */\r\n  protected isAlreadyStarted(event: OFXParseEvent): boolean {\r\n    return this.startedEvents.indexOf(event) != -1;\r\n  }\r\n\r\n  public onclosetag(qName: string): void {\r\n    LOG.debug(\"END ELEMENT: \" + qName);\r\n\r\n    var eventToFinish: OFXParseEvent = this.eventStack.pop();\r\n    if (eventToFinish.getEventType() == OFXParseEventType.CHARACTERS) {\r\n      var chars: string = eventToFinish.getEventValue().trim();\r\n\r\n      if (this.eventStack.isEmpty()) {\r\n        throw new OFXException(\"Illegal character data outside main OFX root element: \\\"\" + chars + \"\\\".\");\r\n      }\r\n      else {\r\n        var elementEvent: OFXParseEvent = this.eventStack.pop();\r\n        if (elementEvent.getEventType() != OFXParseEventType.ELEMENT) {\r\n          throw new OFXException(\"Illegal OFX event before characters \\\"\" + chars + \"\\\" (\" + elementEvent.getEventType() + \")!\");\r\n        }\r\n        else {\r\n          var value: string = elementEvent.getEventValue();\r\n          LOG.debug(\"Element \" + value + \" processed with value \" + chars);\r\n          this.ofxHandler.onElement(value, chars);\r\n        }\r\n      }\r\n    }\r\n    else if (eventToFinish.getEventType() == OFXParseEventType.ELEMENT) {\r\n      //we're ending an aggregate (no character data on the stack).\r\n      if (qName === eventToFinish.getEventValue()) {\r\n        //the last element on the stack is ours; we're ending an OFX aggregate.\r\n        var value: string = eventToFinish.getEventValue();\r\n        LOG.debug(\"Ending aggregate \" + value);\r\n        this.ofxHandler.endAggregate(value);\r\n\r\n        var i = this.startedEvents.indexOf(eventToFinish);\r\n        assert(i !== -1);\r\n        if (i > -1) {\r\n          this.startedEvents.splice(i, 1);\r\n        }\r\n      }\r\n      else {\r\n        throw new OFXException(\"Unexpected end tag: \" + eventToFinish.getEventValue());\r\n      }\r\n    }\r\n    else {\r\n      throw new OFXException(\"Illegal OFX event: \" + eventToFinish.getEventType());\r\n    }\r\n  }\r\n\r\n  public ontext(value: string): void {\r\n    if (value.trim().length > 0) {\r\n      var event: OFXParseEvent;\r\n      if ((!this.eventStack.isEmpty()) && (this.eventStack.peek().getEventType() == OFXParseEventType.CHARACTERS)) {\r\n        //append the characters...\r\n        event = new OFXParseEvent(OFXParseEventType.CHARACTERS, this.eventStack.pop().getEventValue() + value);\r\n      }\r\n      else {\r\n        event = new OFXParseEvent(OFXParseEventType.CHARACTERS, value);\r\n      }\r\n      this.eventStack.push(event);\r\n    }\r\n  }\r\n}\r\n","\r\nimport { SAXParser } from \"sax\";\r\nimport * as sax from \"sax\";\r\nimport { LOG } from \"../log/Log\";\r\nimport { OFXReader } from \"./OFXReader\";\r\nimport { OFXHandler } from \"./OFXHandler\";\r\nimport { DefaultHandler } from \"./DefaultHandler\";\r\nimport { StringReader } from \"./StringReader\";\r\nimport { OFXParseException } from \"./OFXParseException\";\r\nimport { OFXV2ContentHandler } from \"./OFXV2ContentHandler\";\r\n\r\n\r\nfunction arraysEqual(a1: Array<string>, a2: Array<string>) {\r\n  if(a1.length !== a2.length) {\r\n    return false;\r\n  }\r\n  for(var i=0; i<a1.length; i++) {\r\n    if(a1[i] !== a2[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n\r\n/**\r\n * Base class for an OFX reader.  Parses the headers and determines whether we're parsing an\r\n * OFX v2 or OFX v1 element.  For OFX v2, uses a standard SAX library.\r\n */\r\nexport /*abstract*/ class BaseOFXReader implements OFXReader {\r\n  public static OFX_2_PROCESSING_INSTRUCTION_PATTERN: RegExp = /<\\\\?OFX ([^\\\\?]+)\\\\?>/;\r\n  private contentHandler: OFXHandler;\r\n\r\n  constructor() {\r\n    this.contentHandler = new DefaultHandler();\r\n  }\r\n\r\n  /**\r\n   * The content handler.\r\n   *\r\n   * @return The content handler.\r\n   */\r\n  public getContentHandler(): OFXHandler {\r\n    return this.contentHandler;\r\n  }\r\n\r\n  /**\r\n   * The content handler.\r\n   *\r\n   * @param handler The content handler.\r\n   */\r\n  public setContentHandler(handler: OFXHandler): void {\r\n    this.contentHandler = handler;\r\n  }\r\n\r\n  /**\r\n   * Parse the reader, including the headers.\r\n   *\r\n   * @param reader The reader.\r\n   */\r\n  public parse(reader: StringReader): void  {\r\n    var header: string = \"\";\r\n    var firstElementStart = this.getFirstElementStart();\r\n    var buffer: Array<string> = new Array(firstElementStart.length);\r\n    reader.mark(/*firstElementStart.length*/);\r\n    var ch: any = reader.read(buffer);\r\n    while ((ch != -1) && (!arraysEqual(buffer, firstElementStart))) {\r\n      if (!this.contains(buffer, '<')) {\r\n        //if the buffer contains a '<', then we might already have marked the beginning.\r\n        reader.mark(/*firstElementStart.length*/);\r\n      }\r\n      ch = reader.read();\r\n      var shifted: string = this.shiftAndAppend(buffer, ch);\r\n      header += shifted;\r\n    }\r\n\r\n    if (ch == -1) {\r\n      throw new OFXParseException(\"Invalid OFX: no root <OFX> element!\");\r\n    }\r\n    else {\r\n      var matches = BaseOFXReader.OFX_2_PROCESSING_INSTRUCTION_PATTERN.exec(header);\r\n      if (matches) {\r\n        LOG.info(\"Processing OFX 2 header...\");\r\n\r\n        this.processOFXv2Headers(matches[1]);\r\n        reader.reset();\r\n        this.parseV2FromFirstElement(reader.remainder());\r\n      }\r\n      else {\r\n        LOG.info(\"Processing OFX 1 headers...\");\r\n        this.processOFXv1Headers(header);\r\n        reader.reset();\r\n        this.parseV1FromFirstElement(reader.remainder());\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The first characters of the first OFX element, '<', 'O', 'F', 'X'\r\n   *\r\n   * @return The first characters of the OFX element.\r\n   */\r\n  protected getFirstElementStart(): Array<string> {\r\n    return [ '<', 'O', 'F', 'X' ];\r\n  }\r\n\r\n  /**\r\n   * Whether the specified buffer contains the specified character.\r\n   *\r\n   * @param buffer The buffer.\r\n   * @param c The character to search for.\r\n   * @return Whether the specified buffer contains the specified character.\r\n   */\r\n  private contains(buffer: Array<string>, c: string): boolean {\r\n    for (var i=0; i<buffer.length; i++) {\r\n      var ch = buffer[i];\r\n      if (ch === c) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private shiftAndAppend(buffer: Array<string>, c: string): string {\r\n    var shifted = buffer[0];\r\n    for (var i = 0; i + 1 < buffer.length; i++) {\r\n      buffer[i] = buffer[i + 1];\r\n    }\r\n    buffer[buffer.length - 1] = c;\r\n    return shifted;\r\n  }\r\n\r\n  /**\r\n   * Parse an OFX version 1 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\r\n   *\r\n   * @param text The text.\r\n   */\r\n  protected parseV1FromFirstElement(text: string): void {\r\n    var strict = false;\r\n    var parser: SAXParser = sax.parser(strict, {});\r\n    var handler = new OFXV2ContentHandler(this.getContentHandler());\r\n    handler.install(parser);\r\n    parser.write(text);\r\n  }\r\n\r\n  /**\r\n   * Parse an OFX version 2 stream from the first OFX element (defined by the {@link #getFirstElementStart() first element characters}).\r\n   *\r\n   * @param text The text.\r\n   */\r\n  protected parseV2FromFirstElement(text: string): void {\r\n    var strict = true;\r\n    var parser: SAXParser = sax.parser(strict, {});\r\n    var handler = new OFXV2ContentHandler(this.getContentHandler());\r\n    handler.install(parser);\r\n    parser.write(text);\r\n  }\r\n\r\n  /**\r\n   * Process the given characters as OFX version 1 headers.\r\n   *\r\n   * @param chars The characters to process.\r\n   */\r\n  protected processOFXv1Headers(chars: string): void {\r\n    var lines: Array<string> = chars.split(/(\\n|\\r\\n)/);\r\n    for(var i=0; i<lines.length; i++) {\r\n      var line: string = lines[i];\r\n      var colonIndex: number = line.indexOf(':');\r\n      if (colonIndex >= 0) {\r\n        var name: string = line.substring(0, colonIndex);\r\n        var value: string = line.length > colonIndex ? line.substring(colonIndex + 1) : \"\";\r\n        this.contentHandler.onHeader(name, value);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Process the given characters as OFX version 2 headers.\r\n   *\r\n   * @param chars The characters to process.\r\n   */\r\n  protected processOFXv2Headers(chars: string) /*throws OFXParseException*/: void {\r\n    var nameValuePairs: string[] = chars.split(\"\\\\s+\");\r\n    for (var nameValuePair of nameValuePairs) {\r\n      var equalsIndex: number = nameValuePair.indexOf('=');\r\n      if (equalsIndex >= 0) {\r\n        var name: string = nameValuePair.substring(0, equalsIndex);\r\n        var value: string = nameValuePair.length > equalsIndex ? nameValuePair.substring(equalsIndex + 1) : \"\";\r\n        value = value.replace('\"', ' ');\r\n        value = value.replace('\\'', ' ');\r\n        value = value.trim();\r\n        this.contentHandler.onHeader(name, value);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { OFXParseException } from \"./OFXParseException\";\r\n\r\nexport class OFXSyntaxException extends OFXParseException {\r\n\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n","import { LOG } from \"../log/Log\";\r\nimport { AggregateInfo } from \"./AggregateInfo\";\r\nimport { OFXException } from \"../OFXException\";\r\nimport { OFXHandler } from \"./OFXHandler\";\r\nimport { Stack } from \"../collections/Stack\";\r\nimport { StringConversion } from \"./StringConversion\";\r\nimport { AggregateIntrospector } from \"./AggregateIntrospector\";\r\nimport { AggregateAttribute, AggregateAttributeType } from \"./AggregateAttribute\";\r\nimport { OFXSyntaxException } from \"./OFXSyntaxException\";\r\n\r\n\r\nclass AggregateInfoHolder {\r\n  public aggregate: Object;\r\n  public info: AggregateInfo;\r\n  public aggregateName: string;\r\n  public currentAttributeIndex: number;\r\n\r\n  constructor(arg1: string | Object, arg2?: AggregateInfo, arg3?: string) {\r\n    this.currentAttributeIndex = 0;\r\n    switch(arguments.length) {\r\n      case 1:\r\n        this.AggregateInfoHolder1.apply(this, arguments);\r\n        break;\r\n\r\n      case 3:\r\n        this.AggregateInfoHolder3.apply(this, arguments);\r\n        break;\r\n\r\n      default:\r\n        throw new OFXException(\"invalid number of arguments\");\r\n    }\r\n  }\r\n\r\n  private AggregateInfoHolder1(ignoredAggregateName: string) {\r\n    this.aggregate = null;\r\n    this.info = null;\r\n    this.aggregateName = ignoredAggregateName;\r\n  }\r\n\r\n  private AggregateInfoHolder3(aggregate: Object, info: AggregateInfo, aggregateName: string) {\r\n    this.aggregateName = aggregateName;\r\n    this.aggregate = aggregate;\r\n    this.info = info;\r\n  }\r\n\r\n  public isBeingSkipped(): boolean {\r\n    return this.aggregate == null || this.info == null;\r\n  }\r\n\r\n  public isSkipping(aggregateName: string): boolean {\r\n    return this.isBeingSkipped() && aggregateName === this.aggregateName;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Content handler that manages the aggregate using a stack-based implementation.\r\n */\r\nexport class AggregateStackContentHandler<A> implements OFXHandler {\r\n\r\n  private stack: Stack<AggregateInfoHolder> = new Stack<AggregateInfoHolder>();\r\n  private conversion: StringConversion;\r\n  private parsingRoot: boolean = false;\r\n\r\n  constructor(root: A, conversion: StringConversion) {\r\n    this.stack = new Stack<AggregateInfoHolder>();\r\n    this.parsingRoot = false;\r\n\r\n    var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(root.constructor);\r\n    if (aggregateInfo == null) {\r\n      throw new OFXException(\"Unable to marshal object of type '\" + root.constructor.name + \"' (no aggregate metadata found).\");\r\n    }\r\n\r\n    this.stack.push(new AggregateInfoHolder(root, aggregateInfo, aggregateInfo.getName()));\r\n    this.conversion = conversion;\r\n  }\r\n\r\n  public onHeader(name: string, value: string): void {\r\n    var headerType: any = this.stack.peek().info.getHeaderType(name);\r\n    if (headerType != null) {\r\n      this.stack.peek().info.setHeader(this.stack.peek().aggregate, name, this.conversion.fromString(headerType, value));\r\n    }\r\n  }\r\n\r\n  public onElement(name: string, value: string): void {\r\n    if (!this.stack.peek().isBeingSkipped()) {\r\n      var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(name, this.stack.peek().currentAttributeIndex);\r\n      if (attribute != null && attribute.getType() == AggregateAttributeType.ELEMENT) {\r\n        try {\r\n          attribute.set(this.conversion.fromString(attribute.getAttributeType(), value), this.stack.peek().aggregate);\r\n        }\r\n        catch (e) {\r\n          LOG.error(\"Unable to set \" + attribute.toString() + \"%o\", e);\r\n        }\r\n        this.stack.peek().currentAttributeIndex = attribute.getOrder();\r\n      }\r\n      else {\r\n        LOG.info(\"Element \" + name + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \" at index \" + this.stack.peek().currentAttributeIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  public startAggregate(aggregateName: string): void {\r\n    if (this.stack.peek().isBeingSkipped()) {\r\n      this.stack.push(new AggregateInfoHolder(aggregateName));\r\n    }\r\n    else if (!this.parsingRoot) {\r\n      if (aggregateName !== this.stack.peek().info.getName()) {\r\n        throw new OFXException(\"Unexpected root element: \" + aggregateName);\r\n      }\r\n\r\n      this.parsingRoot = true;\r\n    }\r\n    else {\r\n      var infoHolder: AggregateInfoHolder;\r\n\r\n      var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(aggregateName, this.stack.peek().currentAttributeIndex);\r\n      if (attribute != null) {\r\n        if (attribute.getType() == AggregateAttributeType.CHILD_AGGREGATE) {\r\n          var aggregateType: any;\r\n          if (attribute.isArray()) {\r\n            aggregateType = AggregateIntrospector.findAggregateByName(aggregateName);\r\n          }\r\n          else {\r\n            aggregateType = attribute.getAttributeType();\r\n          }\r\n\r\n          if (aggregateType != null) {\r\n            var aggregateInfo: AggregateInfo = AggregateIntrospector.getAggregateInfo(aggregateType);\r\n            if (aggregateInfo == null) {\r\n              throw new OFXException(\"Unable to locate aggregate info for type \" + aggregateType.getName());\r\n            }\r\n\r\n            var aggregate: Object = aggregate = new aggregateType();\r\n            infoHolder = new AggregateInfoHolder(aggregate, aggregateInfo, aggregateName);\r\n          }\r\n          else {\r\n            LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": name not assigned a type.\");\r\n\r\n            //element not supported.  push a skipping aggregate on the stack.\r\n            infoHolder = new AggregateInfoHolder(aggregateName);\r\n          }\r\n\r\n          this.stack.peek().currentAttributeIndex = attribute.getOrder();\r\n        }\r\n        else {\r\n          LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no child aggregate, but there does exist an element by that name.\");\r\n\r\n          //child aggregate not supported.  push a skipping aggregate on the stack.\r\n          infoHolder = new AggregateInfoHolder(aggregateName);\r\n        }\r\n      }\r\n      else {\r\n        LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\r\n\r\n        //child aggregate not supported.  push a skipping aggregate on the stack.\r\n        infoHolder = new AggregateInfoHolder(aggregateName);\r\n      }\r\n\r\n      this.stack.push(infoHolder);\r\n    }\r\n  }\r\n\r\n  public endAggregate(aggregateName: string): void {\r\n    var infoHolder: AggregateInfoHolder = this.stack.pop();\r\n    if (aggregateName !== infoHolder.aggregateName) {\r\n      throw new OFXSyntaxException(\"Unexpected end aggregate \" + aggregateName + \". (Perhaps \" +\r\n        infoHolder.aggregateName + \" is an element with an empty value, making it impossible to parse.)\");\r\n    }\r\n\r\n    if (!this.stack.isEmpty()) {\r\n      if (!infoHolder.isSkipping(aggregateName)) {\r\n        //we're not skipping the top aggregate, so process it.\r\n        var attribute: AggregateAttribute = this.stack.peek().info.getAttribute(\r\n            aggregateName, this.stack.peek().currentAttributeIndex, infoHolder.aggregate.constructor);\r\n        try {\r\n          if (attribute != null) {\r\n            attribute.set(infoHolder.aggregate, this.stack.peek().aggregate);\r\n          } else {\r\n            LOG.info(\"Child aggregate \" + aggregateName + \" is not supported on aggregate \" + this.stack.peek().info.getName() + \": no attributes found by that name after index \" + this.stack.peek().currentAttributeIndex);\r\n          }\r\n        }\r\n        catch (e) {\r\n          LOG.error(\"Unable to set \" + attribute.toString() + \"%o\", e);\r\n        }\r\n        if (attribute != null) {\r\n          this.stack.peek().currentAttributeIndex = attribute.getOrder();\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      //ended the root element.\r\n    }\r\n  }\r\n}\r\n","import { StringConversion } from \"./StringConversion\";\r\nimport { DefaultStringConversion } from \"./DefaultStringConversion\";\r\nimport { StringReader } from \"./StringReader\";\r\nimport { OFXReader } from \"./OFXReader\";\r\nimport { BaseOFXReader } from \"./BaseOFXReader\";\r\nimport { AggregateStackContentHandler } from \"./AggregateStackContentHandler\";\r\n\r\n\r\n/**\r\n * Unmarshaller for aggregate objects.\r\n */\r\nexport class AggregateUnmarshaller<A> {\r\n\r\n  private clazz: any;\r\n  private conversion: StringConversion;\r\n\r\n  constructor(clazz: { new (): A }) {\r\n    this.clazz = clazz;\r\n    this.conversion = new DefaultStringConversion();\r\n  }\r\n\r\n  public unmarshal(arg: StringReader | string): A {\r\n    var stream: StringReader = (<any>arg instanceof StringReader) ? <StringReader>arg : new StringReader(<string>arg);\r\n    var aggregate: A = new this.clazz();\r\n    var reader: OFXReader = this.newReader();\r\n    reader.setContentHandler(new AggregateStackContentHandler<A>(aggregate, this.getConversion()));\r\n    reader.parse(stream);\r\n    return aggregate;\r\n  }\r\n\r\n  /**\r\n   * New OFX reader.\r\n   *\r\n   * @return new OFX reader.\r\n   */\r\n  protected newReader(): OFXReader {\r\n    return new BaseOFXReader();\r\n  }\r\n\r\n  /**\r\n   * The conversion.\r\n   *\r\n   * @return The conversion.\r\n   */\r\n  public getConversion(): StringConversion {\r\n    return this.conversion;\r\n  }\r\n\r\n  /**\r\n   * The conversion.\r\n   *\r\n   * @param conversion The conversion.\r\n   */\r\n  public setConversion(conversion: StringConversion): void {\r\n    this.conversion = conversion;\r\n  }\r\n}\r\n","import { ResponseMessage } from \"./ResponseMessage\";\r\nimport { MessageSetType } from \"./MessageSetType\";\r\n\r\n\r\n/**\r\n * A message set enclosed in a response envelope.\r\n */\r\nexport abstract class ResponseMessageSet /*implements Comparable<ResponseMessageSet>*/ {\r\n\r\n  private version: string;\r\n\r\n  public abstract getType(): MessageSetType\r\n\r\n  constructor() {\r\n    this.version = \"1\";\r\n  }\r\n\r\n  public cast<T extends this>(): T {\r\n    return this as T;\r\n  }\r\n\r\n  /**\r\n   * The version of this message set.\r\n   *\r\n   * @return The version of this message set.\r\n   */\r\n  public getVersion(): string {\r\n    return this.version;\r\n  }\r\n\r\n  /**\r\n   * The version of this message set.\r\n   *\r\n   * @param version The version of this message set.\r\n   */\r\n  public setVersion(version: string): void {\r\n    this.version = version;\r\n  }\r\n\r\n  /**\r\n   * The list of response messages.\r\n   *\r\n   * @return The list of response messages.\r\n   */\r\n  public abstract getResponseMessages(): Array<ResponseMessage>;\r\n/*\r\n  // Inherited.\r\n  public compareTo(o: ResponseMessageSet): number {\r\n    return getType().compareTo(o.getType());\r\n  }\r\n*/\r\n\r\n  public static contentCompare(left: ResponseMessageSet, right: ResponseMessageSet): number {\r\n    return left.getType() - right.getType();\r\n  }\r\n}\r\n","import { Aggregate_add } from \"../../meta/Aggregate_Add\";\r\nimport { Header_add } from \"../../meta/Header_add\";\r\nimport { ChildAggregate_add } from \"../../meta/ChildAggregate_add\";\r\nimport { ApplicationSecurity } from \"./ApplicationSecurity\";\r\nimport { SortedSet } from \"../../collections/SortedSet\";\r\nimport { ResponseMessageSet } from \"./ResponseMessageSet\";\r\nimport { SignonResponse } from \"./signon/SignonResponse\";\r\nimport { MessageSetType } from \"./MessageSetType\";\r\nimport { SignonResponseMessageSet } from \"./signon/SignonResponseMessageSet\";\r\n\r\n\r\n//import java.util.SortedSet;\r\n\r\n/**\r\n * Envelope for enclosing an OFX response.\r\n *\r\n * @see \"Section 2.4.3, OFX Spec\"\r\n */\r\nexport class ResponseEnvelope {\r\n\r\n  //headers\r\n  private security: ApplicationSecurity;\r\n  private UID: string;\r\n\r\n  //content\r\n  private messageSets: SortedSet<ResponseMessageSet>;\r\n\r\n  /**\r\n   * The security of this envelope.\r\n   *\r\n   * @return The security of this envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public getSecurity(): ApplicationSecurity {\r\n    return this.security;\r\n  }\r\n\r\n  /**\r\n   * The security of this envelope.\r\n   *\r\n   * @param security The security of this envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public setSecurity(security: ApplicationSecurity): void {\r\n    this.security = security;\r\n  }\r\n\r\n  /**\r\n   * The UID for the envelope.\r\n   *\r\n   * @return The UID for the envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public getUID(): string {\r\n    return this.UID;\r\n  }\r\n\r\n  /**\r\n   * The UID for the envelope.\r\n   *\r\n   * @param UID The UID for the envelope.\r\n   * @see \"Section 2.2, OFX spec\"\r\n   */\r\n  public setUID(UID: string): void {\r\n    this.UID = UID;\r\n  }\r\n\r\n  /**\r\n   * The message sets that make up the content of this response.\r\n   *\r\n   * @return The message sets that make up the content of this response.\r\n   * @see \"Section 2.4.5, OFX Spec\"\r\n   */\r\n  public getMessageSets(): SortedSet<ResponseMessageSet> {\r\n    return this.messageSets;\r\n  }\r\n\r\n  /**\r\n   * The message sets that make up the content of this response.\r\n   *\r\n   * @param messageSets The message sets that make up the content of this response.\r\n   * @see \"Section 2.4.5, OFX Spec\"\r\n   */\r\n  public setMessageSets(messageSets: SortedSet<ResponseMessageSet>): void {\r\n    this.messageSets = messageSets;\r\n  }\r\n\r\n  /**\r\n   * Helper method for looking up the signon response.\r\n   *\r\n   * @return The signon response, or null if none found.\r\n   */\r\n  public getSignonResponse(): SignonResponse {\r\n    var type: MessageSetType = MessageSetType.signon;\r\n    var message: ResponseMessageSet = this.getMessageSet(type);\r\n\r\n    if (message != null) {\r\n      return (<SignonResponseMessageSet> message).getSignonResponse();\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the message set of the specified type.\r\n   *\r\n   * @param type The type.\r\n   * @return The message set, or null.\r\n   */\r\n  public getMessageSet(type: MessageSetType): ResponseMessageSet {\r\n    var message: ResponseMessageSet = null;\r\n    if (this.messageSets != null) {\r\n      for (var i in this.messageSets.values()) {\r\n        var messageSet: ResponseMessageSet = this.messageSets.values()[i];\r\n        if (messageSet.getType() == type) {\r\n          message = messageSet;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return message;\r\n  }\r\n}\r\n\r\nAggregate_add( ResponseEnvelope, \"OFX\" );\r\nHeader_add(ResponseEnvelope, { name: \"SECURITY\", type: ApplicationSecurity, read: ResponseEnvelope.prototype.getSecurity, write: ResponseEnvelope.prototype.setSecurity });\r\nHeader_add(ResponseEnvelope, { name: \"NEWFILEUID\", type: String, read: ResponseEnvelope.prototype.getUID, write: ResponseEnvelope.prototype.setUID });\r\nChildAggregate_add(ResponseEnvelope, { order: 1, type: SortedSet, collectionEntryType: ResponseMessageSet, read: ResponseEnvelope.prototype.getMessageSets, write: ResponseEnvelope.prototype.setMessageSets });\r\n","export class OutputBuffer {\r\n  private data: Array<string>;\r\n\r\n  constructor() {\r\n    this.data = [];\r\n  }\r\n\r\n  public toString(encoding?: string): string {\r\n    return this.data.join('');\r\n  }\r\n\r\n  public append(data: string): void {\r\n    this.data.push(data);\r\n  }\r\n\r\n  public size(): number {\r\n    return this.data.reduce(function(previousValue: number, currentValue: string): number {\r\n      return currentValue.length;\r\n    }, 0);\r\n  }\r\n}\r\n\r\n\r\n\r\nexport class StreamWriter {\r\n  private out: OutputBuffer;\r\n  private encoding: string;\r\n\r\n  constructor(out: OutputBuffer, encoding: string) {\r\n    this.out = out;\r\n    this.encoding = encoding;\r\n  }\r\n\r\n\r\n  flush(): void {\r\n  }\r\n\r\n\r\n  close(): void {\r\n  }\r\n\r\n\r\n  write(data: string): void {\r\n    this.out.append(data);\r\n    //TODO\r\n    //Array.prototype.push.apply(this.out, data.split(''));\r\n  }\r\n\r\n}\r\n","import { OFXWriter } from \"../OFXWriter\";\r\nimport { StreamWriter, OutputBuffer } from \"../StreamWriter\";\r\nimport { OFXException } from \"../../OFXException\";\r\nimport { StringMap } from \"../../collections/collections\";\r\n\r\n\r\n//import Map = java.util.Map;\r\n\r\n/**\r\n * OFX writer to SGML, suitable for OFX versions < 2.0.\r\n */\r\nexport class OFXV1Writer implements OFXWriter {\r\n\r\n  private LINE_SEPARATOR: string;\r\n  protected headersWritten: boolean;\r\n  protected writer: StreamWriter;\r\n  private writeAttributesOnNewLine: boolean;\r\n\r\n  constructor(out: OutputBuffer | StreamWriter) {\r\n    this.LINE_SEPARATOR = \"\\r\\n\";\r\n    this.headersWritten = false;\r\n    this.writeAttributesOnNewLine = false;\r\n\r\n    if(out instanceof StreamWriter) {\r\n      this.writer = out;\r\n    } else if(out instanceof OutputBuffer) {\r\n      this.writer = this.newWriter(out);\r\n    } else {\r\n      throw new OFXException(\"invalid parameter type\");\r\n    }\r\n  }\r\n\r\n  protected newWriter(out: OutputBuffer): StreamWriter {\r\n    return new StreamWriter(out, \"ISO-8859-1\");\r\n  }\r\n\r\n  public writeHeaders(headers: StringMap) /*throws IOException*/: void {\r\n    if (this.headersWritten) {\r\n      throw new OFXException(\"Headers have already been written!\");\r\n    }\r\n\r\n    //write out the 1.0 headers\r\n    this.println(\"OFXHEADER:100\");\r\n    this.println(\"DATA:OFXSGML\");\r\n    this.println(\"VERSION:102\");\r\n\r\n    this.print(\"SECURITY:\");\r\n    var security: string = headers[\"SECURITY\"];\r\n    if (security == null) {\r\n      security = \"NONE\";\r\n    }\r\n    this.println(security);\r\n    this.println(\"ENCODING:USASCII\"); //too many ofx v1 servers don't read unicode...\r\n    this.println(\"CHARSET:1252\"); //windows-compatible.\r\n    this.println(\"COMPRESSION:NONE\");\r\n    this.print(\"OLDFILEUID:\");\r\n    var olduid: string = headers[\"OLDFILEUID\"];\r\n    if (olduid == null) {\r\n      olduid = \"NONE\";\r\n    }\r\n    this.println(olduid);\r\n    this.print(\"NEWFILEUID:\");\r\n    var uid: string = headers[\"NEWFILEUID\"];\r\n    if (uid == null) {\r\n      uid = \"NONE\";\r\n    }\r\n    this.println(uid);\r\n    this.println();\r\n\r\n    this.headersWritten = true;\r\n  }\r\n\r\n  public writeStartAggregate(aggregateName: string) /*throws IOException*/: void {\r\n    this.print('<');\r\n    this.print(aggregateName);\r\n    this.print('>');\r\n    if (this.isWriteAttributesOnNewLine()) {\r\n      this.println();\r\n    }\r\n  }\r\n\r\n  public writeElement(name: string, value: string) /*throws IOException*/: void {\r\n    if ((value == null) || (\"\" === value)) {\r\n      throw new OFXException(\"Illegal element value for element '\" + name + \"' (value must not be null or empty).\");\r\n    }\r\n\r\n    //todo: optimize performance of the character escaping\r\n    if (value.indexOf('&') >= 0) {\r\n      value = value.replace(/\\\\&/g, \"&amp;\");\r\n    }\r\n\r\n    if (value.indexOf('<') >= 0) {\r\n      value = value.replace(/</g, \"&lt;\");\r\n    }\r\n\r\n    if (value.indexOf('>') >= 0) {\r\n      value = value.replace(/>/g, \"&gt;\");\r\n    }\r\n\r\n    this.print('<');\r\n    this.print(name);\r\n    this.print('>');\r\n    this.print(value);\r\n    if (this.isWriteAttributesOnNewLine()) {\r\n      this.println();\r\n    }\r\n  }\r\n\r\n  public writeEndAggregate(aggregateName: string) /*throws IOException*/:void {\r\n    this.print(\"</\");\r\n    this.print(aggregateName);\r\n    this.print('>');\r\n    if (this.isWriteAttributesOnNewLine()) {\r\n      this.println();\r\n    }\r\n  }\r\n\r\n  public isWriteAttributesOnNewLine(): boolean {\r\n    return this.writeAttributesOnNewLine;\r\n  }\r\n\r\n  public setWriteAttributesOnNewLine(writeAttributesOnNewLine: boolean): void {\r\n    this.writeAttributesOnNewLine = writeAttributesOnNewLine;\r\n  }\r\n\r\n  public close() /*throws IOException*/: void {\r\n    this.flush();\r\n    this.writer.close();\r\n  }\r\n\r\n  public flush() /*throws IOException*/: void {\r\n    this.writer.flush();\r\n  }\r\n\r\n  /*protected*/ println(line: string = null) /*throws IOException*/: void {\r\n    if(line != null) {\r\n      this.print(line);\r\n    }\r\n    this.writer.write(this.LINE_SEPARATOR);\r\n  }\r\n\r\n  /*protected*/ print(line: string) /*throws IOException*/: void {\r\n    this.writer.write(line == null ? \"null\" : line);\r\n  }\r\n}\r\n","import { LOG } from \"../../log/Log\";\r\nimport { OFXException } from \"../../OFXException\";\r\nimport { OFXConnection } from \"./OFXConnection\";\r\nimport { AggregateMarshaller } from \"../../io/AggregateMarshaller\";\r\nimport { AggregateUnmarshaller } from \"../../io/AggregateUnmarshaller\";\r\nimport { ResponseEnvelope } from \"../../domain/data/ResponseEnvelope\";\r\nimport { RequestEnvelope } from \"../../domain/data/RequestEnvelope\";\r\nimport { OutputBuffer } from \"../../io/StreamWriter\";\r\nimport { OFXWriter } from \"../../io/OFXWriter\";\r\nimport { StringReader } from \"../../io/StringReader\";\r\nimport { OFXConnectionException } from \"./OFXConnectionException\";\r\nimport { OFXV1Writer } from \"../../io/v1/OFXV1Writer\";\r\n\r\n\r\n// import java.io.*;\r\n// import java.net.HttpURLConnection;\r\n// import java.net.URL;\r\n\r\nexport type HeadersObject = { [header: string]: string };\r\nexport type AjaxHandler = (url: string, verb: string, headers: HeadersObject, data: string, async: boolean) => Promise<string>;\r\n\r\n\r\nfunction DefaultAjaxHandler(url: string, verb: string, headers: HeadersObject, data: string, async: boolean): Promise<string> {\r\n  return new Promise(function(resolve, reject) {\r\n    var request = new XMLHttpRequest();\r\n    var onloadCalled: boolean = false;\r\n    request.open(\"POST\", url, async);\r\n    for (var header in headers) {\r\n      request.setRequestHeader(header, headers[header]);\r\n    }\r\n    request.onload = function() {\r\n      onloadCalled = true;\r\n      if (request.status >= 200 && request.status < 300) {\r\n        resolve(request.responseText);\r\n      } else if (request.status >= 400 && request.status < 500) {\r\n        reject(new OFXException(\"Error \" + request.status + \" with client request: \" + request.responseText));\r\n      } else {\r\n        reject(new OFXException(\"Invalid response code from OFX server: \" + request.status));\r\n      }\r\n    };\r\n    request.onerror = function() {\r\n      reject(new OFXException(\"Network error\"));\r\n    };\r\n\r\n    request.send(data);\r\n\r\n    if (!async && !onloadCalled) {\r\n      (<any>request).onload();\r\n    }\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Base implementation for an OFX connection.\r\n */\r\nexport class OFXV1Connection implements OFXConnection {\r\n\r\n  private async: boolean;\r\n  private marshaller: AggregateMarshaller;\r\n  private unmarshaller: AggregateUnmarshaller<ResponseEnvelope>;\r\n  private ajax: AjaxHandler;\r\n\r\n  constructor() {\r\n    this.async = true;\r\n    this.marshaller = new AggregateMarshaller();\r\n    this.unmarshaller = new AggregateUnmarshaller<ResponseEnvelope>(ResponseEnvelope);\r\n    this.ajax = DefaultAjaxHandler;\r\n  }\r\n\r\n  // Inherited.\r\n  public sendRequest(request: RequestEnvelope, url: string): Promise<ResponseEnvelope> {\r\n//    if (!url.protocol().toLowerCase().startsWith(\"http\")) {\r\n//      throw new OFXException(\"Invalid URL: \" + url + \" only http(s) is supported.\");\r\n//    }\r\n\r\n    //marshal to memory so we can determine the size...\r\n    var outBuffer = new OutputBuffer();\r\n    var ofxWriter: OFXWriter = this.newOFXWriter(outBuffer);\r\n    this.getMarshaller().marshal(request, ofxWriter);\r\n    ofxWriter.close();\r\n    this.logRequest(outBuffer);\r\n    return this.sendBuffer(url, outBuffer)\r\n    .then((in_: string): ResponseEnvelope => {\r\n      this.logResponse(in_);\r\n      return this.unmarshal(in_);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Log a request buffer.\r\n   *\r\n   * @param outBuffer The buffer to log.\r\n   */\r\n  protected logRequest(outBuffer: OutputBuffer) /*throws UnsupportedEncodingException*/: void {\r\n    LOG.info(\"Marshalling \" + outBuffer.size() + \" bytes of the OFX request.\");\r\n    LOG.debug(outBuffer.toString(\"utf-8\"));\r\n  }\r\n\r\n  protected logResponse(inBuffer: string) {\r\n    LOG.debug(\"Received OFX response:\", inBuffer);\r\n  }\r\n\r\n  /**\r\n   * Send the specified buffer to the specified URL.\r\n   *\r\n   * @param url The URL.\r\n   * @param outBuffer The buffer.\r\n   * @return a promise that resolves with the response.\r\n   */\r\n  protected sendBuffer(url: string, outBuffer: OutputBuffer) /*throws IOException, OFXConnectionException*/: Promise<string> {\r\n    var outText = outBuffer.toString();\r\n    var async: boolean = this.getAsync();\r\n    var headers: HeadersObject = {\r\n      \"Content-Type\": \"application/x-ofx\",\r\n      \"Accept\": \"*/*, application/x-ofx\"\r\n    };\r\n\r\n    return this.ajax(url, \"POST\", headers, outText, async);\r\n  }\r\n\r\n  /**\r\n   * Unmarshal the input stream.\r\n   *\r\n   * @param in The input stream.\r\n   * @return The response envelope.\r\n   */\r\n  protected unmarshal(in_: string) /*throws IOException, OFXConnectionException*/: ResponseEnvelope {\r\n    try {\r\n      var reader = new StringReader(in_);\r\n      return this.getUnmarshaller().unmarshal(reader);\r\n    }\r\n    catch (e) {\r\n      throw new OFXConnectionException(\"Unable to parse the OFX response.\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new OFX writer.\r\n   *\r\n   * @param out The output stream for the writer.\r\n   * @return The OFX writer.\r\n   */\r\n  protected newOFXWriter(out: OutputBuffer): OFXWriter {\r\n    return new OFXV1Writer(out);\r\n  }\r\n\r\n  /**\r\n   * The marshaller.\r\n   *\r\n   * @return The marshaller.\r\n   */\r\n  public getMarshaller(): AggregateMarshaller {\r\n    return this.marshaller;\r\n  }\r\n\r\n  /**\r\n   * The marshaller.\r\n   *\r\n   * @param marshaller The marshaller.\r\n   */\r\n  public setMarshaller(marshaller: AggregateMarshaller): void {\r\n    this.marshaller = marshaller;\r\n  }\r\n\r\n  /**\r\n   * The unmarshaller.\r\n   *\r\n   * @return The unmarshaller.\r\n   */\r\n  public getUnmarshaller(): AggregateUnmarshaller<ResponseEnvelope> {\r\n    return this.unmarshaller;\r\n  }\r\n\r\n  /**\r\n   * The unmarshaller.\r\n   *\r\n   * @param unmarshaller The unmarshaller.\r\n   */\r\n  public setUnmarshaller(unmarshaller: AggregateUnmarshaller<ResponseEnvelope>): void {\r\n    this.unmarshaller = unmarshaller;\r\n  }\r\n\r\n  /**\r\n   * Async mode\r\n   *\r\n   * @return {bool} Whether in async mode.\r\n   */\r\n  public getAsync() {\r\n    return this.async;\r\n  }\r\n\r\n\r\n  /**\r\n   * Async mode\r\n   *\r\n   * @param {bool} async async mode.\r\n   */\r\n  public setAsync(async: boolean) {\r\n    this.async = async;\r\n  }\r\n\r\n  /**\r\n   * Async mode\r\n   *\r\n   * @return {bool} Whether in async mode.\r\n   */\r\n  public getAjax() {\r\n    return this.ajax;\r\n  }\r\n\r\n\r\n  /**\r\n   * Async mode\r\n   *\r\n   * @param {bool} async async mode.\r\n   */\r\n  public setAjax(ajax: AjaxHandler) {\r\n    this.ajax = ajax;\r\n  }\r\n\r\n}\r\n","import { OFXV1Writer } from \"../v1/OFXV1Writer\";\r\nimport { OutputBuffer, StreamWriter } from \"../StreamWriter\";\r\nimport { StringMap } from \"../../collections/collections\";\r\nimport { OFXException } from \"../../OFXException\";\r\n\r\n\r\n/**\r\n * OFX writer to XML, suitable for OFX version 2.0.\r\n */\r\nexport class OFXV2Writer extends OFXV1Writer {\r\n\r\n  constructor(out: OutputBuffer | StreamWriter) {\r\n    super(out);\r\n  }\r\n\r\n  //@Override\r\n  protected newWriter(out: OutputBuffer) /*throws UnsupportedEncodingException*/: StreamWriter {\r\n    return new StreamWriter(out, \"UTF-8\");\r\n  }\r\n\r\n  public writeHeaders(headers: StringMap) /*throws IOException*/: void {\r\n    if (this.headersWritten) {\r\n      throw new OFXException(\"Headers have already been written!\");\r\n    }\r\n\r\n    //write out the XML PI\r\n    this.print(\"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\" ?>\");\r\n    var security: string = headers[\"SECURITY\"];\r\n    if (security == null) {\r\n      security = \"NONE\";\r\n    }\r\n    var olduid: string = headers[\"OLDFILEUID\"];\r\n    if (olduid == null) {\r\n      olduid = \"NONE\";\r\n    }\r\n    // println(olduid);\r\n    var uid: string = headers[\"NEWFILEUID\"];\r\n    if (uid == null) {\r\n      uid = \"NONE\";\r\n    }\r\n\r\n    this.print(\"<?OFX OFXHEADER=\\\"200\\\" VERSION=\\\"202\\\" SECURITY=\\\"\" + security + \"\\\" OLDFILEUID=\\\"\" + olduid + \"\\\" NEWFILEUID=\\\"\" + uid + \"\\\"?>\");\r\n    this.headersWritten = true;\r\n  }\r\n\r\n  public writeElement(name: string, value: string): void {\r\n    super.writeElement(name, value);\r\n    this.print(\"</\");\r\n    this.print(name);\r\n    this.print('>');\r\n  }\r\n\r\n  //@Override\r\n  public isWriteAttributesOnNewLine(): boolean {\r\n    return false;\r\n  }\r\n}\r\n","import { OFXV1Connection } from \"./OFXV1Connection\";\r\nimport { OFXWriter } from \"../../io/OFXWriter\";\r\nimport { OFXV2Writer } from \"../../io/v2/OFXV2Writer\";\r\nimport { OutputBuffer } from \"../../io/StreamWriter\";\r\n\r\nexport class OFXV2Connection extends OFXV1Connection {\r\n\r\n  //@Override\r\n  protected newOFXWriter(out: OutputBuffer): OFXWriter {\r\n    return new OFXV2Writer(out);\r\n  }\r\n}\r\n","\r\nexport enum AccountStatus {\r\n\r\n  /**\r\n   * Available, but not yet requested.\r\n   */\r\n  AVAIL,\r\n\r\n  /**\r\n   * Requested, but not yet available.\r\n   */\r\n  PEND,\r\n\r\n  /**\r\n   * Active.\r\n   */\r\n  ACTIVE\r\n\r\n}\r\n","import { AccountInfo } from \"../common/AccountInfo\";\r\nimport { BankAccountDetails } from \"./BankAccountDetails\";\r\nimport { AccountStatus } from \"../common/AccountStatus\";\r\nimport { AccountDetails } from \"../common/AccountDetails\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class BankAccountInfo implements AccountInfo {\r\n\r\n  private bankAccount: BankAccountDetails;\r\n  private supportsTransactionDetailOperations: boolean;\r\n  private supportsTransferToOtherAccountOperations: boolean;\r\n  private supportsTransferFromOtherAccountOperations: boolean;\r\n  private status: AccountStatus;\r\n\r\n  /**\r\n   * The bank account this information is referencing.\r\n   *\r\n   * @return The bank account this information is referencing.\r\n   */\r\n  public getBankAccount(): BankAccountDetails {\r\n    return this.bankAccount;\r\n  }\r\n\r\n  /**\r\n   * The bank account this information is referencing.\r\n   *\r\n   * @param bankAccount The bank account this information is referencing.\r\n   */\r\n  public setBankAccount(bankAccount: BankAccountDetails): void {\r\n    this.bankAccount = bankAccount;\r\n  }\r\n\r\n  // Inherited.\r\n  public getAccountDetails(): AccountDetails {\r\n    return this.getBankAccount();\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports download of transaction details.\r\n   *\r\n   * @return Whether this account supports download of transaction details.\r\n   */\r\n  public getSupportsTransactionDetailOperations(): boolean {\r\n    return this.supportsTransactionDetailOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports download of transaction details.\r\n   *\r\n   * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\r\n   */\r\n  public setSupportsTransactionDetailOperations(supportsTransactionDetailOperations: boolean): void {\r\n    this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations to other accounts.\r\n   *\r\n   * @return Whether this account supports transfer operations to other accounts.\r\n   */\r\n  public getSupportsTransferToOtherAccountOperations(): boolean {\r\n    return this.supportsTransferToOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations to other accounts.\r\n   *\r\n   * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\r\n   */\r\n  public setSupportsTransferToOtherAccountOperations(supportsTransferToOtherAccountOperations: boolean): void {\r\n    this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations from other accounts.\r\n   *\r\n   * @return Whether this account supports transfer operations from other accounts.\r\n   */\r\n  public getSupportsTransferFromOtherAccountOperations(): boolean {\r\n    return this.supportsTransferFromOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations from other accounts.\r\n   *\r\n   * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\r\n   */\r\n  public setSupportsTransferFromOtherAccountOperations(supportsTransferFromOtherAccountOperations: boolean): void {\r\n    this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * The account status.\r\n   *\r\n   * @return The account status.\r\n   */\r\n  public getStatus(): AccountStatus {\r\n    return this.status;\r\n  }\r\n\r\n  /**\r\n   * The account status.\r\n   *\r\n   * @param status The account status.\r\n   */\r\n  public setStatus(status: AccountStatus): void {\r\n    this.status = status;\r\n  }\r\n}\r\n\r\nAggregate_add( BankAccountInfo, \"BANKACCTINFO\" );\r\nChildAggregate_add(BankAccountInfo, { name: \"BANKACCTFROM\", required: true, order: 0, type: BankAccountDetails, read: BankAccountInfo.prototype.getBankAccount, write: BankAccountInfo.prototype.setBankAccount });\r\nElement_add(BankAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransactionDetailOperations, write: BankAccountInfo.prototype.setSupportsTransactionDetailOperations });\r\nElement_add(BankAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\r\nElement_add(BankAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: BankAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: BankAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\r\nElement_add(BankAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: BankAccountInfo.prototype.getStatus, write: BankAccountInfo.prototype.setStatus });\r\n","\r\n/**\r\n * Type of investment transaction.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport enum InvestmentTransactionType {\r\n\r\n  BUY_DEBT,\r\n  BUY_MUTUAL_FUND,\r\n  BUY_OPTION,\r\n  BUY_OTHER,\r\n  BUY_STOCK,\r\n  CLOSE_OPTION,\r\n  INCOME,\r\n  INVESTMENT_EXPENSE,\r\n  JOURNAL_FUND,\r\n  JOURNAL_SECURITY,\r\n  MARGIN_INTEREST,\r\n  REINVEST_INCOME,\r\n  RETURN_OF_CAPITAL,\r\n  SELL_DEBT,\r\n  SELL_MUTUAL_FUND,\r\n  SELL_OPTION,\r\n  SELL_OTHER,\r\n  SELL_STOCK,\r\n  SPLIT,\r\n  TRANSFER\r\n}\r\n","\r\nexport enum CorrectionAction {\r\n\r\n  REPLACE,\r\n\r\n  DELETE\r\n}\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class Payee {\r\n\r\n  private name: string;\r\n  private address1: string;\r\n  private address2: string;\r\n  private address3: string;\r\n  private city: string;\r\n  private state: string;\r\n  private zip: string;\r\n  private country: string;\r\n  private phone: string;\r\n\r\n  /**\r\n   * The name of the payee.\r\n   *\r\n   * @return The name of the payee.\r\n   */\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  /**\r\n   * The name of the payee.\r\n   *\r\n   * @param name The name of the payee.\r\n   */\r\n  public setName(name: string): void {\r\n    this.name = name;\r\n  }\r\n\r\n  /**\r\n   * The address of the payee.\r\n   *\r\n   * @return The address of the payee.\r\n   */\r\n  public getAddress1(): string {\r\n    return this.address1;\r\n  }\r\n\r\n  /**\r\n   * The address of the payee.\r\n   *\r\n   * @param address1 The address of the payee.\r\n   */\r\n  public setAddress1(address1: string): void {\r\n    this.address1 = address1;\r\n  }\r\n\r\n  /**\r\n   * The address of the payee.\r\n   *\r\n   * @return The address of the payee.\r\n   */\r\n  public getAddress2(): string {\r\n    return this.address2;\r\n  }\r\n\r\n  /**\r\n   * The address of the payee.\r\n   *\r\n   * @param address2 The address of the payee.\r\n   */\r\n  public setAddress2(address2: string): void {\r\n    this.address2 = address2;\r\n  }\r\n\r\n  /**\r\n   * The address of the payee.\r\n   *\r\n   * @return The address of the payee.\r\n   */\r\n  public getAddress3(): string {\r\n    return this.address3;\r\n  }\r\n\r\n  /**\r\n   * The address of the payee.\r\n   *\r\n   * @param address3 The address of the payee.\r\n   */\r\n  public setAddress3(address3: string): void {\r\n    this.address3 = address3;\r\n  }\r\n\r\n  /**\r\n   * The city of the payee.\r\n   *\r\n   * @return The city of the payee.\r\n   */\r\n  public getCity(): string {\r\n    return this.city;\r\n  }\r\n\r\n  /**\r\n   * The city of the payee.\r\n   *\r\n   * @param city The city of the payee.\r\n   */\r\n  public setCity(city: string): void {\r\n    this.city = city;\r\n  }\r\n\r\n  /**\r\n   * The state of this payee.\r\n   *\r\n   * @return The state of this payee.\r\n   */\r\n  public getState(): string {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * The state of this payee.\r\n   *\r\n   * @param state The state of this payee.\r\n   */\r\n  public setState(state: string): void {\r\n    this.state = state;\r\n  }\r\n\r\n  /**\r\n   * The postal code of this payee.\r\n   *\r\n   * @return The postal code of this payee.\r\n   */\r\n  public getZip(): string {\r\n    return this.zip;\r\n  }\r\n\r\n  /**\r\n   * The postal code of this payee.\r\n   *\r\n   * @param zip The postal code of this payee.\r\n   */\r\n  public setZip(zip: string): void {\r\n    this.zip = zip;\r\n  }\r\n\r\n  /**\r\n   * The country code for this payee.\r\n   *\r\n   * @return The country code for this payee.\r\n   * @see java.util.Locale#getISO3Country()\r\n   */\r\n  public getCountry(): string {\r\n    return this.country;\r\n  }\r\n\r\n  /**\r\n   * The country code for this payee.\r\n   *\r\n   * @param country The country code for this payee.\r\n   */\r\n  public setCountry(country: string): void {\r\n    this.country = country;\r\n  }\r\n\r\n  /**\r\n   * The phone number.\r\n   *\r\n   * @return The phone number.\r\n   */\r\n  public getPhone(): string {\r\n    return this.phone;\r\n  }\r\n\r\n  /**\r\n   * The phone number.\r\n   *\r\n   * @param phone The phone number.\r\n   */\r\n  public setPhone(phone: string): void {\r\n    this.phone = phone;\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( Payee, \"PAYEE\" );\r\nElement_add(Payee, { name: \"NAME\", order: 30, type: String, read: Payee.prototype.getName, write: Payee.prototype.setName });\r\nElement_add(Payee, { name: \"ADDR1\", required: true, order: 40, type: String, read: Payee.prototype.getAddress1, write: Payee.prototype.setAddress1 });\r\nElement_add(Payee, { name: \"ADDR2\", order: 50, type: String, read: Payee.prototype.getAddress2, write: Payee.prototype.setAddress2 });\r\nElement_add(Payee, { name: \"ADDR3\", order: 60, type: String, read: Payee.prototype.getAddress3, write: Payee.prototype.setAddress3 });\r\nElement_add(Payee, { name: \"CITY\", required: true, order: 70, type: String, read: Payee.prototype.getCity, write: Payee.prototype.setCity });\r\nElement_add(Payee, { name: \"STATE\", required: true, order: 80, type: String, read: Payee.prototype.getState, write: Payee.prototype.setState });\r\nElement_add(Payee, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: Payee.prototype.getZip, write: Payee.prototype.setZip });\r\nElement_add(Payee, { name: \"COUNTRY\", required: true, order: 100, type: String, read: Payee.prototype.getCountry, write: Payee.prototype.setCountry });\r\nElement_add(Payee, { name: \"PHONE\", order: 110, type: String, read: Payee.prototype.getPhone, write: Payee.prototype.setPhone });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 5.2, OFX Spec\"\r\n */\r\nexport class Currency {\r\n\r\n  private code: string;\r\n  private exchangeRate: number;\r\n\r\n  constructor() {\r\n    this.code = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * The currency code.\r\n   *\r\n   * @return The currency code.\r\n   * @see java.util.Currency#getCurrencyCode()\r\n   */\r\n  public getCode(): string {\r\n    return this.code;\r\n  }\r\n\r\n  /**\r\n   * The currency code\r\n   *\r\n   * @param code The currency code\r\n   */\r\n  public setCode(code: string): void {\r\n    this.code = code;\r\n  }\r\n\r\n  /**\r\n   * The exchange rate.\r\n   *\r\n   * @return The exchange rate.\r\n   */\r\n  public getExchangeRate(): number {\r\n    return this.exchangeRate;\r\n  }\r\n\r\n  /**\r\n   * The exchange rate.\r\n   *\r\n   * @param exchangeRate The exchange rate.\r\n   */\r\n  public setExchangeRate(exchangeRate: number): void {\r\n    this.exchangeRate = exchangeRate;\r\n  }\r\n}\r\n\r\nAggregate_add( Currency, \"CURRENCY\" );\r\nElement_add(Currency, { name: \"CURSYM\", required: true, order: 0, type: String, read: Currency.prototype.getCode, write: Currency.prototype.setCode });\r\nElement_add(Currency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: Currency.prototype.getExchangeRate, write: Currency.prototype.setExchangeRate });\r\n","import { InvestmentTransactionType } from \"../investment/transactions/TransactionType\";\r\nimport { CorrectionAction } from \"./CorrectionAction\";\r\nimport { Payee } from \"./Payee\";\r\nimport { BankAccountDetails } from \"../banking/BankAccountDetails\";\r\nimport { CreditCardAccountDetails } from \"../creditcard/CreditCardAccountDetails\";\r\nimport { Currency } from \"./Currency\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class Transaction {\r\n\r\n  private transactionType: InvestmentTransactionType;\r\n  private datePosted: Date;\r\n  private dateInitiated: Date;\r\n  private dateAvailable: Date;\r\n  private amount: number;\r\n  private id: string;\r\n  private correctionId: string;\r\n  private correctionAction: CorrectionAction;\r\n  private tempId: string;\r\n  private checkNumber: string;\r\n  private referenceNumber: string;\r\n  private standardIndustrialCode: string;\r\n  private payeeId: string;\r\n  private name: string;\r\n  private payee: Payee;\r\n  private bankAccountTo: BankAccountDetails;\r\n  private creditCardAccountTo: CreditCardAccountDetails;\r\n  private memo: string;\r\n  private currency: Currency;\r\n  private originalCurrency: Currency;\r\n\r\n  /**\r\n   * The transaction type.\r\n   *\r\n   * @return The transaction type.\r\n   */\r\n  public getTransactionType(): InvestmentTransactionType {\r\n    return this.transactionType;\r\n  }\r\n\r\n  /**\r\n   * The transaction type.\r\n   *\r\n   * @param transactionType The transaction type.\r\n   */\r\n  public setTransactionType(transactionType: InvestmentTransactionType): void {\r\n    this.transactionType = transactionType;\r\n  }\r\n\r\n  /**\r\n   * The date the transaction was posted.\r\n   *\r\n   * @return The date the transaction was posted.\r\n   */\r\n  public getDatePosted(): Date {\r\n    return this.datePosted;\r\n  }\r\n\r\n  /**\r\n   * The date the transaction was posted.\r\n   *\r\n   * @param datePosted The date the transaction was posted.\r\n   */\r\n  public setDatePosted(datePosted: Date): void {\r\n    this.datePosted = datePosted;\r\n  }\r\n\r\n  /**\r\n   * The date the transaction was initiated.\r\n   *\r\n   * @return The date the transaction was initiated.\r\n   */\r\n  public getDateInitiated(): Date {\r\n    return this.dateInitiated;\r\n  }\r\n\r\n  /**\r\n   * The date the transaction was initiated.\r\n   *\r\n   * @param dateInitiated The date the transaction was initiated.\r\n   */\r\n  public setDateInitiated(dateInitiated: Date): void {\r\n    this.dateInitiated = dateInitiated;\r\n  }\r\n\r\n  /**\r\n   * The date the funds are available.\r\n   *\r\n   * @return The date the funds are available.\r\n   */\r\n  public getDateAvailable(): Date {\r\n    return this.dateAvailable;\r\n  }\r\n\r\n  /**\r\n   * The date the funds are available.\r\n   *\r\n   * @param dateAvailable The date the funds are available.\r\n   */\r\n  public setDateAvailable(dateAvailable: Date): void {\r\n    this.dateAvailable = dateAvailable;\r\n  }\r\n\r\n  /**\r\n   * The transaction amount.\r\n   *\r\n   * @return The transaction amount.\r\n   */\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  /**\r\n   * The transaction amount.\r\n   *\r\n   * @param amount The transaction amount.\r\n   */\r\n  public setAmount(amount: number): void {\r\n    this.amount = amount;\r\n  }\r\n\r\n  /**\r\n   * The transaction amount.\r\n   *\r\n   * @return The transaction amount.\r\n   */\r\n  public getBigDecimalAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  /**\r\n   * The transaction amount.\r\n   *\r\n   * @param amount The transaction amount.\r\n   */\r\n  public setBigDecimalAmount(amount: number): void {\r\n    this.amount = amount;\r\n  }\r\n\r\n  /**\r\n   * The transaction id (server-assigned).\r\n   *\r\n   * @return The transaction id (server-assigned).\r\n   */\r\n  public getId(): string {\r\n    return this.id;\r\n  }\r\n\r\n  /**\r\n   * The transaction id (server-assigned).\r\n   *\r\n   * @param id The transaction id (server-assigned).\r\n   */\r\n  public setId(id: string): void {\r\n    this.id = id;\r\n  }\r\n\r\n  /**\r\n   * The id of the transaction that this is correcting.\r\n   *\r\n   * @return The id of the transaction that this is correcting.\r\n   */\r\n  public getCorrectionId(): string {\r\n    return this.correctionId;\r\n  }\r\n\r\n  /**\r\n   * The id of the transaction that this is correcting.\r\n   *\r\n   * @param correctionId The id of the transaction that this is correcting.\r\n   */\r\n  public setCorrectionId(correctionId: string): void {\r\n    this.correctionId = correctionId;\r\n  }\r\n\r\n  /**\r\n   * The action to take on the {@link #getCorrectionId() corrected transaction}.\r\n   *\r\n   * @return The action to take on the {@link #getCorrectionId() corrected transaction}.\r\n   */\r\n  public getCorrectionAction(): CorrectionAction {\r\n    return this.correctionAction;\r\n  }\r\n\r\n  /**\r\n   * The action to take on the {@link #getCorrectionId() corrected transaction}.\r\n   *\r\n   * @param correctionAction The action to take on the {@link #getCorrectionId() corrected transaction}.\r\n   */\r\n  public setCorrectionAction(correctionAction: CorrectionAction): void {\r\n    this.correctionAction = correctionAction;\r\n  }\r\n\r\n  /**\r\n   * The server-assigned temporary id for client-initiated transactions.\r\n   *\r\n   * @return The server-assigned temporary id for client-initiated transactions.\r\n   */\r\n  public getTempId(): string {\r\n    return this.tempId;\r\n  }\r\n\r\n  /**\r\n   * The server-assigned temporary id for client-initiated transactions.\r\n   *\r\n   * @param tempId The server-assigned temporary id for client-initiated transactions.\r\n   */\r\n  public setTempId(tempId: string): void {\r\n    this.tempId = tempId;\r\n  }\r\n\r\n  /**\r\n   * The check number.\r\n   *\r\n   * @return The check number.\r\n   */\r\n  public getCheckNumber(): string {\r\n    return this.checkNumber;\r\n  }\r\n\r\n  /**\r\n   * The check number.\r\n   *\r\n   * @param checkNumber The check number.\r\n   */\r\n  public setCheckNumber(checkNumber: string): void {\r\n    this.checkNumber = checkNumber;\r\n  }\r\n\r\n  /**\r\n   * The reference number.\r\n   *\r\n   * @return The reference number.\r\n   */\r\n  public getReferenceNumber(): string {\r\n    return this.referenceNumber;\r\n  }\r\n\r\n  /**\r\n   * The reference number.\r\n   *\r\n   * @param referenceNumber The reference number.\r\n   */\r\n  public setReferenceNumber(referenceNumber: string): void {\r\n    this.referenceNumber = referenceNumber;\r\n  }\r\n\r\n  /**\r\n   * The standard industrial code.\r\n   *\r\n   * @return The standard industrial code.\r\n   */\r\n  public getStandardIndustrialCode(): string {\r\n    return this.standardIndustrialCode;\r\n  }\r\n\r\n  /**\r\n   * The standard industrial code.\r\n   *\r\n   * @param standardIndustrialCode The standard industrial code.\r\n   */\r\n  public setStandardIndustrialCode(standardIndustrialCode: string): void {\r\n    this.standardIndustrialCode = standardIndustrialCode;\r\n  }\r\n\r\n  /**\r\n   * The payee id.\r\n   *\r\n   * @return The payee id.\r\n   */\r\n  public getPayeeId(): string {\r\n    return this.payeeId;\r\n  }\r\n\r\n  /**\r\n   * The payee id.\r\n   *\r\n   * @param payeeId The payee id.\r\n   */\r\n  public setPayeeId(payeeId: string): void {\r\n    this.payeeId = payeeId;\r\n  }\r\n\r\n  /**\r\n   * The name (description) or the transaction.\r\n   *\r\n   * @return The name (description) or the transaction.\r\n   */\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  /**\r\n   * The name (description) or the transaction.\r\n   *\r\n   * @param name The name (description) or the transaction.\r\n   */\r\n  public setName(name: string): void {\r\n    this.name = name;\r\n  }\r\n\r\n  /**\r\n   * The payee.\r\n   *\r\n   * @return The payee.\r\n   */\r\n  public getPayee(): Payee {\r\n    return this.payee;\r\n  }\r\n\r\n  /**\r\n   * The payee.\r\n   *\r\n   * @param payee The payee.\r\n   */\r\n  public setPayee(payee: Payee): void {\r\n    this.payee = payee;\r\n  }\r\n\r\n  /**\r\n   * The bank account the transfer was to.\r\n   *\r\n   * @return The bank account the transfer was to.\r\n   */\r\n  public getBankAccountTo(): BankAccountDetails {\r\n    return this.bankAccountTo;\r\n  }\r\n\r\n  /**\r\n   * The bank account the transfer was to.\r\n   *\r\n   * @param bankAccountTo The bank account the transfer was to.\r\n   */\r\n  public setBankAccountTo(bankAccountTo: BankAccountDetails): void {\r\n    this.bankAccountTo = bankAccountTo;\r\n  }\r\n\r\n  /**\r\n   * The credit-card account the transfer was to.\r\n   *\r\n   * @return The credit-card account the transfer was to.\r\n   */\r\n  public getCreditCardAccountTo(): CreditCardAccountDetails {\r\n    return this.creditCardAccountTo;\r\n  }\r\n\r\n  /**\r\n   * The credit-card account the transfer was to.\r\n   *\r\n   * @param creditCardAccountTo The credit-card account the transfer was to.\r\n   */\r\n  public setCreditCardAccountTo(creditCardAccountTo: CreditCardAccountDetails): void {\r\n    this.creditCardAccountTo = creditCardAccountTo;\r\n  }\r\n\r\n  /**\r\n   * Notes.\r\n   *\r\n   * @return Notes.\r\n   */\r\n  public getMemo(): string {\r\n    return this.memo;\r\n  }\r\n\r\n  /**\r\n   * Notes.\r\n   *\r\n   * @param memo Notes.\r\n   */\r\n  public setMemo(memo: string): void {\r\n    this.memo = memo;\r\n  }\r\n\r\n  /**\r\n   * The currency.\r\n   *\r\n   * @return The currency.\r\n   */\r\n  public getCurrency(): Currency {\r\n    return this.currency;\r\n  }\r\n\r\n  /**\r\n   * The currency.\r\n   *\r\n   * @param currency The currency.\r\n   */\r\n  public setCurrency(currency: Currency): void {\r\n    this.currency = currency;\r\n  }\r\n\r\n  /**\r\n   * The original currency.\r\n   *\r\n   * @return The original currency.\r\n   */\r\n  public getOriginalCurrency(): Currency {\r\n    return this.originalCurrency;\r\n  }\r\n\r\n  /**\r\n   * The original currency.\r\n   *\r\n   * @param originalCurrency The original currency.\r\n   */\r\n  public setOriginalCurrency(originalCurrency: Currency): void {\r\n    this.originalCurrency = originalCurrency;\r\n  }\r\n}\r\n\r\nAggregate_add( Transaction, \"STMTTRN\" );\r\nElement_add(Transaction, { name: \"TRNTYPE\", required: true, order: 0, type: InvestmentTransactionType, read: Transaction.prototype.getTransactionType, write: Transaction.prototype.setTransactionType });\r\nElement_add(Transaction, { name: \"DTPOSTED\", required: true, order: 10, type: Date, read: Transaction.prototype.getDatePosted, write: Transaction.prototype.setDatePosted });\r\nElement_add(Transaction, { name: \"DTUSER\", order: 20, type: Date, read: Transaction.prototype.getDateInitiated, write: Transaction.prototype.setDateInitiated });\r\nElement_add(Transaction, { name: \"DTAVAIL\", order: 30, type: Date, read: Transaction.prototype.getDateAvailable, write: Transaction.prototype.setDateAvailable });\r\nElement_add(Transaction, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: Transaction.prototype.getBigDecimalAmount, write: Transaction.prototype.setBigDecimalAmount });\r\nElement_add(Transaction, { name: \"FITID\", required: true, order: 50, type: String, read: Transaction.prototype.getId, write: Transaction.prototype.setId });\r\nElement_add(Transaction, { name: \"CORRECTFITID\", order: 60, type: String, read: Transaction.prototype.getCorrectionId, write: Transaction.prototype.setCorrectionId });\r\nElement_add(Transaction, { name: \"CORRECTACTION\", order: 70, type: CorrectionAction, read: Transaction.prototype.getCorrectionAction, write: Transaction.prototype.setCorrectionAction });\r\nElement_add(Transaction, { name: \"SRVRTID\", order: 80, type: String, read: Transaction.prototype.getTempId, write: Transaction.prototype.setTempId });\r\nElement_add(Transaction, { name: \"CHECKNUM\", order: 90, type: String, read: Transaction.prototype.getCheckNumber, write: Transaction.prototype.setCheckNumber });\r\nElement_add(Transaction, { name: \"REFNUM\", order: 100, type: String, read: Transaction.prototype.getReferenceNumber, write: Transaction.prototype.setReferenceNumber });\r\nElement_add(Transaction, { name: \"SIC\", order: 110, type: String, read: Transaction.prototype.getStandardIndustrialCode, write: Transaction.prototype.setStandardIndustrialCode });\r\nElement_add(Transaction, { name: \"PAYEEID\", order: 120, type: String, read: Transaction.prototype.getPayeeId, write: Transaction.prototype.setPayeeId });\r\nElement_add(Transaction, { name: \"NAME\", order: 130, type: String, read: Transaction.prototype.getName, write: Transaction.prototype.setName });\r\nChildAggregate_add(Transaction, { order: 140, type: Payee, read: Transaction.prototype.getPayee, write: Transaction.prototype.setPayee });\r\nChildAggregate_add(Transaction, { name: \"BANKACCTTO\", order: 150, type: BankAccountDetails, read: Transaction.prototype.getBankAccountTo, write: Transaction.prototype.setBankAccountTo });\r\nChildAggregate_add(Transaction, { name: \"CCACCTTO\", order: 160, type: CreditCardAccountDetails, read: Transaction.prototype.getCreditCardAccountTo, write: Transaction.prototype.setCreditCardAccountTo });\r\nElement_add(Transaction, { name: \"MEMO\", order: 170, type: String, read: Transaction.prototype.getMemo, write: Transaction.prototype.setMemo });\r\nChildAggregate_add(Transaction, { order: 180, type: Currency, read: Transaction.prototype.getCurrency, write: Transaction.prototype.setCurrency });\r\nChildAggregate_add(Transaction, { name: \"ORIGCURRENCY\", order: 190, type: Currency, read: Transaction.prototype.getOriginalCurrency, write: Transaction.prototype.setOriginalCurrency });\r\n","import { Transaction } from \"./Transaction\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n//import java.util.Date;\r\n//import java.util.List;\r\n\r\nexport class TransactionList {\r\n\r\n  private start: Date;\r\n  private end: Date;\r\n  private transactions: Array<Transaction>;\r\n\r\n  /**\r\n   * The start date.\r\n   *\r\n   * @return The start date.\r\n   */\r\n  public getStart(): Date {\r\n    return this.start;\r\n  }\r\n\r\n  /**\r\n   * The start date.\r\n   *\r\n   * @param start The start date.\r\n   */\r\n  public setStart(start: Date): void {\r\n    this.start = start;\r\n  }\r\n\r\n  /**\r\n   * The end date.\r\n   *\r\n   * @return The end date.\r\n   */\r\n  public getEnd(): Date {\r\n    return this.end;\r\n  }\r\n\r\n  /**\r\n   * The end date.\r\n   *\r\n   * @param end The end date.\r\n   */\r\n  public setEnd(end: Date): void {\r\n    this.end = end;\r\n  }\r\n\r\n  /**\r\n   * The transaction list.\r\n   *\r\n   * @return The transaction list.\r\n   */\r\n  public getTransactions(): Array<Transaction> {\r\n    return this.transactions;\r\n  }\r\n\r\n  /**\r\n   * The transaction list.\r\n   *\r\n   * @param transactions The transaction list.\r\n   */\r\n  public setTransactions(transactions: Array<Transaction>): void {\r\n    this.transactions = transactions;\r\n  }\r\n}\r\n\r\nAggregate_add( TransactionList, \"BANKTRANLIST\" );\r\nElement_add(TransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: TransactionList.prototype.getStart, write: TransactionList.prototype.setStart });\r\nElement_add(TransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: TransactionList.prototype.getEnd, write: TransactionList.prototype.setEnd });\r\nChildAggregate_add(TransactionList, { order: 20, type: Array, collectionEntryType: Transaction, read: TransactionList.prototype.getTransactions, write: TransactionList.prototype.setTransactions });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class BalanceInfo {\r\n\r\n  private amount: number;\r\n  private asOfDate: Date;\r\n\r\n  /**\r\n   * The amount.\r\n   *\r\n   * @return The amount.\r\n   */\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  /**\r\n   * The amount.\r\n   *\r\n   * @param amount The amount.\r\n   */\r\n  public setAmount(amount: number): void {\r\n    this.amount = amount;\r\n  }\r\n\r\n  /**\r\n   * The as-of date.\r\n   *\r\n   * @return The as-of date.\r\n   */\r\n  public getAsOfDate(): Date {\r\n    return this.asOfDate;\r\n  }\r\n\r\n  /**\r\n   * The as-of date.\r\n   *\r\n   * @param asOfDate The as-of date.\r\n   */\r\n  public setAsOfDate(asOfDate: Date): void {\r\n    this.asOfDate = asOfDate;\r\n  }\r\n}\r\n\r\nAggregate_add( BalanceInfo );\r\nElement_add(BalanceInfo, { name: \"BALAMT\", required: true, order: 0, type: Number, read: BalanceInfo.prototype.getAmount, write: BalanceInfo.prototype.setAmount });\r\nElement_add(BalanceInfo, { name: \"DTASOF\", required: true, order: 10, type: Date, read: BalanceInfo.prototype.getAsOfDate, write: BalanceInfo.prototype.setAsOfDate });\r\n","import { ResponseMessage } from \"../ResponseMessage\";\r\nimport { AccountStatement } from \"../../../client/AccountStatement\";\r\nimport { TransactionList } from \"./TransactionList\";\r\nimport { BalanceInfo } from \"./BalanceInfo\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n//import java.util.Locale;\r\n\r\nexport abstract class StatementResponse extends ResponseMessage implements AccountStatement {\r\n\r\n  private currencyCode: string;\r\n  private transactionList: TransactionList;\r\n  private ledgerBalance: BalanceInfo;\r\n  private availableBalance: BalanceInfo;\r\n  private marketingInfo: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this.currencyCode = \"USD\"; //java.util.Currency.getInstance(Locale.US).getCurrencyCode().toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * The currency code.\r\n   *\r\n   * @return The currency code.\r\n   * @see java.util.Currency#getCurrencyCode()\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * The currency code.\r\n   *\r\n   * @param currencyCode The currency code.\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n  }\r\n\r\n  /**\r\n   * The transaction list.\r\n   *\r\n   * @return The transaction list.\r\n   */\r\n  public getTransactionList(): TransactionList {\r\n    return this.transactionList;\r\n  }\r\n\r\n  /**\r\n   * The transaction list.\r\n   *\r\n   * @param transactionList The transaction list.\r\n   */\r\n  public setTransactionList(transactionList: TransactionList): void {\r\n    this.transactionList = transactionList;\r\n  }\r\n\r\n  /**\r\n   * The ledger balance.\r\n   *\r\n   * @return The ledger balance.\r\n   */\r\n  public getLedgerBalance(): BalanceInfo {\r\n    return this.ledgerBalance;\r\n  }\r\n\r\n  /**\r\n   * The ledger balance.\r\n   *\r\n   * @param ledgerBalance The ledger balance.\r\n   */\r\n  public setLedgerBalance(ledgerBalance: BalanceInfo): void {\r\n    this.ledgerBalance = ledgerBalance;\r\n  }\r\n\r\n  /**\r\n   * The available balance.\r\n   *\r\n   * @return The available balance.\r\n   */\r\n  public getAvailableBalance(): BalanceInfo {\r\n    return this.availableBalance;\r\n  }\r\n\r\n  /**\r\n   * The available balance.\r\n   *\r\n   * @param availableBalance The available balance.\r\n   */\r\n  public setAvailableBalance(availableBalance: BalanceInfo): void {\r\n    this.availableBalance = availableBalance;\r\n  }\r\n\r\n  /**\r\n   * Marketing information. (?)\r\n   *\r\n   * @return Marketing information.\r\n   */\r\n  public getMarketingInfo(): string {\r\n    return this.marketingInfo;\r\n  }\r\n\r\n  /**\r\n   * Marketing information. (?)\r\n   *\r\n   * @param marketingInfo Marketing information.\r\n   */\r\n  public setMarketingInfo(marketingInfo: string): void {\r\n    this.marketingInfo = marketingInfo;\r\n  }\r\n}\r\n\r\nElement_add(StatementResponse, { name: \"CURDEF\", required: true, order: 0, type: String, read: StatementResponse.prototype.getCurrencyCode, write: StatementResponse.prototype.setCurrencyCode });\r\nChildAggregate_add(StatementResponse, { order: 20, type: TransactionList, read: StatementResponse.prototype.getTransactionList, write: StatementResponse.prototype.setTransactionList });\r\nChildAggregate_add(StatementResponse, { name: \"LEDGERBAL\", order: 30, type: BalanceInfo, read: StatementResponse.prototype.getLedgerBalance, write: StatementResponse.prototype.setLedgerBalance });\r\nChildAggregate_add(StatementResponse, { name: \"AVAILBAL\", order: 40, type: BalanceInfo, read: StatementResponse.prototype.getAvailableBalance, write: StatementResponse.prototype.setAvailableBalance });\r\nElement_add(StatementResponse, { name: \"MKTGINFO\", order: 50, type: String, read: StatementResponse.prototype.getMarketingInfo, write: StatementResponse.prototype.setMarketingInfo });\r\n","import { StatementResponse } from \"../common/StatementResponse\";\r\nimport { BankAccountDetails } from \"./BankAccountDetails\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BankStatementResponse extends StatementResponse {\r\n\r\n  private account: BankAccountDetails;\r\n\r\n  public getResponseMessageName(): string {\r\n    return \"bank statement\";\r\n  }\r\n\r\n  /**\r\n   * The account for the statement.\r\n   *\r\n   * @return The account for the statement.\r\n   */\r\n  public getAccount(): BankAccountDetails {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * The account for the statement.\r\n   *\r\n   * @param account The account for the statement.\r\n   */\r\n  public setAccount(account: BankAccountDetails): void {\r\n    this.account = account;\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( BankStatementResponse, \"STMTRS\" );\r\nChildAggregate_add(BankStatementResponse, { name:\"BANKACCTFROM\", order: 10, type: BankAccountDetails, read: BankStatementResponse.prototype.getAccount, write: BankStatementResponse.prototype.setAccount });\r\n","import { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\r\nimport { BankStatementResponse } from \"./BankStatementResponse\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BankStatementResponseTransaction extends TransactionWrappedResponseMessage<BankStatementResponse> {\r\n\r\n  private message: BankStatementResponse;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): BankStatementResponse {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   */\r\n  public setMessage(message: BankStatementResponse): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): BankStatementResponse {\r\n    return this.getMessage();\r\n  }\r\n}\r\n\r\nAggregate_add( BankStatementResponseTransaction, \"STMTTRNRS\" );\r\nChildAggregate_add(BankStatementResponseTransaction, { required: true, order: 30, type: BankStatementResponse, read: BankStatementResponseTransaction.prototype.getMessage, write: BankStatementResponseTransaction.prototype.setMessage });\r\n","import { ResponseMessageSet } from \"../ResponseMessageSet\";\r\nimport { BankStatementResponseTransaction } from \"./BankStatementResponseTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BankingResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private statementResponses: Array<BankStatementResponseTransaction>;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.banking;\r\n  }\r\n\r\n  /**\r\n   * The statement response list.\r\n   *\r\n   * Most OFX files have a single statement response, except MT2OFX\r\n   * which outputs OFX with multiple statement responses\r\n   * in a single banking response message set.\r\n   *\r\n   * @return The statement response list.\r\n   */\r\n  public getStatementResponses(): Array<BankStatementResponseTransaction> {\r\n    return this.statementResponses;\r\n  }\r\n\r\n  /**\r\n   * The statement response.\r\n   *\r\n   * @param statementResponses The statement responses.\r\n   */\r\n  public setStatementResponses(statementResponses: Array<BankStatementResponseTransaction>): void {\r\n    this.statementResponses = statementResponses;\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    return this.statementResponses;\r\n  }\r\n\r\n  /**\r\n   * The first statement response.\r\n   *\r\n   * @return the first bank statement response.\r\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\r\n   */\r\n  public getStatementResponse(): BankStatementResponseTransaction {\r\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\r\n  }\r\n\r\n  public setStatementResponse(statementResponse: BankStatementResponseTransaction): void {\r\n    this.statementResponses = [statementResponse];\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( BankingResponseMessageSet, \"BANKMSGSRSV1\" );\r\nChildAggregate_add(BankingResponseMessageSet, { order: 0, type: Array, collectionEntryType: BankStatementResponseTransaction, read: BankingResponseMessageSet.prototype.getStatementResponses, write: BankingResponseMessageSet.prototype.setStatementResponses });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { Currency } from \"./Currency\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport enum BalanceRecordType {\r\n\r\n  DOLLAR,\r\n\r\n  PERCENT,\r\n\r\n  NUMBER\r\n}\r\n\r\n\r\n/**\r\n * @see \"Section 3.1.3, OFX Spec\"\r\n */\r\nexport class BalanceRecord {\r\n\r\n  private name: string;\r\n  private description: string;\r\n  private type: BalanceRecordType;\r\n  private value: string;\r\n  private timestamp: Date;\r\n  private currency: Currency;\r\n\r\n  /**\r\n   * Name of the balance.\r\n   *\r\n   * @return Name of the balance.\r\n   */\r\n  public getName(): string {\r\n    return this.name;\r\n  }\r\n\r\n  /**\r\n   * Name of the balance.\r\n   *\r\n   * @param name Name of the balance.\r\n   */\r\n  public setName(name: string): void {\r\n    this.name = name;\r\n  }\r\n\r\n  /**\r\n   * Description of the balance.\r\n   *\r\n   * @return Description of the balance.\r\n   */\r\n  public getDescription(): string {\r\n    return this.description;\r\n  }\r\n\r\n  /**\r\n   * Description of the balance.\r\n   *\r\n   * @param description Description of the balance.\r\n   */\r\n  public setDescription(description: string): void {\r\n    this.description = description;\r\n  }\r\n\r\n  /**\r\n   * Type of the balance.\r\n   *\r\n   * @return Type of the balance.\r\n   */\r\n  public getType(): BalanceRecordType {\r\n    return this.type;\r\n  }\r\n\r\n  /**\r\n   * Type of the balance.\r\n   *\r\n   * @param type Type of the balance.\r\n   */\r\n  public setType(type: BalanceRecordType): void {\r\n    this.type = type;\r\n  }\r\n\r\n  /**\r\n   * The value of the balance.\r\n   *\r\n   * @return The value of the balance.\r\n   */\r\n  public getValue(): string {\r\n    return this.value;\r\n  }\r\n\r\n  /**\r\n   * The value of the balance.\r\n   *\r\n   * @param value The value of the balance.\r\n   */\r\n  public setValue(value: string): void {\r\n    this.value = value;\r\n  }\r\n\r\n  /**\r\n   * Timestamp of the balance.\r\n   *\r\n   * @return Timestamp of the balance.\r\n   */\r\n  public getTimestamp(): Date {\r\n    return this.timestamp;\r\n  }\r\n\r\n  /**\r\n   * Timestamp of the balance.\r\n   *\r\n   * @param timestamp Timestamp of the balance.\r\n   */\r\n  public setTimestamp(timestamp: Date): void {\r\n    this.timestamp = timestamp;\r\n  }\r\n\r\n  /**\r\n   * Currency.\r\n   *\r\n   * @return Currency.\r\n   */\r\n  public getCurrency(): Currency {\r\n    return this.currency;\r\n  }\r\n\r\n  /**\r\n   * Currency.\r\n   *\r\n   * @param currency Currency.\r\n   */\r\n  public setCurrency(currency: Currency): void {\r\n    this.currency = currency;\r\n  }\r\n}\r\n\r\nAggregate_add( BalanceRecord, \"BAL\" );\r\nElement_add(BalanceRecord, { name: \"NAME\", required: true, order: 0, type: String, read: BalanceRecord.prototype.getName, write: BalanceRecord.prototype.setName });\r\nElement_add(BalanceRecord, { name: \"DESC\", required: true, order: 10, type: String, read: BalanceRecord.prototype.getDescription, write: BalanceRecord.prototype.setDescription });\r\nElement_add(BalanceRecord, { name: \"BALTYPE\", required: true, order: 20, type: BalanceRecordType, read: BalanceRecord.prototype.getType, write: BalanceRecord.prototype.setType });\r\nElement_add(BalanceRecord, { name: \"VALUE\", required: true, order: 30, type: String, read: BalanceRecord.prototype.getValue, write: BalanceRecord.prototype.setValue });\r\nElement_add(BalanceRecord, { name: \"DTASOF\", order: 40, type: Date, read: BalanceRecord.prototype.getTimestamp, write: BalanceRecord.prototype.setTimestamp });\r\nChildAggregate_add(BalanceRecord, { order: 50, type: Currency, read: BalanceRecord.prototype.getCurrency, write: BalanceRecord.prototype.setCurrency });\r\n","\r\n/**\r\n * Day of week used in \"PROCDAYSOFF\" lists.\r\n *\r\n * @see \"OFX Spec, Section 13.6.2\"\r\n */\r\nexport enum ProcessorDayOff {\r\n  MONDAY,\r\n  TUESDAY,\r\n  WEDNESDAY,\r\n  THURSDAY,\r\n  FRIDAY,\r\n  SATURDAY,\r\n  SUNDAY\r\n}\r\n\r\nexport function ProcessorDayOff_fromOfx(ofxVal: string): ProcessorDayOff {\r\n  if (\"MONDAY\" === ofxVal) {\r\n    return ProcessorDayOff.MONDAY;\r\n  } else if (\"TUESDAY\" === ofxVal) {\r\n    return ProcessorDayOff.TUESDAY;\r\n  } else if (\"WEDNESDAY\" === ofxVal) {\r\n    return ProcessorDayOff.WEDNESDAY;\r\n  } else if (\"THURSDAY\" === ofxVal) {\r\n    return ProcessorDayOff.THURSDAY;\r\n  } else if (\"FRIDAY\" === ofxVal) {\r\n    return ProcessorDayOff.FRIDAY;\r\n  } else if (\"SATURDAY\" === ofxVal) {\r\n    return ProcessorDayOff.SATURDAY;\r\n  } else if (\"SUNDAY\" === ofxVal) {\r\n    return ProcessorDayOff.SUNDAY;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\n\r\n\r\nexport class T1099Request extends RequestMessage {\r\n}\r\n\r\nAggregate_add( T1099Request, \"STMTRQ\" );\r\n","import { ResponseMessage } from \"../ResponseMessage\";\r\n\r\n\r\n//import java.util.Locale;\r\n\r\nexport abstract class T1099Response extends ResponseMessage {\r\n}\r\n","\r\nexport enum TransactionType {\r\n\r\n  /**\r\n   * generic credit.\r\n   */\r\n  CREDIT,\r\n\r\n  /**\r\n   * genertic debit.\r\n   */\r\n  DEBIT,\r\n\r\n  /**\r\n   * interest earned.\r\n   */\r\n  INT,\r\n\r\n  /**\r\n   * dividend.\r\n   */\r\n  DIV,\r\n\r\n  /**\r\n   * bank fee.\r\n   */\r\n  FEE,\r\n\r\n  /**\r\n   * service charge.\r\n   */\r\n  SRVCHG,\r\n\r\n  /**\r\n   * deposit.\r\n   */\r\n  DEP,\r\n\r\n  /**\r\n   * ATM transaction.\r\n   */\r\n  ATM,\r\n\r\n  /**\r\n   * point of sale\r\n   */\r\n  POS,\r\n\r\n  /**\r\n   * transfer\r\n   */\r\n  XFER,\r\n\r\n  /**\r\n   * check\r\n   */\r\n  CHECK,\r\n\r\n  /**\r\n   * electronic payment\r\n   */\r\n  PAYMENT,\r\n\r\n  /**\r\n   * cash.\r\n   */\r\n  CASH,\r\n\r\n  /**\r\n   * direct deposit.\r\n   */\r\n  DIRECTDEP,\r\n\r\n  /**\r\n   * merchant-initiated debit\r\n   */\r\n  DIRECTDEBIT,\r\n\r\n  /**\r\n   * repeating payment.\r\n   */\r\n  REPEATPMT,\r\n\r\n  /**\r\n   * other\r\n   */\r\n  OTHER\r\n}\r\n","import { BankAccountDetails } from \"../banking/BankAccountDetails\";\r\nimport { CreditCardAccountDetails } from \"../creditcard/CreditCardAccountDetails\";\r\nimport { OFXException } from \"../../../OFXException\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class TransferInfo {\r\n\r\n  private bankAccountFrom: BankAccountDetails;\r\n  private creditCardAccountFrom: CreditCardAccountDetails;\r\n  private bankAccountTo: BankAccountDetails;\r\n  private creditCardAccountTo: CreditCardAccountDetails;\r\n\r\n  private amount: number;\r\n  private due: Date;\r\n\r\n  /**\r\n   * The bank account to transfer from.\r\n   *\r\n   * @return The bank account to transfer from.\r\n   */\r\n  public getBankAccountFrom(): BankAccountDetails {\r\n    return this.bankAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * The bank account to transfer from.\r\n   *\r\n   * @param bankAccountFrom The bank account to transfer from.\r\n   */\r\n  public setBankAccountFrom(bankAccountFrom: BankAccountDetails): void {\r\n    this.creditCardAccountFrom = null;\r\n    this.bankAccountFrom = bankAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * The account to transfer from.\r\n   *\r\n   * @param acct The account to transfer from.\r\n   */\r\n  public setAccountFrom(acct: BankAccountDetails | CreditCardAccountDetails): void {\r\n    if(acct instanceof BankAccountDetails) {\r\n      this.setBankAccountFrom(<BankAccountDetails>acct);\r\n    } else {\r\n      this.setCreditCardAccountFrom(<CreditCardAccountDetails>acct);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The credit card to transfer from.\r\n   *\r\n   * @return The credit card to transfer from.\r\n   */\r\n  public getCreditCardAccountFrom(): CreditCardAccountDetails {\r\n    return this.creditCardAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * The credit card to transfer from.\r\n   *\r\n   * @param creditCardAccountFrom The credit card to transfer from.\r\n   */\r\n  public setCreditCardAccountFrom(creditCardAccountFrom: CreditCardAccountDetails): void {\r\n    this.bankAccountFrom = null;\r\n    this.creditCardAccountFrom = creditCardAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * The bank account to transfer to.\r\n   *\r\n   * @return The bank account to transfer to.\r\n   */\r\n  public getBankAccountTo(): BankAccountDetails {\r\n    return this.bankAccountTo;\r\n  }\r\n\r\n  /**\r\n   * The bank account to transfer to.\r\n   *\r\n   * @param bankAccountTo The bank account to transfer to.\r\n   */\r\n  public setBankAccountTo(bankAccountTo: BankAccountDetails): void {\r\n    this.creditCardAccountTo = null;\r\n    this.bankAccountTo = bankAccountTo;\r\n  }\r\n\r\n  /**\r\n   * The bank or credit card account to transfer to.\r\n   *\r\n   * @param accountTo The account to transfer to.\r\n   */\r\n  public setAccountTo(accountTo: BankAccountDetails | CreditCardAccountDetails): void {\r\n    if(accountTo instanceof BankAccountDetails)\r\n      this.setBankAccountTo(accountTo);\r\n    else if(accountTo instanceof CreditCardAccountDetails)\r\n      this.setCreditCardAccountTo(accountTo);\r\n    else\r\n      throw new OFXException(\"invalid type\");\r\n  }\r\n\r\n\r\n  /**\r\n   * The credit card account to transfer to.\r\n   *\r\n   * @return The credit card account to transfer to.\r\n   */\r\n  public getCreditCardAccountTo(): CreditCardAccountDetails {\r\n    return this.creditCardAccountTo;\r\n  }\r\n\r\n  /**\r\n   * The credit card account to transfer to.\r\n   *\r\n   * @param creditCardAccountTo The credit card account to transfer to.\r\n   */\r\n  public setCreditCardAccountTo(creditCardAccountTo: CreditCardAccountDetails): void {\r\n    this.bankAccountTo = null;\r\n    this.creditCardAccountTo = creditCardAccountTo;\r\n  }\r\n\r\n  /**\r\n   * The amount.\r\n   *\r\n   * @return The amount.\r\n   */\r\n  public getAmount(): number {\r\n    return this.amount;\r\n  }\r\n\r\n  /**\r\n   * The amount.\r\n   *\r\n   * @param amount The amount.\r\n   */\r\n  public setAmount(amount: number): void {\r\n    this.amount = amount;\r\n  }\r\n\r\n  /**\r\n   * The due date.\r\n   *\r\n   * @return The due date.\r\n   */\r\n  public getDue(): Date {\r\n    return this.due;\r\n  }\r\n\r\n  /**\r\n   * The due date.\r\n   *\r\n   * @param due The due date.\r\n   */\r\n  public setDue(due: Date): void {\r\n    this.due = due;\r\n  }\r\n}\r\n\r\nAggregate_add( TransferInfo, \"XFERINFO\" );\r\nChildAggregate_add(TransferInfo, { name: \"BANKACCTFROM\", order: 0, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountFrom, write: TransferInfo.prototype.setBankAccountFrom });\r\nChildAggregate_add(TransferInfo, { name: \"CCACCTFROM\", order: 10, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountFrom, write: TransferInfo.prototype.setCreditCardAccountFrom });\r\nChildAggregate_add(TransferInfo, { name: \"BANKACCTTO\", order: 20, type: BankAccountDetails, read: TransferInfo.prototype.getBankAccountTo, write: TransferInfo.prototype.setBankAccountTo });\r\nChildAggregate_add(TransferInfo, { name: \"CCACCTTO\", order: 30, type: CreditCardAccountDetails, read: TransferInfo.prototype.getCreditCardAccountTo, write: TransferInfo.prototype.setCreditCardAccountTo });\r\nElement_add(TransferInfo, { name: \"TRNAMT\", required: true, order: 40, type: Number, read: TransferInfo.prototype.getAmount, write: TransferInfo.prototype.setAmount });\r\nElement_add(TransferInfo, { name: \"DTDUE\", order: 50, type: Date, read: TransferInfo.prototype.getDue, write: TransferInfo.prototype.setDue });\r\n","\r\nexport enum TransferStatusEvent {\r\n\r\n  WILLPROCESSON,\r\n\r\n  POSTEDON,\r\n\r\n  NOFUNDSON,\r\n\r\n  CANCELEDON,\r\n\r\n  FAILEDON\r\n}\r\n","import { TransferStatusEvent } from \"./TransferStatusEvent\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class TransferStatus {\r\n\r\n  private event: TransferStatusEvent;\r\n  private date: Date;\r\n\r\n  /**\r\n   * The event.\r\n   *\r\n   * @return The event.\r\n   */\r\n  public getEvent(): TransferStatusEvent {\r\n    return this.event;\r\n  }\r\n\r\n  /**\r\n   * The event.\r\n   *\r\n   * @param event The event.\r\n   */\r\n  public setEvent(event: TransferStatusEvent): void {\r\n    this.event = event;\r\n  }\r\n\r\n  /**\r\n   * The date of the event.\r\n   *\r\n   * @return The date of the event.\r\n   */\r\n  public getDate(): Date {\r\n    return this.date;\r\n  }\r\n\r\n  /**\r\n   * The date of the event.\r\n   *\r\n   * @param date The date of the event.\r\n   */\r\n  public setDate(date: Date): void {\r\n    this.date = date;\r\n  }\r\n}\r\n\r\nAggregate_add( TransferStatus, \"XFERPRCSTS\" );\r\nElement_add(TransferStatus, { name: \"XFERPRCCODE\", required: true, order: 0, type: TransferStatusEvent, read: TransferStatus.prototype.getEvent, write: TransferStatus.prototype.setEvent });\r\nElement_add(TransferStatus, { name: \"DTXFERPRC\", required: true, order: 10, type: Date, read: TransferStatus.prototype.getDate, write: TransferStatus.prototype.setDate });\r\n","import { AccountInfo } from \"../common/AccountInfo\";\r\nimport { CreditCardAccountDetails } from \"./CreditCardAccountDetails\";\r\nimport { AccountStatus } from \"../common/AccountStatus\";\r\nimport { AccountDetails } from \"../common/AccountDetails\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class CreditCardAccountInfo implements AccountInfo {\r\n\r\n  private creditCardAccount: CreditCardAccountDetails;\r\n  private supportsTransactionDetailOperations: boolean;\r\n  private supportsTransferToOtherAccountOperations: boolean;\r\n  private supportsTransferFromOtherAccountOperations: boolean;\r\n  private status: AccountStatus;\r\n\r\n  /**\r\n   * The credit card account this information is referencing.\r\n   *\r\n   * @return The credit card account this information is referencing.\r\n   */\r\n  public getCreditCardAccount(): CreditCardAccountDetails {\r\n    return this.creditCardAccount;\r\n  }\r\n\r\n  /**\r\n   * The credit card account this information is referencing.\r\n   *\r\n   * @param creditCardAccount The credit card account this information is referencing.\r\n   */\r\n  public setCreditCardAccount(creditCardAccount: CreditCardAccountDetails): void {\r\n    this.creditCardAccount = creditCardAccount;\r\n  }\r\n\r\n  // Inherited.\r\n  public getAccountDetails(): AccountDetails {\r\n    return this.getCreditCardAccount();\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports download of transaction details.\r\n   *\r\n   * @return Whether this account supports download of transaction details.\r\n   */\r\n  public getSupportsTransactionDetailOperations(): boolean {\r\n    return this.supportsTransactionDetailOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports download of transaction details.\r\n   *\r\n   * @param supportsTransactionDetailOperations Whether this account supports download of transaction details.\r\n   */\r\n  public setSupportsTransactionDetailOperations(supportsTransactionDetailOperations: boolean): void {\r\n    this.supportsTransactionDetailOperations = supportsTransactionDetailOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations to other accounts.\r\n   *\r\n   * @return Whether this account supports transfer operations to other accounts.\r\n   */\r\n  public getSupportsTransferToOtherAccountOperations(): boolean {\r\n    return this.supportsTransferToOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations to other accounts.\r\n   *\r\n   * @param supportsTransferToOtherAccountOperations Whether this account supports transfer operations to other accounts.\r\n   */\r\n  public setSupportsTransferToOtherAccountOperations(supportsTransferToOtherAccountOperations: boolean): void {\r\n    this.supportsTransferToOtherAccountOperations = supportsTransferToOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations from other accounts.\r\n   *\r\n   * @return Whether this account supports transfer operations from other accounts.\r\n   */\r\n  public getSupportsTransferFromOtherAccountOperations(): boolean {\r\n    return this.supportsTransferFromOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * Whether this account supports transfer operations from other accounts.\r\n   *\r\n   * @param supportsTransferFromOtherAccountOperations Whether this account supports transfer operations from other accounts.\r\n   */\r\n  public setSupportsTransferFromOtherAccountOperations(supportsTransferFromOtherAccountOperations: boolean): void {\r\n    this.supportsTransferFromOtherAccountOperations = supportsTransferFromOtherAccountOperations;\r\n  }\r\n\r\n  /**\r\n   * The account status.\r\n   *\r\n   * @return The account status.\r\n   */\r\n  public getStatus(): AccountStatus {\r\n    return this.status;\r\n  }\r\n\r\n  /**\r\n   * The account status.\r\n   *\r\n   * @param status The account status.\r\n   */\r\n  public setStatus(status: AccountStatus): void {\r\n    this.status = status;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardAccountInfo, \"CCACCTINFO\" );\r\nChildAggregate_add(CreditCardAccountInfo, { name: \"CCACCTFROM\", required: true, order: 0, type: CreditCardAccountDetails, read: CreditCardAccountInfo.prototype.getCreditCardAccount, write: CreditCardAccountInfo.prototype.setCreditCardAccount });\r\nElement_add(CreditCardAccountInfo, { name: \"SUPTXDL\", required: true, order: 10, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransactionDetailOperations, write: CreditCardAccountInfo.prototype.setSupportsTransactionDetailOperations });\r\nElement_add(CreditCardAccountInfo, { name: \"XFERSRC\", required: true, order: 20, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferToOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferToOtherAccountOperations });\r\nElement_add(CreditCardAccountInfo, { name: \"XFERDEST\", required: true, order: 30, type: Boolean, read: CreditCardAccountInfo.prototype.getSupportsTransferFromOtherAccountOperations, write: CreditCardAccountInfo.prototype.setSupportsTransferFromOtherAccountOperations });\r\nElement_add(CreditCardAccountInfo, { name: \"SVCSTATUS\", required: true, order: 40, type: AccountStatus, read: CreditCardAccountInfo.prototype.getStatus, write: CreditCardAccountInfo.prototype.setStatus });\r\n","import { StatementResponse } from \"../common/StatementResponse\";\r\nimport { CreditCardAccountDetails } from \"./CreditCardAccountDetails\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class CreditCardStatementResponse extends StatementResponse {\r\n\r\n  private account: CreditCardAccountDetails;\r\n\r\n  public getResponseMessageName(): string {\r\n    return \"credit card statement\";\r\n  }\r\n\r\n  /**\r\n   * The account for the statement.\r\n   *\r\n   * @return The account for the statement.\r\n   */\r\n  public getAccount(): CreditCardAccountDetails {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * The account for the statement.\r\n   *\r\n   * @param account The account for the statement.\r\n   */\r\n  public setAccount(account: CreditCardAccountDetails): void {\r\n    this.account = account;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardStatementResponse, \"CCSTMTRS\");\r\nChildAggregate_add(CreditCardStatementResponse, { name:\"CCACCTFROM\", order: 10, type: CreditCardAccountDetails, read: CreditCardStatementResponse.prototype.getAccount, write: CreditCardStatementResponse.prototype.setAccount });\r\n","import { CreditCardStatementResponse } from \"./CreditCardStatementResponse\";\r\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class CreditCardStatementResponseTransaction extends TransactionWrappedResponseMessage<CreditCardStatementResponse> {\r\n\r\n  private message: CreditCardStatementResponse;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): CreditCardStatementResponse {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   */\r\n  public setMessage(message: CreditCardStatementResponse): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): CreditCardStatementResponse {\r\n    return this.getMessage();\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardStatementResponseTransaction, \"CCSTMTTRNRS\" )\r\nChildAggregate_add(CreditCardStatementResponseTransaction, { required: true, order: 30, type: CreditCardStatementResponse, read: CreditCardStatementResponseTransaction.prototype.getMessage, write: CreditCardStatementResponseTransaction.prototype.setMessage });\r\n","import { ResponseMessageSet } from \"../ResponseMessageSet\";\r\nimport { CreditCardStatementResponseTransaction } from \"./CreditCardStatementResponseTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class CreditCardResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private statementResponses: Array<CreditCardStatementResponseTransaction>;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.creditcard;\r\n  }\r\n\r\n  /**\r\n   * The statement response list.\r\n   *\r\n   * Most OFX files have a single statement response, except MT2OFX\r\n   * which outputs OFX with multiple statement responses\r\n   * in a single banking response message set.\r\n   *\r\n   * @return The statement response list.\r\n   */\r\n  public getStatementResponses(): Array<CreditCardStatementResponseTransaction> {\r\n    return this.statementResponses;\r\n  }\r\n\r\n\r\n  /**\r\n   * The statement reponse list.\r\n   *\r\n   * @param statementResponses The statement response list.\r\n   */\r\n  public setStatementResponses(statementResponses: Array<CreditCardStatementResponseTransaction>): void {\r\n    this.statementResponses = statementResponses;\r\n  }\r\n\r\n\r\n  /**\r\n   * The first statement response.\r\n   *\r\n   * @return the first bank statement response.\r\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\r\n   */\r\n  public getStatementResponse(): CreditCardStatementResponseTransaction {\r\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\r\n  }\r\n\r\n  /**\r\n   * The statement response.\r\n   *\r\n   * @param statementResponse The statement response.\r\n   */\r\n  public setStatementResponse(statementResponse: CreditCardStatementResponseTransaction): void {\r\n    this.statementResponses = [statementResponse];\r\n  }\r\n\r\n\r\n  // Inherited.\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    return this.statementResponses;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardResponseMessageSet, \"CREDITCARDMSGSRSV1\" );\r\nChildAggregate_add(CreditCardResponseMessageSet, { order: 0, type: Array, collectionEntryType: CreditCardStatementResponseTransaction, read: CreditCardResponseMessageSet.prototype.getStatementResponses, write: CreditCardResponseMessageSet.prototype.setStatementResponses });\r\n","\r\n/**\r\n * Type of investment account.\r\n *\r\n * @see \"OFX Spec, Section 13.6.2\"\r\n */\r\nexport enum InvestmentAccountType {\r\n  INDIVIDUAL,\r\n  JOINT,\r\n  TRUST,\r\n  CORPORATE,\r\n}\r\n\r\n\r\nexport function InvestmentAccountType_fromOfx(ofxVal: string): InvestmentAccountType {\r\n  if (\"INDIVIDUAL\" === ofxVal) {\r\n    return InvestmentAccountType.INDIVIDUAL;\r\n  } else if (\"JOINT\" === ofxVal) {\r\n    return InvestmentAccountType.JOINT;\r\n  } else if (\"CORPORATE\" === ofxVal) {\r\n    return InvestmentAccountType.CORPORATE;\r\n  } else if (\"CORPORATE\" === ofxVal) {\r\n    return InvestmentAccountType.CORPORATE;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","\r\n/**\r\n * Activation status of an account.\r\n * @see \"Section 13.6.2, OFX Spec\"\r\n */\r\nexport enum ActivationStatus {\r\n  ACTIVE,\r\n  PENDING,\r\n  AVAILABLE\r\n}\r\n\r\nexport function ActivationStatus_fromOfx(ofxVal: string): ActivationStatus {\r\n  if (\"ACTIVE\" === ofxVal) {\r\n    return ActivationStatus.ACTIVE;\r\n  } else if (\"PEND\" === ofxVal) {\r\n    return ActivationStatus.PENDING;\r\n  } else if (\"AVAIL\" === ofxVal) {\r\n    return ActivationStatus.AVAILABLE;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","\r\n//import java.util.HashMap;\r\n//import java.util.Map;\r\n\r\n/**\r\n * @see \"OFX Spec, Section 13.6.2.1\"\r\n */\r\nexport enum UnitedStatesAccountType {\r\n\r\n  /** A 401(k) retirement account */\r\n  R401K,\r\n\r\n  /** A 403(B) retirement account */\r\n  R403B,\r\n\r\n  /** An IRA retirement account */\r\n  IRA,\r\n\r\n  /** Keough (money purchase/profit sharing) account */\r\n  KEOUGH,\r\n\r\n  /** Other account type */\r\n  OTHER,\r\n\r\n  /** Salary Reduction Employer Pension Plan */\r\n  SARSEP,\r\n\r\n  /** Savings Incentive Match Plan for Employees*/\r\n  SIMPLE,\r\n\r\n  /** Regular investment account */\r\n  NORMAL,\r\n\r\n  /** Tax Deferred Annuity */\r\n  TDA,\r\n\r\n  /** Trust (including UTMA) */\r\n  TRUST,\r\n\r\n  /** Custodial account */\r\n  UGMA\r\n}\r\n\r\ninterface OfxMappingType {\r\n  [key: string]: UnitedStatesAccountType;\r\n}\r\n\r\nvar ofxMapping: OfxMappingType = {\r\n  \"401K\": UnitedStatesAccountType.R401K,\r\n  \"403B\": UnitedStatesAccountType.R403B,\r\n  \"IRA\": UnitedStatesAccountType.IRA,\r\n  \"KEOUGH\": UnitedStatesAccountType.KEOUGH,\r\n  \"OTHER\": UnitedStatesAccountType.OTHER,\r\n  \"SARSEP\": UnitedStatesAccountType.SARSEP,\r\n  \"SIMPLE\": UnitedStatesAccountType.SIMPLE,\r\n  \"NORMAL\": UnitedStatesAccountType.NORMAL,\r\n  \"TDA\": UnitedStatesAccountType.TDA,\r\n  \"TRUST\": UnitedStatesAccountType.TRUST,\r\n  \"UGMA\": UnitedStatesAccountType.UGMA,\r\n};\r\n\r\nexport function UnitedStatesAccountType_fromOfx(ofxVal: string): UnitedStatesAccountType {\r\n  return ofxVal == null ? null : ofxMapping[ofxVal];\r\n}\r\n","import { AccountInfo } from \"../../common/AccountInfo\";\r\nimport { InvestmentAccountDetails } from \"./InvestmentAccountDetails\";\r\nimport { AccountDetails } from \"../../common/AccountDetails\";\r\nimport { UnitedStatesAccountType, UnitedStatesAccountType_fromOfx } from \"./UnitedStatesAccountType\";\r\nimport { ActivationStatus, ActivationStatus_fromOfx } from \"./ActivationStatus\";\r\nimport { InvestmentAccountType } from \"./AccountType\";\r\nimport { InvestmentAccountType_fromOfx } from \"./AccountType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Aggregate for the info about a brokerage account.\r\n *\r\n * @see \"OFX Spec, Section 13.6.2\"\r\n */\r\nexport class InvestmentAccountInfo implements AccountInfo {\r\n\r\n  private investmentAccount: InvestmentAccountDetails;\r\n  private unitedStatesAccountType: string;\r\n  private supportsChecking: boolean;\r\n  private activationStatus: string;\r\n  private investmentAccountType: string;\r\n  private optionLevel: string;\r\n\r\n  /**\r\n   * Gets the investment account this information is referencing.\r\n   *\r\n   * @return the investment account this information is referencing\r\n   */\r\n  public getInvestmentAccount(): InvestmentAccountDetails {\r\n    return this.investmentAccount;\r\n  }\r\n\r\n  /**\r\n   * Sets the investment account this information is referencing. This is a required field\r\n   * according to the OFX spec.\r\n   *\r\n   * @param investmentAccount the investment account this information is referencing\r\n   */\r\n  public setInvestmentAccount(investmentAccount: InvestmentAccountDetails): void {\r\n    this.investmentAccount = investmentAccount;\r\n  }\r\n\r\n  // Inherited.\r\n  public getAccountDetails(): AccountDetails {\r\n    return this.getInvestmentAccount();\r\n  }\r\n\r\n  /**\r\n   * Gets the United States account type. This is a required field according to the OFX spec.\r\n   * @see \"OFX Spec, Section 13.6.1\"\r\n   *\r\n   * @return the United States account type\r\n   */\r\n  public getUnitedStatesAccountType(): string {\r\n    return this.unitedStatesAccountType;\r\n  }\r\n\r\n  /**\r\n   * Sets United States account type. This is a required field according to the OFX spec.\r\n   * @see \"OFX Spec, Section 13.6.1\"\r\n   *\r\n   * @param unitedStatesAccountType the United States account type\r\n   */\r\n  public setUnitedStatesAccountType(unitedStatesAccountType: string): void {\r\n    this.unitedStatesAccountType = unitedStatesAccountType;\r\n  }\r\n\r\n  /**\r\n   * Gets the United States account type as one of the well-known types.\r\n   *\r\n   * @return the account type or null if it's not one of the well-known types\r\n   */\r\n  public getUnitedStatesAccountTypeEnum(): UnitedStatesAccountType {\r\n    return UnitedStatesAccountType_fromOfx(this.unitedStatesAccountType);\r\n  }\r\n\r\n  /**\r\n   * Gets whether the account supports checking. This is a required field according to the OFX spec.\r\n   * @see \"OFX Spec, Section 13.6.1\"\r\n   *\r\n   * @return whether the account supports checking\r\n   */\r\n  public getSupportsChecking(): boolean {\r\n    return this.supportsChecking;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the account supports checking. This is a required field according to the OFX spec.\r\n   * @see \"OFX Spec, Section 13.6.1\"\r\n   *\r\n   * @param supportsChecking whether the account supports checking\r\n   */\r\n  public setSupportsChecking(supportsChecking: boolean): void {\r\n    this.supportsChecking = supportsChecking;\r\n  }\r\n\r\n  /**\r\n   * Gets the activation status for investment statement download. This is a required field\r\n   * according to the OFX spec.\r\n   *\r\n   * @return the activation status\r\n   */\r\n  public getActivationStatus(): string {\r\n    return this.activationStatus;\r\n  }\r\n\r\n  /**\r\n   * Sets the activation status for investment statement download. This is a required field\r\n   * according to the OFX spec.\r\n   *\r\n   * @param activationStatus the activation status\r\n   */\r\n  public setActivationStatus(activationStatus: string): void {\r\n    this.activationStatus = activationStatus;\r\n  }\r\n\r\n  /**\r\n   * Gets the activation status as one of the well-known types.\r\n   *\r\n   * @return the activation status or null if it wasn't one of the well known types\r\n   */\r\n  public getActivationStatusEnum(): ActivationStatus {\r\n    return ActivationStatus_fromOfx(this.getActivationStatus());\r\n  }\r\n\r\n  /**\r\n   * Gets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the type of account\r\n   */\r\n  public getInvestmentAccountType(): string {\r\n    return this.investmentAccountType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of investment account. One of \"INDIVIDUAL\", \"JOINT\", \"TRUST\", or \"CORPORATE\".\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @param investmentAccountType the type of account\r\n   */\r\n  public setInvestmentAccountType(investmentAccountType: string): void {\r\n    this.investmentAccountType = investmentAccountType;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of investment account as one of the well-known types.\r\n   *\r\n   * @return the type of investment account or null if it's not one of the well-known types\r\n   */\r\n  public getInvestmentAccountTypeEnum(): InvestmentAccountType {\r\n    return  InvestmentAccountType_fromOfx(this.getInvestmentAccountType());\r\n  }\r\n\r\n  /**\r\n   * Gets the description of option trading privileges. * This is an optional field according to\r\n   * the OFX spec.\r\n   *\r\n   * @return the description of option trading privileges.\r\n   */\r\n  public getOptionLevel(): string {\r\n    return this.optionLevel;\r\n  }\r\n\r\n  /**\r\n   * Sets the description of option trading privileges. * This is an optional field according to\r\n   * the OFX spec.\r\n   *\r\n   * @param optionLevel the description of option trading privileges.\r\n   */\r\n  public setOptionLevel(optionLevel: string): void {\r\n    this.optionLevel = optionLevel;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentAccountInfo, \"INVACCTINFO\" );\r\nChildAggregate_add(InvestmentAccountInfo, { name: \"INVACCTFROM\", required: true, order: 0, type: InvestmentAccountDetails, read: InvestmentAccountInfo.prototype.getInvestmentAccount, write: InvestmentAccountInfo.prototype.setInvestmentAccount });\r\nElement_add(InvestmentAccountInfo, { name: \"USPRODUCTTYPE\", required: true, order: 10, type: String, read: InvestmentAccountInfo.prototype.getUnitedStatesAccountType, write: InvestmentAccountInfo.prototype.setUnitedStatesAccountType });\r\nElement_add(InvestmentAccountInfo, { name: \"CHECKING\", required: true, order: 20, type: Boolean, read: InvestmentAccountInfo.prototype.getSupportsChecking, write: InvestmentAccountInfo.prototype.setSupportsChecking });\r\nElement_add(InvestmentAccountInfo, { name: \"SVCSTATUS\", required: true, order: 30, type: String, read: InvestmentAccountInfo.prototype.getActivationStatus, write: InvestmentAccountInfo.prototype.setActivationStatus });\r\nElement_add(InvestmentAccountInfo, { name: \"INVACCTTYPE\", order: 40, type: String, read: InvestmentAccountInfo.prototype.getInvestmentAccountType, write: InvestmentAccountInfo.prototype.setInvestmentAccountType });\r\nElement_add(InvestmentAccountInfo, { name: \"OPTIONLEVEL\", order: 50, type: String, read: InvestmentAccountInfo.prototype.getOptionLevel, write: InvestmentAccountInfo.prototype.setOptionLevel });\r\n","\r\n/**\r\n * Types of well-known sub-accounts.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum SubAccountType {\r\n  CASH,\r\n  MARGIN,\r\n  SHORT,\r\n  OTHER\r\n}\r\n\r\nexport function SubAccountType_fromOfx(ofxVal: string): SubAccountType {\r\n  if (\"CASH\" === ofxVal) {\r\n    return SubAccountType.CASH;\r\n  } else if (\"MARGIN\" === ofxVal) {\r\n    return SubAccountType.MARGIN;\r\n  } else if (\"SHORT\" === ofxVal) {\r\n    return SubAccountType.SHORT;\r\n  } else if (\"OTHER\" === ofxVal) {\r\n    return SubAccountType.OTHER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","\r\n/**\r\n * Type of position.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport enum PositionType {\r\n  LONG,\r\n  SHORT\r\n}\r\n\r\nexport function PositionType_fromOfx(ofxVal: string): PositionType {\r\n  if (\"LONG\" === ofxVal) {\r\n    return PositionType.LONG;\r\n  } else if (\"SHORT\" === ofxVal) {\r\n    return PositionType.SHORT;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","\r\n/**\r\n * Types of 401(k) sources.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum Inv401KSource {\r\n  PRETAX,\r\n  AFTER_TAX,\r\n  MATCH,\r\n  PROFIT_SHARING,\r\n  ROLLOVER,\r\n  OTHER_VEST,\r\n  OTHER_NONVEST\r\n}\r\n\r\ninterface MappingType {\r\n  [key: string]: Inv401KSource;\r\n}\r\n\r\nvar ofxMapping: MappingType = {\r\n  \"PRETAX\": Inv401KSource.PRETAX,\r\n  \"AFTERTAX\": Inv401KSource.AFTER_TAX,\r\n  \"MATCH\": Inv401KSource.MATCH,\r\n  \"PROFITSHARING\": Inv401KSource.PROFIT_SHARING,\r\n  \"ROLLOVER\": Inv401KSource.ROLLOVER,\r\n  \"OTHERVEST\": Inv401KSource.OTHER_VEST,\r\n  \"OTHERNONVEST\": Inv401KSource.OTHER_NONVEST,\r\n};\r\n\r\nexport function Inv401KSource_fromOfx(ofxVal: string): Inv401KSource {\r\n  return ofxVal == null ? null : ofxMapping[ofxVal];\r\n}\r\n","import { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { PositionType, PositionType_fromOfx } from \"./PositionType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"./Inv401KSource\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Class for the investment position aggregate.\r\n * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n */\r\nexport class InvestmentPosition {\r\n\r\n  private securityId: SecurityId;\r\n  private heldInAccount: string;\r\n  private positionType: string;\r\n  private units: number;\r\n  private unitPrice: number;\r\n  private marketValue: number;\r\n  private marketValueDate: Date;\r\n  private currencyCode: string;\r\n  private memo: string;\r\n  private inv401kSource: string;\r\n\r\n  /**\r\n   * Gets the security id for the position. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the security id for the position\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the security id for the position. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param securityId the security id for the position\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the sub-account type\r\n   */\r\n  public getHeldInAccount(): string {\r\n    return this.heldInAccount;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param heldInAccount the sub-account type\r\n   */\r\n  public setHeldInAccount(heldInAccount: string): void {\r\n    this.heldInAccount = heldInAccount;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub-account type as one of the well-known types.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the sub-account type or null if it's not one of the well-known types\r\n   */\r\n  getHeldInAccountEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getHeldInAccount());\r\n  }\r\n\r\n  /**\r\n   * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the position type\r\n   */\r\n  public getPositionType(): string {\r\n    return this.positionType;\r\n  }\r\n\r\n  /**\r\n   * Sets the position type. One of SHORT or LONG. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param positionType the position type\r\n   */\r\n  public setPositionType(positionType: string): void {\r\n    this.positionType = positionType;\r\n  }\r\n\r\n  /**\r\n   * Gets the position type as one of the well-known types.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the position type or null if it's not one of the well-known types\r\n   */\r\n  public getPositionTypeEnum(): PositionType {\r\n    return PositionType_fromOfx(this.getPositionType());\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units in the position. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the number of units in the position\r\n   */\r\n  public getUnits(): number {\r\n    return this.units;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units in the position. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param units the number of units in the position\r\n   */\r\n  public setUnits(units: number): void {\r\n    this.units = units;\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param unitPrice the per unit price\r\n   */\r\n  public setUnitPrice(unitPrice: number): void {\r\n    this.unitPrice = unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the market value of this position. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the market value of the position\r\n   */\r\n  public getMarketValue(): number {\r\n    return this.marketValue;\r\n  }\r\n\r\n  /**\r\n   * Sets the market value of this position. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param marketValue the market value of the position\r\n   */\r\n  public setMarketValue(marketValue: number): void {\r\n    this.marketValue = marketValue;\r\n  }\r\n\r\n  /**\r\n   * Gets the date and time of the unit price and market value. This is a required field according\r\n   * to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the market value date\r\n   */\r\n  public getMarketValueDate(): Date {\r\n    return this.marketValueDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the date and time of the unit price and market value. This is a required field according\r\n   * to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param marketValueDate the market value date\r\n   */\r\n  public setMarketValueDate(marketValueDate: Date): void {\r\n    this.marketValueDate = marketValueDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code of the position. This is an optional field according to the OFX spec.\r\n   * If not present, it's the default currency of the account.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the currency code of the position or null for the default currency\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the currency code of the position. This is an optional field according to the OFX spec.\r\n   * If not present, it's the default currency of the account.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code of the position or null for the default currency\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Gets the memo associated with the position. This is an optional field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the memo\r\n   */\r\n  public getMemo(): string {\r\n    return this.memo;\r\n  }\r\n\r\n  /**\r\n   * Sets the memo associated with the position. This is an optional field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @param memo the memo\r\n   */\r\n  public setMemo(memo: string): void {\r\n    this.memo = memo;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the 401k source\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the 401k source\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401k source as one of the well-known types.\r\n   *\r\n   * @return the 401k source or null if it's not one of the well-known types\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentPosition, \"INVPOS\" );\r\nChildAggregate_add(InvestmentPosition, { required: true, order: 10, type: SecurityId, read: InvestmentPosition.prototype.getSecurityId, write: InvestmentPosition.prototype.setSecurityId });\r\nElement_add(InvestmentPosition, { name: \"HELDINACCT\", required: true, order: 20, type: String, read: InvestmentPosition.prototype.getHeldInAccount, write: InvestmentPosition.prototype.setHeldInAccount });\r\nElement_add(InvestmentPosition, { name: \"POSTYPE\", required: true, order: 30, type: String, read: InvestmentPosition.prototype.getPositionType, write: InvestmentPosition.prototype.setPositionType });\r\nElement_add(InvestmentPosition, { name: \"UNITS\", required: true, order: 40, type: Number, read: InvestmentPosition.prototype.getUnits, write: InvestmentPosition.prototype.setUnits });\r\nElement_add(InvestmentPosition, { name: \"UNITPRICE\", required: true, order: 50, type: Number, read: InvestmentPosition.prototype.getUnitPrice, write: InvestmentPosition.prototype.setUnitPrice });\r\nElement_add(InvestmentPosition, { name: \"MKTVAL\", required: true, order: 60, type: Number, read: InvestmentPosition.prototype.getMarketValue, write: InvestmentPosition.prototype.setMarketValue });\r\nElement_add(InvestmentPosition, { name: \"DTPRICEASOF\", required: true, order: 70, type: Date, read: InvestmentPosition.prototype.getMarketValueDate, write: InvestmentPosition.prototype.setMarketValueDate });\r\nElement_add(InvestmentPosition, { name: \"CURRENCY\", order: 80, type: String, read: InvestmentPosition.prototype.getCurrencyCode, write: InvestmentPosition.prototype.setCurrencyCode });\r\nElement_add(InvestmentPosition, { name: \"MEMO\", order: 90, type: String, read: InvestmentPosition.prototype.getMemo, write: InvestmentPosition.prototype.setMemo });\r\nElement_add(InvestmentPosition, { name: \"INV401KSOURCE\", order: 100, type: String, read: InvestmentPosition.prototype.get401kSource, write: InvestmentPosition.prototype.set401kSource });\r\n","import { InvestmentPosition } from \"./InvestmentPosition\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { PositionType, PositionType_fromOfx } from \"./PositionType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"./Inv401KSource\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Base class for the various types of positions.\r\n * <br>\r\n * This class exposes a read-only view of the flattened aggregates that are\r\n * common to all positions as a convenience to application\r\n * developers who may not find the ofx aggregation model intuitive.\r\n */\r\nexport class BasePosition {\r\n  private investmentPosition: InvestmentPosition;\r\n\r\n  /**\r\n   * Gets the investment position child aggregate.\r\n   *\r\n   * @return the investment position child aggregate\r\n   */\r\n  public getInvestmentPosition(): InvestmentPosition {\r\n    return this.investmentPosition;\r\n  }\r\n\r\n  /**\r\n   * Sets the investment position child aggregate.\r\n   *\r\n   * @param investmentPosition the investment position child aggregate\r\n   */\r\n  public setInvestmentPosition(investmentPosition: InvestmentPosition): void {\r\n    this.investmentPosition = investmentPosition;\r\n  }\r\n\r\n  /**\r\n   * Gets the security id for the position. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the security id for the position\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.getInvestmentPosition().getSecurityId();\r\n  }\r\n\r\n  /**\r\n   * Gets the sub-account type. One of \"CASH\", \"MARGIN\", \"SHORT\", \"OTHER\". This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the sub-account type\r\n   */\r\n  public getHeldInAccount(): string {\r\n    return this.getInvestmentPosition().getHeldInAccount();\r\n  }\r\n\r\n  /**\r\n   * Gets the sub-account type as one of the well-known types.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the sub-account type or null if it's not one of the well-known types\r\n   */\r\n  getHeldInAccountEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getHeldInAccount());\r\n  }\r\n\r\n  /**\r\n   * Gets the position type. One of SHORT or LONG. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the position type\r\n   */\r\n  public getPositionType(): string {\r\n    return this.getInvestmentPosition().getPositionType();\r\n  }\r\n\r\n  /**\r\n   * Gets the position type as one of the well-known types.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the position type or null if it's not one of the well-known types\r\n   */\r\n  public getPositionTypeEnum(): PositionType {\r\n    return PositionType_fromOfx(this.getPositionType());\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units in the position. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the number of units in the position\r\n   */\r\n  public getUnits(): number {\r\n    return this.getInvestmentPosition().getUnits();\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.getInvestmentPosition().getUnitPrice();\r\n  }\r\n\r\n  /**\r\n   * Gets the market value of this position. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the market value of the position\r\n   */\r\n  public getMarketValue(): number {\r\n    return this.getInvestmentPosition().getMarketValue();\r\n  }\r\n\r\n  /**\r\n   * Gets the date and time of the unit price and market value. This is a required field according\r\n   * to the OFX spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the market value date\r\n   */\r\n  public getMarketValueDate(): Date {\r\n    return this.getInvestmentPosition().getMarketValueDate();\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code of the position. This is an optional field according to the OFX spec.\r\n   * If not present, it's the default currency of the account.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the currency code of the position or null for the default currency\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.getInvestmentPosition().getCurrencyCode();\r\n  }\r\n\r\n  /**\r\n   * Gets the memo associated with the position. This is an optional field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n   *\r\n   * @return the memo\r\n   */\r\n  public getMemo(): string {\r\n    return this.getInvestmentPosition().getMemo();\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the 401k source\r\n   */\r\n  public get401kSource(): string {\r\n    return this.getInvestmentPosition().get401kSource();\r\n  }\r\n\r\n  /**\r\n   * Gets the 401k source as one of the well-known types.\r\n   *\r\n   * @return the 401k source or null if it's not one of the well-known types\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nChildAggregate_add(BasePosition, { required: true, order: 10, type: InvestmentPosition, read: BasePosition.prototype.getInvestmentPosition, write: BasePosition.prototype.setInvestmentPosition });\r\n","import { BasePosition } from \"./BasePosition\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\n\r\n\r\n/**\r\n * Represents a debt position.\r\n * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n */\r\nexport class DebtPosition extends BasePosition {\r\n}\r\n\r\nAggregate_add( DebtPosition, \"POSDEBT\" )\r\n","import { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { BasePosition } from \"./BasePosition\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Aggregate for a list of invesment positions.\r\n * @see \"Section 13.9.2.2, OFX Spec\"\r\n */\r\nexport class InvestmentPositionList {\r\n  private positions: Array<BasePosition>;\r\n\r\n  /**\r\n   * Gets the list of positions\r\n   *\r\n   * @return the list of positions\r\n   */\r\n  public getPositions(): Array<BasePosition> {\r\n    return this.positions;\r\n  }\r\n\r\n  /**\r\n   * Sets the list of positions.\r\n   *\r\n   * @param positions the list of positions\r\n   */\r\n  public setPositions(positions: Array<BasePosition>): void {\r\n    this.positions = positions;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentPositionList, \"INVPOSLIST\" );\r\nChildAggregate_add(InvestmentPositionList, { order: 10, type: Array, collectionEntryType: BasePosition, read: InvestmentPositionList.prototype.getPositions, write: InvestmentPositionList.prototype.setPositions });\r\n","import { BasePosition } from \"./BasePosition\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Represents a mutual fund position.\r\n * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n */\r\nexport class MutualFundPosition extends BasePosition {\r\n\r\n  private unitsStreet: number;\r\n  private unitsUser: number;\r\n  private reinvestDividends: boolean;\r\n  private reinvestCapitalGains: boolean;\r\n\r\n  /**\r\n   * Gets the number of units in the financial insititution's street name.\r\n   *\r\n   * @return the number of units in the financial insititution's street name.\r\n   */\r\n  public getUnitsStreet(): number {\r\n    return this.unitsStreet;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units in the financial insititution's street name.\r\n   *\r\n   * @param unitsStreet the number of units in the financial insititution's street name.\r\n   */\r\n  public setUnitsStreet(unitsStreet: number): void {\r\n    this.unitsStreet = unitsStreet;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units in the user's name.\r\n   *\r\n   * @return the number of units in the user's name.\r\n   */\r\n  public getUnitsUser(): number {\r\n    return this.unitsUser;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units in the user's name.\r\n   *\r\n   * @param unitsUser the number of units in the user's name.\r\n   */\r\n  public setUnitsUser(unitsUser: number): void {\r\n    this.unitsUser = unitsUser;\r\n  }\r\n\r\n  /**\r\n   * Gets whether dividends are automatically reinvested.\r\n   *\r\n   * @return whether dividends are automatically reinvested\r\n   */\r\n  public getReinvestDividends(): boolean {\r\n    return this.reinvestDividends;\r\n  }\r\n\r\n  /**\r\n   * Sets whether dividends are automatically reinvested.\r\n   *\r\n   * @param reinvestDividends whether dividends are automatically reinvested\r\n   */\r\n  public setReinvestDividends(reinvestDividends: boolean): void {\r\n    this.reinvestDividends = reinvestDividends;\r\n  }\r\n\r\n  /**\r\n   * Gets whether capital gains are automatically reinvested.\r\n   *\r\n   * @return whether capital gains are automatically reinvested\r\n   */\r\n  public getReinvestCapitalGains(): boolean {\r\n    return this.reinvestCapitalGains;\r\n  }\r\n\r\n  /**\r\n   * Sets whether capital gains are automatically reinvested.\r\n   *\r\n   * @param reinvestCapitalGains whether capital gains are automatically reinvested\r\n   */\r\n  public setReinvestCapitalGains(reinvestCapitalGains: boolean): void {\r\n    this.reinvestCapitalGains = reinvestCapitalGains;\r\n  }\r\n}\r\n\r\nAggregate_add( MutualFundPosition, \"POSMF\" );\r\nElement_add(MutualFundPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: MutualFundPosition.prototype.getUnitsStreet, write: MutualFundPosition.prototype.setUnitsStreet });\r\nElement_add(MutualFundPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: MutualFundPosition.prototype.getUnitsUser, write: MutualFundPosition.prototype.setUnitsUser });\r\nElement_add(MutualFundPosition, { name: \"REINVDIV\", order: 50, type: Boolean, read: MutualFundPosition.prototype.getReinvestDividends, write: MutualFundPosition.prototype.setReinvestDividends });\r\nElement_add(MutualFundPosition, { name: \"REINVCG\", order: 60, type: Boolean, read: MutualFundPosition.prototype.getReinvestCapitalGains, write: MutualFundPosition.prototype.setReinvestCapitalGains });\r\n","\r\n/**\r\n * How a short option is secured.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport enum ShortOptionSecurity {\r\n  NAKED,\r\n  COVERED\r\n}\r\n\r\nexport function ShortOptionSecurity_fromOfx(ofxVal: string): ShortOptionSecurity {\r\n  if (\"NAKED\" === ofxVal) {\r\n    return ShortOptionSecurity.NAKED;\r\n  } else if (\"COVERED\" === ofxVal) {\r\n    return ShortOptionSecurity.COVERED;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { BasePosition } from \"./BasePosition\";\r\nimport { ShortOptionSecurity, ShortOptionSecurity_fromOfx } from \"./ShortOptionSecurity\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Represents an options position.\r\n * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n */\r\nexport class OptionsPosition extends BasePosition {\r\n  private secured: string;\r\n\r\n  /**\r\n   * Gets how the options position is secured (for short positions).\r\n   *\r\n   * @return how the options position is secured\r\n   */\r\n  public getSecured(): string {\r\n    return this.secured;\r\n  }\r\n\r\n  /**\r\n   * Sets how the options position is secured (for short positions).\r\n   *\r\n   * @param secured how the options position is secured\r\n   */\r\n  public setSecured(secured: string): void {\r\n    this.secured = secured;\r\n  }\r\n\r\n  /**\r\n   * Gets how the options position is secured as a well-known type.\r\n   *\r\n   * @return how the option position is secured or null if it's not a well-known type\r\n   */\r\n  getSecuredEnum(): ShortOptionSecurity {\r\n    return ShortOptionSecurity_fromOfx(this.getSecured());\r\n  }\r\n}\r\n\r\nAggregate_add( OptionsPosition, \"POSOPT\" );\r\nElement_add(OptionsPosition, { name: \"SECURED\", order: 20, type: String, read: OptionsPosition.prototype.getSecured, write: OptionsPosition.prototype.setSecured });\r\n","import { BasePosition } from \"./BasePosition\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\n\r\n\r\n/**\r\n * Represents other types of positions.\r\n * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n */\r\nexport class OtherPosition extends BasePosition {\r\n}\r\n\r\nAggregate_add( OtherPosition, \"POSOTHER\" );\r\n","import { BasePosition } from \"./BasePosition\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Represents a stock position.\r\n * @see \"Section 13.9.2.6.1, OFX Spec\"\r\n */\r\nexport class StockPosition extends BasePosition {\r\n  private unitsStreet: number;\r\n  private unitsUser: number;\r\n  private reinvestDividends: boolean;\r\n\r\n  /**\r\n   * Gets the number of units in the financial insititution's street name.\r\n   *\r\n   * @return the number of units in the financial insititution's street name.\r\n   */\r\n  public getUnitsStreet(): number {\r\n    return this.unitsStreet;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units in the financial insititution's street name.\r\n   *\r\n   * @param unitsStreet the number of units in the financial insititution's street name.\r\n   */\r\n  public setUnitsStreet(unitsStreet: number): void {\r\n    this.unitsStreet = unitsStreet;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units in the user's name.\r\n   *\r\n   * @return the number of units in the user's name.\r\n   */\r\n  public getUnitsUser(): number {\r\n    return this.unitsUser;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units in the user's name.\r\n   *\r\n   * @param unitsUser the number of units in the user's name.\r\n   */\r\n  public setUnitsUser(unitsUser: number): void {\r\n    this.unitsUser = unitsUser;\r\n  }\r\n\r\n  /**\r\n   * Gets whether dividends are automatically reinvested.\r\n   *\r\n   * @return whether dividends are automatically reinvested\r\n   */\r\n  public getReinvestDividends(): boolean {\r\n    return this.reinvestDividends;\r\n  }\r\n\r\n  /**\r\n   * Sets whether dividends are automatically reinvested.\r\n   *\r\n   * @param reinvestDividends whether dividends are automatically reinvested\r\n   */\r\n  public setReinvestDividends(reinvestDividends: boolean): void {\r\n    this.reinvestDividends = reinvestDividends;\r\n  }\r\n}\r\n\r\nAggregate_add( StockPosition, \"POSSTOCK\" );\r\nElement_add(StockPosition, { name: \"UNITSSTREET\", order: 20, type: Number, read: StockPosition.prototype.getUnitsStreet, write: StockPosition.prototype.setUnitsStreet });\r\nElement_add(StockPosition, { name: \"UNITSUSER\", order: 30, type: Number, read: StockPosition.prototype.getUnitsUser, write: StockPosition.prototype.setUnitsUser });\r\nElement_add(StockPosition, { name: \"REINVDIV\", order: 40, type: Boolean, read: StockPosition.prototype.getReinvestDividends, write: StockPosition.prototype.setReinvestDividends });\r\n","import { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { BalanceRecord } from \"../../common/BalanceRecord\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Aggregate for the investment balance list.\r\n * @see \"Section 13.9.2.7, OFX Spec\"\r\n */\r\nexport class BalanceList {\r\n\r\n  private balanceRecords: Array<BalanceRecord>;\r\n\r\n  /**\r\n   * Gets the list of balance records.\r\n   *\r\n   * @return the list of balance records.\r\n   */\r\n  public getBalanceRecords(): Array<BalanceRecord> {\r\n    return this.balanceRecords;\r\n  }\r\n\r\n  /**\r\n   * Sets the list of balance records.\r\n   *\r\n   * @param balanceRecords the list of balance records.\r\n   */\r\n  public setBalanceRecords(balanceRecords: Array<BalanceRecord>): void {\r\n    this.balanceRecords = balanceRecords;\r\n  }\r\n}\r\n\r\nAggregate_add( BalanceList, \"BALLIST\" );\r\nChildAggregate_add(BalanceList, { order: 10, type: Array, collectionEntryType: BalanceRecord, read: BalanceList.prototype.getBalanceRecords, write: BalanceList.prototype.setBalanceRecords });\r\n","import { BalanceList } from \"./BalanceList\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Aggregate for the investment balance.\r\n * @see \"Section 13.9.2.7, OFX Spec\"\r\n */\r\nexport class InvestmentBalance {\r\n\r\n  private availableCash: number;\r\n  private marginBalance: number;\r\n  private shortBalance: number;\r\n  private buyingPower: number;\r\n  private balanceList: BalanceList;\r\n\r\n  /**\r\n   * Gets the available cash balance across all sub-accounts, including sweep funds. This is\r\n   * required field according to the OFX spec.\r\n   *\r\n   * @return the available cash balance\r\n   */\r\n  public getAvailableCash(): number {\r\n    return this.availableCash;\r\n  }\r\n\r\n  /**\r\n   * Sets the available cash balance across all sub-accounts, including sweep funds. This is\r\n   * required field according to the OFX spec.\r\n   *\r\n   * @param availableCash the available cash balance\r\n   */\r\n  public setAvailableCash(availableCash: number): void {\r\n    this.availableCash = availableCash;\r\n  }\r\n\r\n  /**\r\n   * Gets the margin account balance. A positive balance indicates a positive cash balance, while\r\n   * a negative balance indicates the customer borrowed funds. This is a required field according\r\n   * to the OFX spec.\r\n   *\r\n   * @return the margin account balance\r\n   */\r\n  public getMarginBalance(): number {\r\n    return this.marginBalance;\r\n  }\r\n\r\n  /**\r\n   * Sets the margin account balance. A positive balance indicates a positive cash balance, while\r\n   * a negative balance indicates the customer borrowed funds. This is a required field according\r\n   * to the OFX spec.\r\n   *\r\n   * @param marginBalance the margin account balance\r\n   */\r\n  public setMarginBalance(marginBalance: number): void {\r\n    this.marginBalance = marginBalance;\r\n  }\r\n\r\n  /**\r\n   * Gets the market value of all short positions. This is a positive balance. This is a required\r\n   * field according to the OFX spec.\r\n   *\r\n   * @return the market value of all short positions\r\n   */\r\n  public getShortBalance(): number {\r\n    return this.shortBalance;\r\n  }\r\n\r\n  /**\r\n   * Sets the market value of all short positions. This is a positive balance. This is a required\r\n   * field according to the OFX spec.\r\n   *\r\n   * @param shortBalance the market value of all short positions\r\n   */\r\n  public setShortBalance(shortBalance: number): void {\r\n    this.shortBalance = shortBalance;\r\n  }\r\n\r\n  /**\r\n   * Gets the buying power amount. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the buying power\r\n   */\r\n  public getBuyingPower(): number {\r\n    return this.buyingPower;\r\n  }\r\n\r\n  /**\r\n   * Sets the buying power amount. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param buyingPower the buying power\r\n   */\r\n  public setBuyingPower(buyingPower: number): void {\r\n    this.buyingPower = buyingPower;\r\n  }\r\n\r\n  /**\r\n   * Gets the investment balance list. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the investment balance list\r\n   */\r\n  public getBalanceList(): BalanceList {\r\n    return this.balanceList;\r\n  }\r\n\r\n  /**\r\n   * Sets the investment balance list. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param balanceList the investment balance list\r\n   */\r\n  public setBalanceList(balanceList: BalanceList): void {\r\n    this.balanceList = balanceList;\r\n  }\r\n}\r\n\r\nAggregate_add(InvestmentBalance, \"INVBAL\");\r\nElement_add(InvestmentBalance, { name: \"AVAILCASH\", required: true, order: 10, type: Number, read: InvestmentBalance.prototype.getAvailableCash, write: InvestmentBalance.prototype.setAvailableCash });\r\nElement_add(InvestmentBalance, { name: \"MARGINBALANCE\", required: true, order: 20, type: Number, read: InvestmentBalance.prototype.getMarginBalance, write: InvestmentBalance.prototype.setMarginBalance });\r\nElement_add(InvestmentBalance, { name: \"SHORTBALANCE\", required: true, order: 30, type: Number, read: InvestmentBalance.prototype.getShortBalance, write: InvestmentBalance.prototype.setShortBalance });\r\nElement_add(InvestmentBalance, { name: \"BUYPOWER\", order: 40, type: Number, read: InvestmentBalance.prototype.getBuyingPower, write: InvestmentBalance.prototype.setBuyingPower });\r\nChildAggregate_add(InvestmentBalance, { order: 50, type: BalanceList, read: InvestmentBalance.prototype.getBalanceList, write: InvestmentBalance.prototype.setBalanceList });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\r\n\r\n\r\n/**\r\n * Base class for all investment transactions.\r\n * <br>\r\n * This class exposes a read-only view of the flattened aggregates that are\r\n * common to all investment transactions as a convenience to application\r\n * developers who may not find the ofx aggregation model intuitive.\r\n */\r\nexport abstract class BaseInvestmentTransaction {\r\n\r\n  private transactionType: InvestmentTransactionType;\r\n\r\n  constructor(transactionType: InvestmentTransactionType) {\r\n    this.transactionType = transactionType;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of transaction.\r\n   *\r\n   * @return the type of transaction\r\n   */\r\n  public getTransactionType(): InvestmentTransactionType {\r\n    return this.transactionType;\r\n  }\r\n\r\n  /**\r\n   * Gets the {@link InvestmentTransaction} aggregate.\r\n   *\r\n   * @return the {@link InvestmentTransaction} aggregate\r\n   */\r\n  public abstract getInvestmentTransaction(): InvestmentTransaction;\r\n\r\n  /**\r\n   * Gets the unique financial institution assigned transaction id. This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the financial institution asssigned transaction id\r\n   */\r\n  public getTransactionId(): string {\r\n    return this.getInvestmentTransaction().getTransactionId();\r\n  }\r\n\r\n  /**\r\n   * Gets the server assigned transaction id. This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the server assigned transaction id\r\n   */\r\n  public getServerId(): string {\r\n    return this.getInvestmentTransaction().getServerId();\r\n  }\r\n\r\n  /**\r\n   * Gets the trade date of the transaction. For stock splits, this is the\r\n   * day of record. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the trade date\r\n   */\r\n  public getTradeDate(): Date {\r\n    return this.getInvestmentTransaction().getTradeDate();\r\n  }\r\n\r\n  /**\r\n   * Gets the settlement date of the transaction. For stock splits, this is the\r\n   * day of of execution. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the trade date\r\n   */\r\n  public getSettlementDate(): Date {\r\n    return this.getInvestmentTransaction().getSettlementDate();\r\n  }\r\n\r\n  /**\r\n   * For a reveral transaction, gets the financial institution assigned\r\n   * transaction id for the transaction being revesed.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the transaction id of the transaction being reversed\r\n   */\r\n  public getReversalTransactionId(): string {\r\n    return this.getInvestmentTransaction().getReversalTransactionId();\r\n  }\r\n\r\n  /**\r\n   * Gets the memo associated with the transaction. This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the memo\r\n   */\r\n  public getMemo(): string {\r\n    return this.getInvestmentTransaction().getMemo();\r\n  }\r\n}\r\n","import { Transaction } from \"../../common/Transaction\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Bank transactions that are part of an investment account statement. Wraps a {@link Transaction}.\r\n * @see \"Section 13.9.2.3, OFX Spec\"\r\n */\r\nexport class InvestmentBankTransaction {\r\n\r\n  private transaction: Transaction;\r\n  private subAccountFund: string;\r\n\r\n  /**\r\n   * Gets the wrapped transaction aggregate.\r\n   * @return the wrapped transaction\r\n   */\r\n  public getTransaction(): Transaction {\r\n    return this.transaction;\r\n  }\r\n\r\n  /**\r\n   * Sets the wrapped transaction aggregate.\r\n   * @param transaction the wrapped transaction\r\n   */\r\n  public setTransaction(transaction: Transaction): void {\r\n    this.transaction = transaction;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n   *\r\n   * @return the sub account fund for the transaction\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n   *\r\n   * @param subAccountFund the sub account fund for the transaction\r\n   */\r\n  public setSubAccountFund(subAccountFund: string): void {\r\n    this.subAccountFund = subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentBankTransaction, \"INVBANKTRAN\" );\r\nChildAggregate_add(InvestmentBankTransaction, { order: 10, type: Transaction, read: InvestmentBankTransaction.prototype.getTransaction, write: InvestmentBankTransaction.prototype.setTransaction });\r\nElement_add(InvestmentBankTransaction, { name: \"SUBACCTFUND\", required: true, order: 20, type: String, read: InvestmentBankTransaction.prototype.getSubAccountFund, write: InvestmentBankTransaction.prototype.setSubAccountFund });\r\n","import { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\r\nimport { InvestmentBankTransaction } from \"./InvestmentBankTransaction\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * The transaction list aggregate.\r\n * @see \"Section 13.9.1.2, OFX Spec\"\r\n */\r\nexport class InvestmentTransactionList {\r\n  private start: Date;\r\n  private end: Date;\r\n  private transactions: Array<BaseInvestmentTransaction>;\r\n  private bankTransactions: Array<InvestmentBankTransaction>;\r\n\r\n  /**\r\n   * Gets the start date. This is a required field according to the OFX spec.\r\n   *\r\n   * @return The start date\r\n   */\r\n  public getStart(): Date {\r\n    return this.start;\r\n  }\r\n\r\n  /**\r\n   * Sets the start date. This is a required field according to the OFX spec.\r\n   *\r\n   * @param start The start date\r\n   */\r\n  public setStart(start: Date): void {\r\n    this.start = start;\r\n  }\r\n\r\n  /**\r\n   * Gets the end date. This is a required field according to the OFX spec.\r\n   *\r\n   * @return he end date\r\n   */\r\n  public getEnd(): Date {\r\n    return this.end;\r\n  }\r\n\r\n  /**\r\n   * Sets the end date. This is a required field according to the OFX spec.\r\n   *\r\n   * @param end the end date\r\n   */\r\n  public setEnd(end: Date): void {\r\n    this.end = end;\r\n  }\r\n\r\n  /**\r\n   * Gets the investment transaction list. This is a heterogenous list of different types of\r\n   * transactions returned in the order the brokerage provides them.\r\n   *\r\n   * @return the investment transaction list\r\n   */\r\n  public getInvestmentTransactions(): Array<BaseInvestmentTransaction> {\r\n    return this.transactions;\r\n  }\r\n\r\n  /**\r\n   * Sets the investment transaction list. This is a heterogenous list of different types of\r\n   * transactions returned in the order the brokerage provides them.\r\n   *\r\n   * @param transactions the investment transaction list\r\n   */\r\n  public setInvestmentTransactions(transactions: Array<BaseInvestmentTransaction>): void {\r\n    this.transactions = transactions;\r\n  }\r\n\r\n  /**\r\n   * Gets the bank transaction list.\r\n   *\r\n   * @return the bank transaction list\r\n   */\r\n  public getBankTransactions(): Array<InvestmentBankTransaction> {\r\n    return this.bankTransactions;\r\n  }\r\n\r\n  /**\r\n   * Sets the bank transaction list.\r\n   *\r\n   * @param bankTransactions the bank transaction list\r\n   */\r\n  public setBankTransactions(bankTransactions: Array<InvestmentBankTransaction>): void {\r\n    this.bankTransactions = bankTransactions;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentTransactionList, \"INVTRANLIST\" );\r\nElement_add(InvestmentTransactionList, { name: \"DTSTART\", required: true, order: 0, type: Date, read: InvestmentTransactionList.prototype.getStart, write: InvestmentTransactionList.prototype.setStart });\r\nElement_add(InvestmentTransactionList, { name: \"DTEND\", required: true, order: 10, type: Date, read: InvestmentTransactionList.prototype.getEnd, write: InvestmentTransactionList.prototype.setEnd });\r\nChildAggregate_add(InvestmentTransactionList, { order: 20, type: Array, collectionEntryType: BaseInvestmentTransaction, read: InvestmentTransactionList.prototype.getInvestmentTransactions, write: InvestmentTransactionList.prototype.setInvestmentTransactions });\r\nChildAggregate_add(InvestmentTransactionList, { order: 30, type: Array, collectionEntryType: InvestmentBankTransaction, read: InvestmentTransactionList.prototype.getBankTransactions, write: InvestmentTransactionList.prototype.setBankTransactions });\r\n","import { StatementResponse } from \"../../common/StatementResponse\";\r\nimport { InvestmentAccountDetails } from \"../accounts/InvestmentAccountDetails\";\r\nimport { InvestmentTransactionList } from \"../transactions/InvestmentTransactionList\";\r\nimport { InvestmentPositionList } from \"../positions/InvestmentPositionList\";\r\nimport { InvestmentBalance } from \"./InvestmentBalance\";\r\nimport { SecurityList } from \"../../seclist/SecurityList\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Aggregate for the investment statement download response.\r\n * @see \"Section 13.9.2.2, OFX Spec\"\r\n */\r\nexport class InvestmentStatementResponse extends StatementResponse {\r\n\r\n  private dateOfStatement: Date;\r\n  private account: InvestmentAccountDetails;\r\n  private investmentTransactionList: InvestmentTransactionList;\r\n  private positionList: InvestmentPositionList;\r\n  private accountBalance: InvestmentBalance;\r\n\r\n  // This is not actually technically part of the INVSTMTRS, but according to Section 13.8.4,\r\n  // OFX spec, this aggregate can appear in a statement response as part of the SECLISTMSGSRQV1\r\n  // message set even when it wasn't requested. We include it here to make it accessible as part of\r\n  // the AccountStatement\r\n  private securityList: SecurityList;\r\n\r\n  /**\r\n   * Gets the name of the response message.\r\n   *\r\n   * @return the name of the response message\r\n   */\r\n  //@Override\r\n  public getResponseMessageName(): string {\r\n    return \"investment statement\";\r\n  }\r\n\r\n  /**\r\n   * Gets the date and time for the statement download. This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @return the date and time for the statement download\r\n   */\r\n  public getDateOfStatement(): Date {\r\n    return this.dateOfStatement;\r\n  }\r\n\r\n  /**\r\n   * Sets the date and time for the statement download. This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @param dateOfStatement the date and time for the statement download\r\n   */\r\n  public setDateOfStatement(dateOfStatement: Date): void {\r\n    this.dateOfStatement = dateOfStatement;\r\n  }\r\n\r\n  /**\r\n   * Gets the account for the statement. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the account for the statement\r\n   */\r\n  public getAccount(): InvestmentAccountDetails {\r\n    return this.account;\r\n  }\r\n\r\n  /**\r\n   * Sets the account for the statement. This is a required field according to the OFX spec.\r\n   *\r\n   * @param account the account for the statement\r\n   */\r\n  public setAccount(account: InvestmentAccountDetails): void {\r\n    this.account = account;\r\n  }\r\n\r\n  /**\r\n   * Gets the transaction list aggregate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the transaction list aggregate\r\n   */\r\n  public getInvestmentTransactionList(): InvestmentTransactionList {\r\n    return this.investmentTransactionList;\r\n  }\r\n\r\n  /**\r\n   * Sets the transaction list aggregate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param transactionList the transaction list aggregate\r\n   */\r\n  public setInvestmentTransactionList(transactionList: InvestmentTransactionList): void {\r\n    this.investmentTransactionList = transactionList;\r\n  }\r\n\r\n  /**\r\n   * Gets the position list aggreate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the position list aggregate\r\n   */\r\n  public getPositionList(): InvestmentPositionList {\r\n    return this.positionList;\r\n  }\r\n\r\n  /**\r\n   * Sets the position list aggreate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param positionList the position list aggregate\r\n   */\r\n  public setPositionList(positionList: InvestmentPositionList): void {\r\n    this.positionList = positionList;\r\n  }\r\n\r\n  /**\r\n   * Gets the account balance. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the account balance\r\n   */\r\n  public getAccountBalance(): InvestmentBalance {\r\n    return this.accountBalance;\r\n  }\r\n\r\n  /**\r\n   * Sets the account balance. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param accountBalance the account balance\r\n   */\r\n  public setAccountBalance(accountBalance: InvestmentBalance): void {\r\n    this.accountBalance = accountBalance;\r\n  }\r\n\r\n  /**\r\n   * Gets the security list aggregate.\r\n   * <br>\r\n   * This is not actually technically part of the investment statement responsr aggregate, but\r\n   * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\r\n   * we provide it here for convenience.\r\n   *\r\n   * @return the security list aggregate\r\n   */\r\n  public getSecurityList(): SecurityList {\r\n    return this.securityList;\r\n  }\r\n\r\n  /**\r\n   * Sets the security list aggregate.\r\n   * <br>\r\n   * This is not actually technically part of the investment statement responsr aggregate, but\r\n   * according to Section 13.8.4, OFX spec, this aggregate can appear the overall response and\r\n   * we provide it here for convenience.\r\n   *\r\n   * @param securityList the security list aggregate\r\n   */\r\n  public setSecurityList(securityList: SecurityList): void {\r\n    this.securityList = securityList;\r\n  }\r\n}\r\n\r\nAggregate_add(InvestmentStatementResponse, \"INVSTMTRS\");\r\nElement_add(InvestmentStatementResponse, { name: \"DTASOF\", required: true, order: 60, type: Date, read: InvestmentStatementResponse.prototype.getDateOfStatement, write: InvestmentStatementResponse.prototype.setDateOfStatement });\r\nChildAggregate_add(InvestmentStatementResponse, { name:\"INVACCTFROM\", required: true, order: 10, type: InvestmentAccountDetails, read: InvestmentStatementResponse.prototype.getAccount, write: InvestmentStatementResponse.prototype.setAccount });\r\nChildAggregate_add(InvestmentStatementResponse, { order: 70, type: InvestmentTransactionList, read: InvestmentStatementResponse.prototype.getInvestmentTransactionList, write: InvestmentStatementResponse.prototype.setInvestmentTransactionList });\r\nChildAggregate_add(InvestmentStatementResponse, { order: 80, type: InvestmentPositionList, read: InvestmentStatementResponse.prototype.getPositionList, write: InvestmentStatementResponse.prototype.setPositionList });\r\nChildAggregate_add(InvestmentStatementResponse, { order: 90, type: InvestmentBalance, read: InvestmentStatementResponse.prototype.getAccountBalance, write: InvestmentStatementResponse.prototype.setAccountBalance });\r\n","import { InvestmentStatementResponse } from \"./InvestmentStatementResponse\";\r\nimport { TransactionWrappedResponseMessage } from \"../../TransactionWrappedResponseMessage\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Investment statement transaction response.\r\n * @see \"Section 13.9.2.1, OFX Spec\"\r\n */\r\nexport class InvestmentStatementResponseTransaction\r\n    extends TransactionWrappedResponseMessage<InvestmentStatementResponse> {\r\n\r\n  private message: InvestmentStatementResponse;\r\n\r\n  /**\r\n   * Gets the the statement response message.\r\n   *\r\n   * @return the statement response message.\r\n   */\r\n  public getMessage(): InvestmentStatementResponse {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * Sets the the statement response message.\r\n   *\r\n   * @param message the statement response message.\r\n   */\r\n  public setMessage(message: InvestmentStatementResponse): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): InvestmentStatementResponse {\r\n    return this.getMessage();\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentStatementResponseTransaction, \"INVSTMTTRNRS\" );\r\nChildAggregate_add(InvestmentStatementResponseTransaction, { required: true, order: 30, type: InvestmentStatementResponse, read: InvestmentStatementResponseTransaction.prototype.getMessage, write: InvestmentStatementResponseTransaction.prototype.setMessage });\r\n","import { MessageSetType } from \"../../MessageSetType\";\r\nimport { ResponseMessageSet } from \"../../ResponseMessageSet\";\r\nimport { InvestmentStatementResponseTransaction } from \"./InvestmentStatementResponseTransaction\";\r\nimport { ResponseMessage } from \"../../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Investment statement response message set.\r\n * @see \"Section 13.7.1.2.2, OFX Spec\"\r\n */\r\nexport class InvestmentStatementResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private statementResponses: Array<InvestmentStatementResponseTransaction>;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.investment;\r\n  }\r\n\r\n  /**\r\n   * Gets the statement response list. Most OFX files have a single statement response.\r\n   *\r\n   * @return the statement response list\r\n   */\r\n  public getStatementResponses(): Array<InvestmentStatementResponseTransaction> {\r\n    return this.statementResponses;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets the statement reponse list. Most OFX files have a single statement response.\r\n   *\r\n   * @param statementResponses the statement response list\r\n   */\r\n  public setStatementResponses(statementResponses: Array<InvestmentStatementResponseTransaction>): void {\r\n    this.statementResponses = statementResponses;\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the first statement response. Use getStatementResponses() if you are expecting multiple\r\n   * responses.\r\n   *\r\n   * @return the first investment statement response.\r\n   */\r\n  public getStatementResponse(): InvestmentStatementResponseTransaction {\r\n    return this.statementResponses == null || this.statementResponses.length == 0 ? null : this.statementResponses[0];\r\n  }\r\n\r\n  /**\r\n   * Sets the statement response if there is a single response.\r\n   *\r\n   * @param statementResponse The statement response.\r\n   */\r\n  public setStatementResponse(statementResponse: InvestmentStatementResponseTransaction): void {\r\n    this.statementResponses = [statementResponse];\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    return this.statementResponses;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentStatementResponseMessageSet, \"INVSTMTMSGSRSV1\" );\r\nChildAggregate_add(InvestmentStatementResponseMessageSet, { order: 0, type: Array, collectionEntryType: InvestmentStatementResponseTransaction, read: InvestmentStatementResponseMessageSet.prototype.getStatementResponses, write: InvestmentStatementResponseMessageSet.prototype.setStatementResponses });\r\n","import { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Investment transaction aggregate (\"INVTRAN\").\r\n * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n */\r\nexport class InvestmentTransaction {\r\n\r\n  private transactionId: string;\r\n  private serverId: string;\r\n  private tradeDate: Date;\r\n  private settlementDate: Date;\r\n  private reversalTransactionId: string;\r\n  private memo: string;\r\n\r\n  /**\r\n   * Gets the unique financial institution assigned transaction id. This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the financial institution asssigned transaction id\r\n   */\r\n  public getTransactionId(): string {\r\n    return this.transactionId;\r\n  }\r\n\r\n  /**\r\n   * Sets the unique financial institution assigned transaction id. This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @param transactionId the financial institution asssigned transaction id\r\n   */\r\n  public setTransactionId(transactionId: string): void {\r\n    this.transactionId = transactionId;\r\n  }\r\n\r\n  /**\r\n   * Gets the server assigned transaction id. This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the server assigned transaction id\r\n   */\r\n  public getServerId(): string {\r\n    return this.serverId;\r\n  }\r\n\r\n  /**\r\n   * Sets the server assigned transaction id. This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @param serverId the server assigned transaction id\r\n   */\r\n  public setServerId(serverId: string): void {\r\n    this.serverId = serverId;\r\n  }\r\n\r\n  /**\r\n   * Gets the trade date of the transaction. For stock splits, this is the\r\n   * day of record. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the trade date\r\n   */\r\n  public getTradeDate(): Date {\r\n    return this.tradeDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the trade date of the transaction. For stock splits, this is the\r\n   * day of record. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @param tradeDate the trade date\r\n   */\r\n  public setTradeDate(tradeDate: Date): void {\r\n    this.tradeDate = tradeDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the settlement date of the transaction. For stock splits, this is the\r\n   * day of of execution. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the trade date\r\n   */\r\n  public getSettlementDate(): Date {\r\n    return this.settlementDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the settlement date of the transaction. For stock splits, this is the\r\n   * day of of execution. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @param settlementDate the trade date\r\n   */\r\n  public setSettlementDate(settlementDate: Date): void {\r\n    this.settlementDate = settlementDate;\r\n  }\r\n\r\n  /**\r\n   * For a reveral transaction, gets the financial institution assigned\r\n   * transaction id for the transaction being revesed.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the transaction id of the transaction being reversed\r\n   */\r\n  public getReversalTransactionId(): string {\r\n    return this.reversalTransactionId;\r\n  }\r\n\r\n  /**\r\n   * For a reveral transaction, gets the financial institution assigned\r\n   * transaction id for the transaction being revesed.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @param reversalTransactionId the transaction id of the transaction being reversed\r\n   */\r\n  public setReversalTransactionId(reversalTransactionId: string): void {\r\n    this.reversalTransactionId = reversalTransactionId;\r\n  }\r\n\r\n  /**\r\n   * Gets the memo associated with the transaction. This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @return the memo\r\n   */\r\n  public getMemo(): string {\r\n    return this.memo;\r\n  }\r\n\r\n  /**\r\n   * Sets the memo associated with the transaction. This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.1, OFX Spec\"\r\n   *\r\n   * @param memo the memo\r\n   */\r\n  public setMemo(memo: string): void {\r\n    this.memo = memo;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentTransaction, \"INVTRAN\" );\r\nElement_add(InvestmentTransaction, { name: \"FITID\", required: true, order: 0, type: String, read: InvestmentTransaction.prototype.getTransactionId, write: InvestmentTransaction.prototype.setTransactionId });\r\nElement_add(InvestmentTransaction, { name: \"SRVRTID\", order: 10, type: String, read: InvestmentTransaction.prototype.getServerId, write: InvestmentTransaction.prototype.setServerId });\r\nElement_add(InvestmentTransaction, { name: \"DTTRADE\", required: true, order: 20, type: Date, read: InvestmentTransaction.prototype.getTradeDate, write: InvestmentTransaction.prototype.setTradeDate });\r\nElement_add(InvestmentTransaction, { name: \"DTSETTLE\", order: 30, type: Date, read: InvestmentTransaction.prototype.getSettlementDate, write: InvestmentTransaction.prototype.setSettlementDate });\r\nElement_add(InvestmentTransaction, { name: \"REVERSALFITID\", order: 40, type: String, read: InvestmentTransaction.prototype.getReversalTransactionId, write: InvestmentTransaction.prototype.setReversalTransactionId });\r\nElement_add(InvestmentTransaction, { name: \"MEMO\", order: 50, type: String, read: InvestmentTransaction.prototype.getMemo, write: InvestmentTransaction.prototype.setMemo });\r\n","import { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Original currency aggregate (\"ORIGCURRENCY\"). For investment transactions in other currencies,\r\n * the financial institution can report the transaction as converted into the default currency\r\n * and then include this child aggregate to report what the original currency was and what the\r\n * rate of conversion was.\r\n * @see \"Section 5.2, OFX Spec\"\r\n */\r\nexport class OriginalCurrency {\r\n\r\n  private currencyRate: number;\r\n  private currencyCode: string;\r\n\r\n  /**\r\n   * Gets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\r\n   * the transaction response) to \"CURSYM\" (the original currency code below).\r\n   *\r\n   * @return the currency rate\r\n   */\r\n  public getCurrencyRate(): number {\r\n    return this.currencyRate;\r\n  }\r\n\r\n  /**\r\n   * Sets the rate of currency conversion. This is the ratio of \"CURDEF\" (the default currency in\r\n   * the transaction response) to \"CURSYM\" (the original currency code below).\r\n   *\r\n   * @param currencyRate the currency rate\r\n   */\r\n  public setCurrencyRate(currencyRate: number): void {\r\n    this.currencyRate = currencyRate;\r\n  }\r\n\r\n  /**\r\n   * Gets the ISO-4217 3-letter currency identifier of the original currency.\r\n   * @see java.util.Currency#getCurrencyCode()\r\n   *\r\n   * @return the currency code\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the ISO-4217 3-letter currency identifier of the original currency.\r\n   * @see java.util.Currency#getCurrencyCode()\r\n   *\r\n   * @param currencyCode the currency code\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n  }\r\n}\r\n\r\nAggregate_add( OriginalCurrency, \"ORIGCURRENCY\" );\r\nElement_add(OriginalCurrency, { name: \"CURRATE\", required: true, order: 10, type: Number, read: OriginalCurrency.prototype.getCurrencyRate, write: OriginalCurrency.prototype.setCurrencyRate });\r\nElement_add(OriginalCurrency, { name: \"CURSYM\", required: true, order: 20, type: String, read: OriginalCurrency.prototype.getCurrencyCode, write: OriginalCurrency.prototype.setCurrencyCode });\r\n","import { InvestmentTransaction } from \"./InvestmentTransaction\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Buy investment transaction aggregate (\"INVBUY\").\r\n * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n */\r\nexport class BuyInvestmentTransaction {\r\n\r\n  private investmentTransaction: InvestmentTransaction;\r\n  private securityId: SecurityId;\r\n  private units: number;\r\n  private unitPrice: number;\r\n  private markup: number;\r\n  private commission: number;\r\n  private taxes: number;\r\n  private fees: number;\r\n  private load: number;\r\n  private total: number;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n  private subAccountSecurity: string;\r\n  private subAccountFund: string;\r\n\r\n  /**\r\n   * Gets the investment transaction child aggregate.\r\n   *\r\n   * @return the investment transaction child aggregate\r\n   */\r\n  public getInvestmentTransaction(): InvestmentTransaction {\r\n    return this.investmentTransaction;\r\n  }\r\n\r\n  /**\r\n   * Sets the investment transaction child aggregate.\r\n   *\r\n   * @param investmentTransaction the investment transaction child aggregate\r\n   */\r\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\r\n    this.investmentTransaction = investmentTransaction;\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that was bought. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that was bought\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security that was bought. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security that was bought\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units of the security that was bought. For security-based actions other\r\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the number of units purchased.\r\n   */\r\n  public getUnits(): number {\r\n    return this.units;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units of the security that was bought. For security-based actions other\r\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param units the number of units purchased.\r\n   */\r\n  public setUnits(units: number): void {\r\n    this.units = units;\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param unitPrice the per unit price\r\n   */\r\n  public setUnitPrice(unitPrice: number): void {\r\n    this.unitPrice = unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the portion of the unit price that is attributed to the dealer markup. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit markeup price\r\n   */\r\n  public getMarkup(): number {\r\n    return this.markup;\r\n  }\r\n\r\n  /**\r\n   * Sets the portion of the unit price that is attributed to the dealer markup. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param markup the per unit markeup price\r\n   */\r\n  public setMarkup(markup: number): void {\r\n    this.markup = markup;\r\n  }\r\n\r\n  /**\r\n   * Gets the transaction commission for the purchase. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction commision\r\n   */\r\n  public getCommission(): number {\r\n    return this.commission;\r\n  }\r\n\r\n  /**\r\n   * Sets the transaction commission for the purchase. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param commission the transaction commision\r\n   */\r\n  public setCommission(commission: number): void {\r\n    this.commission = commission;\r\n  }\r\n\r\n  /**\r\n   * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction taxes\r\n   */\r\n  public getTaxes(): number {\r\n    return this.taxes;\r\n  }\r\n\r\n  /**\r\n   * Sets the taxes for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param taxes the transaction taxes\r\n   */\r\n  public setTaxes(taxes: number): void {\r\n    this.taxes = taxes;\r\n  }\r\n\r\n  /**\r\n   * Gets the fees for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction fees\r\n   */\r\n  public getFees(): number {\r\n    return this.fees;\r\n  }\r\n\r\n  /**\r\n   * Sets the fees for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param fees the transaction fees\r\n   */\r\n  public setFees(fees: number): void {\r\n    this.fees = fees;\r\n  }\r\n\r\n  /**\r\n   * Gets the load for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the load\r\n   */\r\n  public getLoad(): number {\r\n    return this.load;\r\n  }\r\n\r\n  /**\r\n   * Sets the load for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param load the load\r\n   */\r\n  public setLoad(load: number): void {\r\n    this.load = load;\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the purchase. Should be equal to\r\n   * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\r\n   * spec. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total for the purchase. Should be equal to\r\n   * (units * (unitPrice + markup)) + (commision + fees + taxes) according to the OFX\r\n   * spec. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction.\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the currency code for the transaction. Only one of currency code or original currency\r\n   * info may be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code for the transaction.\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param originalCurrencyInfo the original currency info for the transaction\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrencyInfo;\r\n    this.currencyCode = null;\r\n  }\r\n\r\n /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n    * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n    *\r\n    * @param subAccountSecurity the sub account type\r\n    */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n    this.subAccountSecurity = subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAcctFund the sub account fund\r\n   */\r\n  public setSubAccountFund(subAcctFund: string): void {\r\n    this.subAccountFund = subAcctFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type or null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n}\r\n\r\nAggregate_add( BuyInvestmentTransaction, \"INVBUY\" );\r\nChildAggregate_add(BuyInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: BuyInvestmentTransaction.prototype.getInvestmentTransaction, write: BuyInvestmentTransaction.prototype.setInvestmentTransaction });\r\nChildAggregate_add(BuyInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: BuyInvestmentTransaction.prototype.getSecurityId, write: BuyInvestmentTransaction.prototype.setSecurityId });\r\nElement_add(BuyInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: BuyInvestmentTransaction.prototype.getUnits, write: BuyInvestmentTransaction.prototype.setUnits });\r\nElement_add(BuyInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: BuyInvestmentTransaction.prototype.getUnitPrice, write: BuyInvestmentTransaction.prototype.setUnitPrice });\r\nElement_add(BuyInvestmentTransaction, { name: \"MARKUP\", order: 50, type: Number, read: BuyInvestmentTransaction.prototype.getMarkup, write: BuyInvestmentTransaction.prototype.setMarkup });\r\nElement_add(BuyInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: BuyInvestmentTransaction.prototype.getCommission, write: BuyInvestmentTransaction.prototype.setCommission });\r\nElement_add(BuyInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: BuyInvestmentTransaction.prototype.getTaxes, write: BuyInvestmentTransaction.prototype.setTaxes });\r\nElement_add(BuyInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: BuyInvestmentTransaction.prototype.getFees, write: BuyInvestmentTransaction.prototype.setFees });\r\nElement_add(BuyInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: BuyInvestmentTransaction.prototype.getLoad, write: BuyInvestmentTransaction.prototype.setLoad });\r\nElement_add(BuyInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: BuyInvestmentTransaction.prototype.getTotal, write: BuyInvestmentTransaction.prototype.setTotal });\r\nElement_add(BuyInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: BuyInvestmentTransaction.prototype.getCurrencyCode, write: BuyInvestmentTransaction.prototype.setCurrencyCode });\r\nChildAggregate_add(BuyInvestmentTransaction, { order: 120, type: OriginalCurrency, read: BuyInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: BuyInvestmentTransaction.prototype.setOriginalCurrencyInfo });\r\nElement_add(BuyInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountSecurity, write: BuyInvestmentTransaction.prototype.setSubAccountSecurity });\r\nElement_add(BuyInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: BuyInvestmentTransaction.prototype.getSubAccountFund, write: BuyInvestmentTransaction.prototype.setSubAccountFund });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\r\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\r\nimport { BuyInvestmentTransaction } from \"./BuyInvestmentTransaction\";\r\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Base class for all investment transactions for buying securities.\r\n * <br>\r\n * This class exposes a read-only view of the flattened aggregates that are\r\n * common to all buy investment transactions as a convenience to application\r\n * developers who may not find the ofx aggregation model intuitive.\r\n */\r\nexport abstract class BaseBuyInvestmentTransaction extends BaseInvestmentTransaction\r\n    implements TransactionWithSecurity {\r\n\r\n  private buyInvestment: BuyInvestmentTransaction;\r\n\r\n  constructor(transactionType: InvestmentTransactionType) {\r\n    super(transactionType);\r\n  }\r\n\r\n  /**\r\n   * Gets the buy investment transaction child aggregate.\r\n   *\r\n   * @return the buy investment transaction child aggregate\r\n   */\r\n  public getBuyInvestment(): BuyInvestmentTransaction {\r\n    return this.buyInvestment;\r\n  }\r\n\r\n  /**\r\n   * Sets the buy investment transaction child aggregate.\r\n   *\r\n   * @param buyInvestment the buy investment transaction child aggregate\r\n   */\r\n  public setBuyInvestment(buyInvestment: BuyInvestmentTransaction): void {\r\n    this.buyInvestment = buyInvestment;\r\n  }\r\n\r\n  /**\r\n   * Gets the investment transaction aggregate.\r\n   *\r\n   * @return the investment transaction aggregate\r\n   */\r\n  // @Overridden\r\n  public getInvestmentTransaction(): InvestmentTransaction {\r\n    return this.getBuyInvestment().getInvestmentTransaction();\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that was bought. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that was bought\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.getBuyInvestment().getSecurityId();\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units of the security that was bought. For security-based actions other\r\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the number of units purchased.\r\n   */\r\n  public getUnits(): number {\r\n    return this.getBuyInvestment().getUnits();\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.getBuyInvestment().getUnitPrice();\r\n  }\r\n\r\n  /**\r\n   * Gets the portion of the unit price that is attributed to the dealer markup. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit markeup price\r\n   */\r\n  public getMarkup(): number {\r\n    return this.getBuyInvestment().getMarkup();\r\n  }\r\n\r\n  /**\r\n   * Gets the transaction commission for the purchase. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction commision\r\n   */\r\n  public getCommission(): number {\r\n    return this.getBuyInvestment().getCommission();\r\n  }\r\n\r\n  /**\r\n   * Gets the taxes for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction taxes\r\n   */\r\n  public getTaxes(): number {\r\n    return this.getBuyInvestment().getTaxes();\r\n  }\r\n\r\n  /**\r\n   * Gets the fees for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction fees\r\n   */\r\n  public getFees(): number {\r\n    return this.getBuyInvestment().getFees();\r\n  }\r\n\r\n  /**\r\n   * Gets the load for the purchase. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the load\r\n   */\r\n  public getLoad(): number {\r\n    return this.getBuyInvestment().getLoad();\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the purchase. Should be equal to\r\n   * (units * (unitPrice + markup)) + (commision + fees + load + taxes) according to the OFX\r\n   * spec. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.getBuyInvestment().getTotal();\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.getBuyInvestment().getCurrencyCode();\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.getBuyInvestment().getOriginalCurrencyInfo();\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.getBuyInvestment().getSubAccountSecurity();\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the money came from. (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.getBuyInvestment().getSubAccountFund();\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type or null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n}\r\n\r\nChildAggregate_add(BaseBuyInvestmentTransaction, { order: 10, type: BuyInvestmentTransaction, read: BaseBuyInvestmentTransaction.prototype.getBuyInvestment, write: BaseBuyInvestmentTransaction.prototype.setBuyInvestment });\r\n","import { InvestmentTransaction } from \"./InvestmentTransaction\";\r\nimport { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\r\nimport { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Base class for investment transactions that aren't buys or sales..\r\n * <br>\r\n * This class exposes a read-only view of the flattened aggregates that are\r\n * common to all investment transactions as a convenience to application\r\n * developers who may not find the ofx aggregation model intuitive.\r\n */\r\nexport class BaseOtherInvestmentTransaction extends BaseInvestmentTransaction {\r\n\r\n  private investmentTransaction: InvestmentTransaction;\r\n\r\n  constructor(transactionType: InvestmentTransactionType) {\r\n    super(transactionType);\r\n  }\r\n\r\n  /**\r\n   * Gets the {@link InvestmentTransaction} aggregate.\r\n   *\r\n   * @return the {@link InvestmentTransaction} aggregate\r\n   */\r\n  // @Override\r\n  public getInvestmentTransaction(): InvestmentTransaction {\r\n    return this.investmentTransaction;\r\n  }\r\n\r\n  /**\r\n   * Sets the {@link InvestmentTransaction} aggregate.\r\n   *\r\n   * @param investmentTransaction the {@link InvestmentTransaction} aggregate\r\n   */\r\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\r\n    this.investmentTransaction = investmentTransaction;\r\n  }\r\n}\r\n\r\nChildAggregate_add(BaseOtherInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: BaseOtherInvestmentTransaction.prototype.getInvestmentTransaction, write: BaseOtherInvestmentTransaction.prototype.setInvestmentTransaction });\r\n","import { InvestmentTransaction } from \"./InvestmentTransaction\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Sell investment transaction aggregate (\"INVSELL\").\r\n * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n */\r\nexport class SellInvestmentTransaction {\r\n  private investmentTransaction: InvestmentTransaction;\r\n  private securityId: SecurityId;\r\n  private units: number;\r\n  private unitPrice: number;\r\n  private markdown: number;\r\n  private commission: number;\r\n  private taxes: number;\r\n  private fees: number;\r\n  private load: number;\r\n  private withholding: number;\r\n  private taxExempt: boolean;\r\n  private total: number;\r\n  private gain: number;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n  private subAccountSecurity: string;\r\n  private subAccountFund: string;\r\n  private loanId: string;\r\n  private stateWithholding: number;\r\n  private penalty: number;\r\n  private inv401kSource: string;\r\n\r\n  /**\r\n   * Gets the investment transaction child aggregate.\r\n   *\r\n   * @return the investment transaction child aggregate\r\n   */\r\n  public getInvestmentTransaction(): InvestmentTransaction {\r\n    return this.investmentTransaction;\r\n  }\r\n\r\n  /**\r\n   * Sets the investment transaction child aggregate.\r\n   *\r\n   * @param investmentTransaction the investment transaction child aggregate\r\n   */\r\n  public setInvestmentTransaction(investmentTransaction: InvestmentTransaction): void {\r\n    this.investmentTransaction = investmentTransaction;\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that was sold. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that was sold\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security that was sold. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security that was sold\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units of the security that was sold. For security-based actions other\r\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the number of units sold\r\n   */\r\n  public getUnits(): number {\r\n    return this.units;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units of the security that was sold. For security-based actions other\r\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param units the number of units sold\r\n   */\r\n  public setUnits(units: number): void {\r\n    this.units = units;\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param unitPrice the per unit price\r\n   */\r\n  public setUnitPrice(unitPrice: number): void {\r\n    this.unitPrice = unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit markedown price\r\n   */\r\n  public getMarkdown(): number {\r\n    return this.markdown;\r\n  }\r\n\r\n  /**\r\n   * Sets the portion of the unit price that is attributed to the dealer markdown. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param markdown the per unit markedown price\r\n   */\r\n  public setMarkdown(markdown: number): void {\r\n    this.markdown = markdown;\r\n  }\r\n\r\n  /**\r\n   * Gets the transaction commission for the sale. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction commision\r\n   */\r\n  public getCommission(): number {\r\n    return this.commission;\r\n  }\r\n\r\n  /**\r\n   * Sets the transaction commission for the sale. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param commission the transaction commision\r\n   */\r\n  public setCommission(commission: number): void {\r\n    this.commission = commission;\r\n  }\r\n\r\n  /**\r\n   * Gets the taxes for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction taxes\r\n   */\r\n  public getTaxes(): number {\r\n    return this.taxes;\r\n  }\r\n\r\n  /**\r\n   * Sets the taxes for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param taxes the transaction taxes\r\n   */\r\n  public setTaxes(taxes: number): void {\r\n    this.taxes = taxes;\r\n  }\r\n\r\n  /**\r\n   * Gets the fees for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction fees\r\n   */\r\n  public getFees(): number {\r\n    return this.fees;\r\n  }\r\n\r\n  /**\r\n   * Sets the fees for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param fees the transaction fees\r\n   */\r\n  public setFees(fees: number): void {\r\n    this.fees = fees;\r\n  }\r\n\r\n  /**\r\n   * Gets the load for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the load\r\n   */\r\n  public getLoad(): number {\r\n    return this.load;\r\n  }\r\n\r\n  /**\r\n   * Sets the load for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param load the load\r\n   */\r\n  public setLoad(load: number): void {\r\n    this.load = load;\r\n  }\r\n\r\n  /**\r\n   * Gets the withholding for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the withholding\r\n   */\r\n  public getWithholding(): number {\r\n    return this.withholding;\r\n  }\r\n\r\n  /**\r\n   * Sets the withholding for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param withholding the withholding\r\n   */\r\n  public setWithholding(withholding: number): void {\r\n    this.withholding = withholding;\r\n  }\r\n\r\n  /**\r\n   * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return whether the transaction was tax exempt\r\n   */\r\n  public getTaxExempt(): boolean {\r\n    return this.taxExempt;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the sale was tax exempt. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param taxExempt whether the transaction was tax exempt\r\n   */\r\n  public setTaxExempt(taxExempt: boolean): void {\r\n    this.taxExempt = taxExempt;\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the sale. Should be equal to\r\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\r\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total for the sale. Should be equal to\r\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\r\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n\r\n  /**\r\n   * Gets the gain sale. This is aan optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the gain for the sale\r\n   */\r\n  public getGain(): number {\r\n    return this.gain;\r\n  }\r\n\r\n  /**\r\n   * Sets the gain sale. This is aan optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param gain the gain for the sale\r\n   */\r\n  public setGain(gain: number): void {\r\n    this.gain = gain;\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * sets the currency code for the transaction. Only one of currency code or original currency\r\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code for the transaction\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param originalCurrencyInfo the original currency info for the transaction\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrencyInfo;\r\n    this.currencyCode = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountSecurity the sub account type\r\n   */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n    this.subAccountSecurity = subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the security is being transfered from\r\n   * (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type that the security is being transfered from\r\n   * (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountFund the sub account fund\r\n   */\r\n  public setSubAccountFund(subAccountFund: string): void {\r\n    this.subAccountFund = subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the loan id\r\n   */\r\n  public getLoanId(): string {\r\n    return this.loanId;\r\n  }\r\n\r\n  /**\r\n   * Sets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param loanId the loan id\r\n   */\r\n  public setLoanId(loanId: string): void {\r\n    this.loanId = loanId;\r\n  }\r\n\r\n  /**\r\n   * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public getStateWithholding(): number {\r\n    return this.stateWithholding;\r\n  }\r\n\r\n  /**\r\n   * Sets the state withholding for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param stateWithholding the state withholding\r\n   */\r\n  public setStateWithholding(stateWithholding: number): void {\r\n    this.stateWithholding = stateWithholding;\r\n  }\r\n\r\n  /**\r\n   * Gets the penalty for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public getPenalty(): number {\r\n    return this.penalty;\r\n  }\r\n\r\n  /**\r\n   * Sets the penalty for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param penalty the state withholding\r\n   */\r\n  public setPenalty(penalty: number): void {\r\n    this.penalty = penalty;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the 401k source\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the 401k source\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401k source as one of the well-known types.\r\n   *\r\n   * @return the 401k source or null if its not one of the well-known types\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add( SellInvestmentTransaction, \"INVSELL\" );\r\nChildAggregate_add(SellInvestmentTransaction, { order: 10, type: InvestmentTransaction, read: SellInvestmentTransaction.prototype.getInvestmentTransaction, write: SellInvestmentTransaction.prototype.setInvestmentTransaction });\r\nChildAggregate_add(SellInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: SellInvestmentTransaction.prototype.getSecurityId, write: SellInvestmentTransaction.prototype.setSecurityId });\r\nElement_add(SellInvestmentTransaction, { name: \"UNITS\", required: true, order: 30, type: Number, read: SellInvestmentTransaction.prototype.getUnits, write: SellInvestmentTransaction.prototype.setUnits });\r\nElement_add(SellInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 40, type: Number, read: SellInvestmentTransaction.prototype.getUnitPrice, write: SellInvestmentTransaction.prototype.setUnitPrice });\r\nElement_add(SellInvestmentTransaction, { name: \"MARKDOWN\", order: 50, type: Number, read: SellInvestmentTransaction.prototype.getMarkdown, write: SellInvestmentTransaction.prototype.setMarkdown });\r\nElement_add(SellInvestmentTransaction, { name: \"COMMISSION\", order: 60, type: Number, read: SellInvestmentTransaction.prototype.getCommission, write: SellInvestmentTransaction.prototype.setCommission });\r\nElement_add(SellInvestmentTransaction, { name: \"TAXES\", order: 70, type: Number, read: SellInvestmentTransaction.prototype.getTaxes, write: SellInvestmentTransaction.prototype.setTaxes });\r\nElement_add(SellInvestmentTransaction, { name: \"FEES\", order: 80, type: Number, read: SellInvestmentTransaction.prototype.getFees, write: SellInvestmentTransaction.prototype.setFees });\r\nElement_add(SellInvestmentTransaction, { name: \"LOAD\", order: 90, type: Number, read: SellInvestmentTransaction.prototype.getLoad, write: SellInvestmentTransaction.prototype.setLoad });\r\nElement_add(SellInvestmentTransaction, { name: \"WITHHOLDING\", order: 93, type: Number, read: SellInvestmentTransaction.prototype.getWithholding, write: SellInvestmentTransaction.prototype.setWithholding });\r\nElement_add(SellInvestmentTransaction, { name: \"TAXEXEMPT\", order: 97, type: Boolean, read: SellInvestmentTransaction.prototype.getTaxExempt, write: SellInvestmentTransaction.prototype.setTaxExempt });\r\nElement_add(SellInvestmentTransaction, { name: \"TOTAL\", required: true, order: 100, type: Number, read: SellInvestmentTransaction.prototype.getTotal, write: SellInvestmentTransaction.prototype.setTotal });\r\nElement_add(SellInvestmentTransaction, { name: \"GAIN\", order: 105, type: Number, read: SellInvestmentTransaction.prototype.getGain, write: SellInvestmentTransaction.prototype.setGain });\r\nElement_add(SellInvestmentTransaction, { name: \"CURRENCY\", order: 110, type: String, read: SellInvestmentTransaction.prototype.getCurrencyCode, write: SellInvestmentTransaction.prototype.setCurrencyCode });\r\nElement_add(SellInvestmentTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: SellInvestmentTransaction.prototype.getOriginalCurrencyInfo, write: SellInvestmentTransaction.prototype.setOriginalCurrencyInfo });\r\nElement_add(SellInvestmentTransaction, { name: \"SUBACCTSEC\", order: 130, type: String, read: SellInvestmentTransaction.prototype.getSubAccountSecurity, write: SellInvestmentTransaction.prototype.setSubAccountSecurity });\r\nElement_add(SellInvestmentTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: SellInvestmentTransaction.prototype.getSubAccountFund, write: SellInvestmentTransaction.prototype.setSubAccountFund });\r\nElement_add(SellInvestmentTransaction, { name: \"LOANID\", order: 150, type: String, read: SellInvestmentTransaction.prototype.getLoanId, write: SellInvestmentTransaction.prototype.setLoanId });\r\nElement_add(SellInvestmentTransaction, { name: \"STATEWITHHOLDING\", order: 160, type: Number, read: SellInvestmentTransaction.prototype.getStateWithholding, write: SellInvestmentTransaction.prototype.setStateWithholding });\r\nElement_add(SellInvestmentTransaction, { name: \"PENALTY\", order: 170, type: Number, read: SellInvestmentTransaction.prototype.getPenalty, write: SellInvestmentTransaction.prototype.setPenalty });\r\nElement_add(SellInvestmentTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: SellInvestmentTransaction.prototype.get401kSource, write: SellInvestmentTransaction.prototype.set401kSource });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseInvestmentTransaction } from \"./BaseInvestmentTransaction\";\r\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\r\nimport { SellInvestmentTransaction } from \"./SellInvestmentTransaction\";\r\nimport { InvestmentTransaction } from \"./InvestmentTransaction\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Base class for all investment transactions for selling securities.\r\n * <br>\r\n * This class exposes a read-only view of the flattened aggregates that are\r\n * common to all sell investment transactions as a convenience to application\r\n * developers who may not find the ofx aggregation model intuitive.\r\n */\r\nexport abstract class BaseSellInvestmentTransaction extends BaseInvestmentTransaction\r\n    implements TransactionWithSecurity {\r\n\r\n  private sellInvestment: SellInvestmentTransaction;\r\n\r\n  constructor(transactionType: InvestmentTransactionType) {\r\n    super(transactionType);\r\n  }\r\n\r\n  /**\r\n   * Gets the sell investment transaction child aggregate.\r\n   *\r\n   * @return the sell investment transaction child aggregate\r\n   */\r\n  // @Override\r\n  public getSellInvestment(): SellInvestmentTransaction {\r\n    return this.sellInvestment;\r\n  }\r\n\r\n  /**\r\n   * Sets the sell investment transaction child aggregate.\r\n   *\r\n   * @param sellInvestment the sell investment transaction child aggregate\r\n   */\r\n  public setSellInvestment(sellInvestment: SellInvestmentTransaction): void {\r\n    this.sellInvestment = sellInvestment;\r\n  }\r\n\r\n  /**\r\n   * Gets the investment transaction aggregate.\r\n   *\r\n   * @return the investment transaction aggregate\r\n   */\r\n  // @Overridden\r\n  public getInvestmentTransaction(): InvestmentTransaction {\r\n    return this.getSellInvestment().getInvestmentTransaction();\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that was sold. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that was bought\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.getSellInvestment().getSecurityId();\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units of the security that was sold. For security-based actions other\r\n   * than stock splits, this is the quantity sold. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the number of units purchased.\r\n   */\r\n  public getUnits(): number {\r\n    return this.getSellInvestment().getUnits();\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.getSellInvestment().getUnitPrice();\r\n  }\r\n\r\n  /**\r\n   * Gets the portion of the unit price that is attributed to the dealer markdown. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit markedown price\r\n   */\r\n  public getMarkdown(): number {\r\n    return this.getSellInvestment().getMarkdown();\r\n  }\r\n\r\n  /**\r\n   * Gets the transaction commission for the sale. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction commision\r\n   */\r\n  public getCommission(): number {\r\n    return this.getSellInvestment().getCommission();\r\n  }\r\n\r\n  /**\r\n   * Gets the taxes for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction taxes\r\n   */\r\n  public getTaxes(): number {\r\n    return this.getSellInvestment().getTaxes();\r\n  }\r\n\r\n  /**\r\n   * Gets the fees for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction fees\r\n   */\r\n  public getFees(): number {\r\n    return this.getSellInvestment().getFees();\r\n  }\r\n\r\n  /**\r\n   * Gets the load for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the load\r\n   */\r\n  public getLoad(): number {\r\n    return this.getSellInvestment().getLoad();\r\n  }\r\n\r\n  /**\r\n   * Gets the withholding for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the withholding\r\n   */\r\n  public getWithholding(): number {\r\n    return this.getSellInvestment().getWithholding();\r\n  }\r\n\r\n  /**\r\n   * Gets whether the sale was tax exempt. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return whether the transaction was tax exempt\r\n   */\r\n  public getTaxExempt(): boolean {\r\n    return this.getSellInvestment().getTaxExempt();\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the sale. Should be equal to\r\n   * (units * (unitPrice + markdown)) + (commision + fees + load + taxes + penalty + withholding +\r\n   * statewithholding) according to the OFX spec. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.getSellInvestment().getTotal();\r\n  }\r\n\r\n  /**\r\n   * Gets the gain sale. This is aan optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the gain for the sale\r\n   */\r\n  public getGain(): number {\r\n    return this.getSellInvestment().getGain();\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction.\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.getSellInvestment().getCurrencyCode();\r\n  }\r\n\r\n  /**\r\n   * Gets the origianl currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency info for the transaction.\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.getSellInvestment().getOriginalCurrencyInfo();\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.getSellInvestment().getSubAccountSecurity();\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the money went to  (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.getSellInvestment().getSubAccountFund();\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the loan id if this transaction was due to a loan or loan repayment on a 401k. This is an\r\n   * optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the loan id\r\n   */\r\n  public getLoadId(): string {\r\n    return this.getSellInvestment().getLoanId();\r\n  }\r\n\r\n  /**\r\n   * Gets the state withholding for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public getStateWithholding(): number {\r\n    return this.getSellInvestment().getStateWithholding();\r\n  }\r\n\r\n  /**\r\n   * Gets the penalty for the sale. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public getPenalty(): number {\r\n    return this.getSellInvestment().getPenalty();\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the 401k source\r\n   */\r\n  public get401kSource(): string {\r\n    return this.getSellInvestment().get401kSource();\r\n  }\r\n\r\n  /**\r\n   * Gets the 401k source as one of the well-known types.\r\n   *\r\n   * @return the 401k source or null if its not one of the well-known types\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nChildAggregate_add(BaseSellInvestmentTransaction, { order: 10, type: SellInvestmentTransaction, read: BaseSellInvestmentTransaction.prototype.getSellInvestment, write: BaseSellInvestmentTransaction.prototype.setSellInvestment });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for buying debt (i.e. bonds, CDs, etc.,).\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class BuyDebtTransaction extends BaseBuyInvestmentTransaction {\r\n\r\n  private accruedInterest: number;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.BUY_DEBT);\r\n  }\r\n\r\n  /**\r\n   * Gets the amount of accrued interest on the debt. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the amount of accrued interest\r\n   */\r\n  public getAccruedInterest(): number {\r\n    return this.accruedInterest;\r\n  }\r\n\r\n  /**\r\n   * Sets the amount of accrued interest on the debt. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param accruedInterest the amount of accrued interest\r\n   */\r\n  public setAccruedInterest(accruedInterest: number): void {\r\n    this.accruedInterest = accruedInterest;\r\n  }\r\n}\r\n\r\nAggregate_add( BuyDebtTransaction, \"BUYDEBT\" );\r\nElement_add(BuyDebtTransaction, { name: \"ACCRDINT\", order: 20, type: Number, read: BuyDebtTransaction.prototype.getAccruedInterest, write: BuyDebtTransaction.prototype.setAccruedInterest });\r\n","\r\n/**\r\n * Type of purchase for stocks and mutual funds.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum BuyType {\r\n  BUY,\r\n  BUY_TO_COVER\r\n}\r\n\r\nexport function BuyType_fromOfx(ofxVal: string): BuyType {\r\n  if (\"BUY\" === ofxVal) {\r\n    return BuyType.BUY;\r\n  } else if (\"BUYTOCOVER\" === ofxVal) {\r\n    return BuyType.BUY_TO_COVER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\r\nimport { BuyType, BuyType_fromOfx } from \"./BuyType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for buying mutual funds.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class BuyMutualFundTransaction extends BaseBuyInvestmentTransaction {\r\n\r\n  private buyType: string;\r\n  private relatedTransactionId: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.BUY_MUTUAL_FUND);\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\r\n   * the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the buy type\r\n   */\r\n  public getBuyType(): string {\r\n    return this.buyType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field according to\r\n   * the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param buyType the buy type\r\n   */\r\n  public setBuyType(buyType: string): void {\r\n    this.buyType = buyType;\r\n  }\r\n\r\n  /**\r\n   * Gets the buy type as one of the well-known types.\r\n   *\r\n   * @return the type of purchase or null if it's not known\r\n   */\r\n  public getBuyTypeEnum(): BuyType {\r\n    return BuyType_fromOfx(this.buyType);\r\n  }\r\n\r\n  /**\r\n   * Gets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\r\n   * This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the related transaction id\r\n   */\r\n  public getRelatedTransactionId(): string {\r\n    return this.relatedTransactionId;\r\n  }\r\n\r\n  /**\r\n   * Sets any related transaction id for a mutual fund purchase (e.g. for a mutual fund exchange).\r\n   * This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param relatedTransactionId the related transaction id\r\n   */\r\n  public setRelatedTransactionId(relatedTransactionId: string): void {\r\n    this.relatedTransactionId = relatedTransactionId;\r\n  }\r\n}\r\n\r\nAggregate_add( BuyMutualFundTransaction, \"BUYMF\" );\r\nElement_add(BuyMutualFundTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyMutualFundTransaction.prototype.getBuyType, write: BuyMutualFundTransaction.prototype.setBuyType });\r\nElement_add(BuyMutualFundTransaction, { name: \"RELFITID\", order: 30, type: String, read: BuyMutualFundTransaction.prototype.getRelatedTransactionId, write: BuyMutualFundTransaction.prototype.setRelatedTransactionId });\r\n","\r\n/**\r\n * Type of purchase for options.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum OptionBuyType {\r\n  BUY_TO_OPEN,\r\n  BUY_TO_CLOSE\r\n}\r\n\r\nexport function OptionBuyType_fromOfx(ofxVal: string): OptionBuyType {\r\n  if (\"BUYTOOPEN\" === ofxVal) {\r\n    return OptionBuyType.BUY_TO_OPEN;\r\n  } else if (\"BUYTOCLOSE\" === ofxVal) {\r\n    return OptionBuyType.BUY_TO_CLOSE;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\r\nimport { OptionBuyType, OptionBuyType_fromOfx } from \"./OptionBuyType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for buying options.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class BuyOptionTransaction extends BaseBuyInvestmentTransaction {\r\n\r\n  private optionBuyType: string;\r\n  private sharesPerContact: number;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.BUY_OPTION);\r\n  }\r\n\r\n  /**\r\n   * Gets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the option buy type\r\n   */\r\n  public getOptionBuyType(): string {\r\n    return this.optionBuyType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of option purchase (i.e. \"BUYTOOPEN\" or \"BUYTOCLOSE\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param optionBuyType the option buy type\r\n   */\r\n  public setOptionBuyType(optionBuyType: string): void {\r\n    this.optionBuyType = optionBuyType;\r\n  }\r\n\r\n  /**\r\n   * Gets the option buy type as one of the well-known types.\r\n   *\r\n   * @return the type of purchase or null if it's not known\r\n   */\r\n  public getOptionBuyTypeEnum(): OptionBuyType {\r\n    return OptionBuyType_fromOfx(this.optionBuyType);\r\n  }\r\n\r\n  /**\r\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the number of shares per contact\r\n   */\r\n  public getSharesPerContract(): number {\r\n    return this.sharesPerContact;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param sharesPerContact the number of shares per contact\r\n   */\r\n  public setSharesPerContract(sharesPerContact: number): void {\r\n    this.sharesPerContact = sharesPerContact;\r\n  }\r\n}\r\n\r\nAggregate_add( BuyOptionTransaction, \"BUYOPT\" );\r\nElement_add(BuyOptionTransaction, { name: \"OPTBUYTYPE\", required: true, order: 20, type: String, read: BuyOptionTransaction.prototype.getOptionBuyType, write: BuyOptionTransaction.prototype.setOptionBuyType });\r\nElement_add(BuyOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: BuyOptionTransaction.prototype.getSharesPerContract, write: BuyOptionTransaction.prototype.setSharesPerContract });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\n\r\n/**\r\n * Transaction for buying other types of securities.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class BuyOtherTransaction extends BaseBuyInvestmentTransaction {\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.BUY_OTHER);\r\n  }\r\n}\r\n\r\nAggregate_add( BuyOtherTransaction, \"BUYOTHER\" );\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseBuyInvestmentTransaction } from \"./BaseBuyInvestmentTransaction\";\r\nimport { BuyType, BuyType_fromOfx } from \"./BuyType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for buying stock.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class BuyStockTransaction extends BaseBuyInvestmentTransaction {\r\n\r\n  private buyType: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.BUY_STOCK);\r\n  }\r\n\r\n  /**\r\n   * Gets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the buy type\r\n   */\r\n  public getBuyType(): string {\r\n    return this.buyType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of stock purchase (i.e. \"BUY\" or \"BUYTOCOVER\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param buyType the buy type\r\n   */\r\n  public setBuyType(buyType: string): void {\r\n    this.buyType = buyType;\r\n  }\r\n\r\n  /**\r\n   * Gets the buy type as one of the well-known types.\r\n   *\r\n   * @return the type of purchase or null if it's not well known\r\n   */\r\n  public getBuyTypeEnum(): BuyType {\r\n    return BuyType_fromOfx(this.buyType);\r\n  }\r\n}\r\n\r\nAggregate_add( BuyStockTransaction, \"BUYSTOCK\" );\r\nElement_add(BuyStockTransaction, { name: \"BUYTYPE\", required: true, order: 20, type: String, read: BuyStockTransaction.prototype.getBuyType, write: BuyStockTransaction.prototype.setBuyType });\r\n","\r\n/**\r\n * Type of action for closing a stock option.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum CloseOptionAction {\r\n  EXERCISE,\r\n  ASSIGN,\r\n  EXPIRE\r\n}\r\n\r\nexport function CloseOptionAction_fromOfx(ofxVal: string): CloseOptionAction {\r\n  if (\"EXERCISE\" === ofxVal) {\r\n    return CloseOptionAction.EXERCISE;\r\n  } else if (\"ASSIGN\" === ofxVal) {\r\n    return CloseOptionAction.ASSIGN;\r\n  } else if (\"EXPIRE\" === ofxVal) {\r\n    return CloseOptionAction.EXPIRE;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { CloseOptionAction, CloseOptionAction_fromOfx } from \"./CloseOptionAction\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for closing an option position due to expiration, exercise, or assignment.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class CloseOptionTransaction extends BaseOtherInvestmentTransaction\r\n    implements TransactionWithSecurity {\r\n\r\n  private securityId: SecurityId;\r\n  private optionAction: string;\r\n  private units: number;\r\n  private sharesPerContact: number;\r\n  private subAccountSecurity: string;\r\n  private relatedTransactionId: string;\r\n  private gain: number;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.CLOSE_OPTION);\r\n  }\r\n\r\n  /**\r\n   * Gets the security id of the option.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the security id of the option\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the security id of the option.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the option\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the option action\r\n   */\r\n  public getOptionAction(): string {\r\n    return this.optionAction;\r\n  }\r\n\r\n  /**\r\n   * Sets the action being performed (i.e. \"EXERCISE\", \"ASSIGN\", \"EXPIRE\" This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param optionAction the option action\r\n   */\r\n  public setOptionAction(optionAction: string): void {\r\n    this.optionAction = optionAction;\r\n  }\r\n\r\n  /**\r\n   * Gets the action as one of the well-known types.\r\n   *\r\n   * @return the type of close or null if it's not a well-known type\r\n   */\r\n  public getOptionActionEnum(): CloseOptionAction {\r\n    return  CloseOptionAction_fromOfx(this.getOptionAction());\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units of the option that were closed. This is a required field according\r\n   * to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the number of units closed\r\n   */\r\n  public getUnits(): number {\r\n    return this.units;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units of the option that were closed. This is a required field according\r\n   * to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param units the number of units closed\r\n   */\r\n  public setUnits(units: number): void {\r\n    this.units = units;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the number of shares per contact\r\n   */\r\n  public getSharesPerContact(): number {\r\n    return this.sharesPerContact;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param sharesPerContact the number of shares per contact\r\n   */\r\n  public setSharesPerContact(sharesPerContact: number): void {\r\n    this.sharesPerContact = sharesPerContact;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param subAccountSecurity the sub account type\r\n   */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n    this.subAccountSecurity = subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the related transaction id for the related buy or sell corresponding to the\r\n   * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\r\n   * action or EXERCISE or ASSIGN.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the related transaction id\r\n   */\r\n  public getRelatedTransactionId(): string {\r\n    return this.relatedTransactionId;\r\n  }\r\n\r\n  /**\r\n   * Sets the related transaction id for the related buy or sell corresponding to the\r\n   * EXERCISE or ASSIGN action. This is a required field according to the OFX spec if the\r\n   * action or EXERCISE or ASSIGN.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param relatedTransactionId the related transaction id\r\n   */\r\n  public setRelatedTransactionId(relatedTransactionId: string): void {\r\n    this.relatedTransactionId = relatedTransactionId;\r\n  }\r\n\r\n  /**\r\n   * Gets the gain related to the transaction. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the gain related to the transaction\r\n   */\r\n  public getGain(): number {\r\n    return this.gain;\r\n  }\r\n\r\n  /**\r\n   * Sets the gain related to the transaction. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param gain the gain related to the transaction\r\n   */\r\n  public setGain(gain: number): void {\r\n    this.gain = gain;\r\n  }\r\n}\r\n\r\nAggregate_add( CloseOptionTransaction, \"CLOSUREOPT\" );\r\nChildAggregate_add(CloseOptionTransaction, { order: 20, type: SecurityId, read: CloseOptionTransaction.prototype.getSecurityId, write: CloseOptionTransaction.prototype.setSecurityId });\r\nElement_add(CloseOptionTransaction, { name: \"OPTACTION\", required: true, order: 30, type: String, read: CloseOptionTransaction.prototype.getOptionAction, write: CloseOptionTransaction.prototype.setOptionAction });\r\nElement_add(CloseOptionTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: CloseOptionTransaction.prototype.getUnits, write: CloseOptionTransaction.prototype.setUnits });\r\nElement_add(CloseOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 50, type: Number, read: CloseOptionTransaction.prototype.getSharesPerContact, write: CloseOptionTransaction.prototype.setSharesPerContact });\r\nElement_add(CloseOptionTransaction, { name: \"SUBACCTSEC\", required: true, order: 60, type: String, read: CloseOptionTransaction.prototype.getSubAccountSecurity, write: CloseOptionTransaction.prototype.setSubAccountSecurity });\r\nElement_add(CloseOptionTransaction, { name: \"RELFITID\", order: 70, type: String, read: CloseOptionTransaction.prototype.getRelatedTransactionId, write: CloseOptionTransaction.prototype.setRelatedTransactionId });\r\nElement_add(CloseOptionTransaction, { name: \"GAIN\", order: 80, type: Number, read: CloseOptionTransaction.prototype.getGain, write: CloseOptionTransaction.prototype.setGain });\r\n","\r\n/**\r\n * Type of income.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum IncomeType {\r\n  LONG_TERM_CAP_GAINS,\r\n  SHORT_TERM_CAP_GAINS,\r\n  DIVIDEND,\r\n  INTEREST,\r\n  MISC\r\n}\r\n\r\nexport function IncomeType_fromOfx(ofxVal: string): IncomeType {\r\n  if (\"CGLONG\" === ofxVal) {\r\n    return IncomeType.LONG_TERM_CAP_GAINS;\r\n  } else if (\"CGSHORT\" === ofxVal) {\r\n    return IncomeType.SHORT_TERM_CAP_GAINS;\r\n  } else if (\"DIV\" === ofxVal) {\r\n    return IncomeType.DIVIDEND;\r\n  } else if (\"INTEREST\" === ofxVal) {\r\n    return IncomeType.INTEREST;\r\n  } else if (\"MISC\" === ofxVal) {\r\n    return IncomeType.MISC;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { IncomeType, IncomeType_fromOfx } from \"./IncomeType\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for investment income that is realized as cash into the investment account.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class IncomeTransaction extends BaseOtherInvestmentTransaction\r\n    implements TransactionWithSecurity {\r\n\r\n  private securityId: SecurityId;\r\n  private incomeType: string;\r\n  private total: number;\r\n  private subAccountSecurity: string;\r\n  private subAccountFund: string;\r\n  private taxExempt: boolean;\r\n  private withholding: number;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n  private inv401kSource: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.INCOME);\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that the income was for. This is a required field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that the income was for\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security that the income was for. This is a required field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security that the income was for\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\r\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\r\n   *\r\n   * @return the type of income\r\n   */\r\n  public getIncomeType(): string {\r\n    return this.incomeType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\r\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC>\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\r\n   *\r\n   * @param incomeType the type of income\r\n   */\r\n  public setIncomeType(incomeType: string): void {\r\n    this.incomeType = incomeType;\r\n  }\r\n\r\n  /**\r\n   * Gets the income type as one of the well-known types.\r\n   *\r\n   * @return the income type or null if it's not well known\r\n   */\r\n  public getIncomeTypeEnum(): IncomeType {\r\n    return IncomeType_fromOfx(this.getIncomeType());\r\n  }\r\n\r\n  /**\r\n   * Gets the total income received.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total income received.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAcctSec the sub account type\r\n   */\r\n  public setSubAccountSecurity(subAcctSec: string): void {\r\n    this.subAccountSecurity = subAcctSec;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund for the transaction\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type that the security is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAcctFund the sub account fund for the transaction\r\n   */\r\n  public setSubAccountFund(subAcctFund: string): void {\r\n    this.subAccountFund = subAcctFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return whether the transaction was tax exempt\r\n   */\r\n  public getTaxExempt(): boolean {\r\n    return this.taxExempt;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param taxExempt whether the transaction was tax exempt\r\n   */\r\n  public setTaxExempt(taxExempt: boolean): void {\r\n    this.taxExempt = taxExempt;\r\n  }\r\n\r\n  /**\r\n   * Gets the withholding for the income. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the withholding\r\n   */\r\n  public getWithholding(): number {\r\n    return this.withholding;\r\n  }\r\n\r\n  /**\r\n   * Sets the withholding for the income. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param withholding the withholding\r\n   */\r\n  public setWithholding(withholding: number): void {\r\n    this.withholding = withholding;\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code for the transaction\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency info for the transaction\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param originalCurrencyInfo the currency info for the transaction\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrencyInfo;\r\n    this.currencyCode = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the sale. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the state withholding\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401(k) source as one of the well-known types.\r\n   *\r\n   * @return the type of close or null if it's not well known.\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add( IncomeTransaction, \"INCOME\" );\r\nChildAggregate_add(IncomeTransaction, { required: true, order: 20, type: SecurityId, read: IncomeTransaction.prototype.getSecurityId, write: IncomeTransaction.prototype.setSecurityId });\r\nElement_add(IncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: IncomeTransaction.prototype.getIncomeType, write: IncomeTransaction.prototype.setIncomeType });\r\nElement_add(IncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: IncomeTransaction.prototype.getTotal, write: IncomeTransaction.prototype.setTotal });\r\nElement_add(IncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: IncomeTransaction.prototype.getSubAccountSecurity, write: IncomeTransaction.prototype.setSubAccountSecurity });\r\nElement_add(IncomeTransaction, { name: \"SUBACCTFUND\", order: 60, type: String, read: IncomeTransaction.prototype.getSubAccountFund, write: IncomeTransaction.prototype.setSubAccountFund });\r\nElement_add(IncomeTransaction, { name: \"TAXEXEMPT\", order: 70, type: Boolean, read: IncomeTransaction.prototype.getTaxExempt, write: IncomeTransaction.prototype.setTaxExempt });\r\nElement_add(IncomeTransaction, { name: \"WITHHOLDING\", order: 80, type: Number, read: IncomeTransaction.prototype.getWithholding, write: IncomeTransaction.prototype.setWithholding });\r\nElement_add(IncomeTransaction, { name: \"CURRENCY\", order: 90, type: String, read: IncomeTransaction.prototype.getCurrencyCode, write: IncomeTransaction.prototype.setCurrencyCode });\r\nChildAggregate_add(IncomeTransaction, { order: 120, type: OriginalCurrency, read: IncomeTransaction.prototype.getOriginalCurrencyInfo, write: IncomeTransaction.prototype.setOriginalCurrencyInfo });\r\nElement_add(IncomeTransaction, { name: \"INV401KSOURCE\", order: 110, type: String, read: IncomeTransaction.prototype.get401kSource, write: IncomeTransaction.prototype.set401kSource });\r\n","import { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n/**\r\n * Transaction for an investment expense\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class InvestmentExpenseTransaction extends BaseOtherInvestmentTransaction {\r\n\r\n  private securityId: SecurityId;\r\n  private total: number;\r\n  private subAccountSecurity: string;\r\n  private subAccountFund: string;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n  private inv401kSource: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.INVESTMENT_EXPENSE);\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security for the expense. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security for the expsense\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security for the expense. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security for the expsense\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the expense.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total for the expense.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountSecurity the sub account type\r\n   */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n    this.subAccountSecurity = subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountFund the sub account fund\r\n   */\r\n  public setSubAccountFund(subAccountFund: string): void {\r\n    this.subAccountFund = subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * sets the currency code for the transaction. Only one of currency code or original currency\r\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code for the transaction\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param originalCurrencyInfo the original currency info for the transaction\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrencyInfo;\r\n    this.currencyCode = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the 401k source\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the 401k source\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401k source as one of the well-known types.\r\n   *\r\n   * @return the 401k source or null if its not one of the well-known types\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentExpenseTransaction, \"INVEXPENSE\" );\r\nChildAggregate_add(InvestmentExpenseTransaction, { required: true, order: 20, type: SecurityId, read: InvestmentExpenseTransaction.prototype.getSecurityId, write: InvestmentExpenseTransaction.prototype.setSecurityId });\r\nElement_add(InvestmentExpenseTransaction, { name: \"TOTAL\", required: true, order: 30, type: Number, read: InvestmentExpenseTransaction.prototype.getTotal, write: InvestmentExpenseTransaction.prototype.setTotal });\r\nElement_add(InvestmentExpenseTransaction, { name: \"SUBACCTSEC\", order: 40, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountSecurity, write: InvestmentExpenseTransaction.prototype.setSubAccountSecurity });\r\nElement_add(InvestmentExpenseTransaction, { name: \"SUBACCTFUND\", order: 50, type: String, read: InvestmentExpenseTransaction.prototype.getSubAccountFund, write: InvestmentExpenseTransaction.prototype.setSubAccountFund });\r\nElement_add(InvestmentExpenseTransaction, { name: \"CURRENCY\", order: 60, type: String, read: InvestmentExpenseTransaction.prototype.getCurrencyCode, write: InvestmentExpenseTransaction.prototype.setCurrencyCode });\r\nElement_add(InvestmentExpenseTransaction, { name: \"ORIGCURRENCY\", order: 70, type: OriginalCurrency, read: InvestmentExpenseTransaction.prototype.getOriginalCurrencyInfo, write: InvestmentExpenseTransaction.prototype.setOriginalCurrencyInfo });\r\nElement_add(InvestmentExpenseTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: InvestmentExpenseTransaction.prototype.get401kSource, write: InvestmentExpenseTransaction.prototype.set401kSource });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for journal fund transactions between sub-accounts within the same investment\r\n * account.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class JournalFundTransaction extends BaseOtherInvestmentTransaction {\r\n\r\n  private subAccountFrom: string;\r\n  private subAccountTo: string;\r\n  private total: number;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.JOURNAL_FUND);\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getFromSubAccountFund(): string {\r\n    return this.subAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param subAccountFrom the sub account type\r\n   */\r\n  public setFromSubAccountFund(subAccountFrom: string): void {\r\n    this.subAccountFrom = subAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getFromSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getFromSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getFromSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getToSubAccountFund(): string {\r\n    return this.subAccountTo;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param subAccountTo the sub account fund\r\n   */\r\n  public setToSubAccountFund(subAccountTo: string): void {\r\n    this.subAccountTo = subAccountTo;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getToSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getToSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getToSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the transaction.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total for the transaction.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n}\r\n\r\nAggregate_add( JournalFundTransaction, \"JRNLFUND\" );\r\nElement_add(JournalFundTransaction, { name: \"SUBACCTFROM\", order: 20, type: String, read: JournalFundTransaction.prototype.getFromSubAccountFund, write: JournalFundTransaction.prototype.setFromSubAccountFund });\r\nElement_add(JournalFundTransaction, { name: \"SUBACCTTO\", order: 30, type: String, read: JournalFundTransaction.prototype.getToSubAccountFund, write: JournalFundTransaction.prototype.setToSubAccountFund });\r\nElement_add(JournalFundTransaction, { name: \"TOTAL\", order: 40, type: Number, read: JournalFundTransaction.prototype.getTotal, write: JournalFundTransaction.prototype.setTotal });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for journal security transactions between sub-accounts within the same investment\r\n * account.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class JournalSecurityTransaction extends BaseOtherInvestmentTransaction\r\n    implements TransactionWithSecurity {\r\n\r\n  private securityId: SecurityId;\r\n  private subAccountFrom: string;\r\n  private subAccountTo: string;\r\n  private total: number;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.JOURNAL_SECURITY);\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that was transferred. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that was bought\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security that was transferred. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security that was bought\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getFromSubAccountFund(): string {\r\n    return this.subAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type the transer is from (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param subAccountFrom the sub account type\r\n   */\r\n  public setFromSubAccountFund(subAccountFrom: string): void {\r\n    this.subAccountFrom = subAccountFrom;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getFromSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getFromSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getFromSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getToSubAccountFund(): string {\r\n    return this.subAccountTo;\r\n  }\r\n\r\n  /**\r\n   * sets the sub account type that the transfer is to (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param subAccountTo the sub account fund\r\n   */\r\n  public setToSubAccountFund(subAccountTo: string): void {\r\n    this.subAccountTo = subAccountTo;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getToSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getToSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getToSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the transaction.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total for the transaction.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n}\r\n\r\nAggregate_add( JournalSecurityTransaction, \"JRNLSEC\" );\r\nChildAggregate_add(JournalSecurityTransaction, { required: true, order: 20, type: SecurityId, read: JournalSecurityTransaction.prototype.getSecurityId, write: JournalSecurityTransaction.prototype.setSecurityId });\r\nElement_add(JournalSecurityTransaction, { name: \"SUBACCTFROM\", order: 30, type: String, read: JournalSecurityTransaction.prototype.getFromSubAccountFund, write: JournalSecurityTransaction.prototype.setFromSubAccountFund });\r\nElement_add(JournalSecurityTransaction, { name: \"SUBACCTTO\", order: 40, type: String, read: JournalSecurityTransaction.prototype.getToSubAccountFund, write: JournalSecurityTransaction.prototype.setToSubAccountFund });\r\nElement_add(JournalSecurityTransaction, { name: \"TOTAL\", order: 50, type: Number, read: JournalSecurityTransaction.prototype.getTotal, write: JournalSecurityTransaction.prototype.setTotal });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { SubAccountType } from \"../accounts/SubAccountType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for journal security transactions between sub-accounts within the same investment\r\n * account.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class MarginInterestTransaction extends BaseOtherInvestmentTransaction {\r\n\r\n  private total: number;\r\n  private subAccountFund: string;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.MARGIN_INTEREST);\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type the margin interest affects (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param subAccountFund the sub account type\r\n   */\r\n  public setSubAccountFund(subAccountFund: string): void {\r\n    this.subAccountFund = subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    var type: string = this.getSubAccountFund();\r\n    return type != null ? SubAccountType[type] : null;\r\n  }\r\n\r\n  /**\r\n   * Gets the total for the transaction.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total for the transaction.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction.\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code for the transaction.\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction.\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param originalCurrency the original currency info for the transaction.\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrency: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrency;\r\n    this.currencyCode = null;\r\n  }\r\n}\r\n\r\nAggregate_add( MarginInterestTransaction, \"MARGININTEREST\" );\r\nElement_add(MarginInterestTransaction, { name: \"SUBACCTFUND\", order: 30, type: String, read: MarginInterestTransaction.prototype.getSubAccountFund, write: MarginInterestTransaction.prototype.setSubAccountFund });\r\nElement_add(MarginInterestTransaction, { name: \"TOTAL\", order: 40, type: Number, read: MarginInterestTransaction.prototype.getTotal, write: MarginInterestTransaction.prototype.setTotal });\r\nElement_add(MarginInterestTransaction, { name: \"CURRENCY\", order: 110, type: String, read: MarginInterestTransaction.prototype.getCurrencyCode, write: MarginInterestTransaction.prototype.setCurrencyCode });\r\nElement_add(MarginInterestTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: MarginInterestTransaction.prototype.getOriginalCurrencyInfo, write: MarginInterestTransaction.prototype.setOriginalCurrencyInfo });\r\n","\r\n/**\r\n * Type of sale for options.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum OptionSellType {\r\n  SELL_TO_CLOSE,\r\n  SELL_TO_OPEN\r\n}\r\n\r\nexport function OptionSellType_fromOfx(ofxVal: string): OptionSellType {\r\n  if (\"SELLTOOPEN\" === ofxVal) {\r\n    return OptionSellType.SELL_TO_OPEN;\r\n  } else if (\"SELLTOCLOSE\" === ofxVal) {\r\n    return OptionSellType.SELL_TO_CLOSE;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { IncomeType, IncomeType_fromOfx } from \"./IncomeType\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for reinvestment transactions.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class ReinvestIncomeTransaction extends BaseOtherInvestmentTransaction\r\n    implements TransactionWithSecurity {\r\n\r\n  private securityId: SecurityId;\r\n  private incomeType: string;\r\n  private total: number;\r\n  private subAccountSecurity: string;\r\n  private units: number;\r\n  private unitPrice: number;\r\n  private commission: number;\r\n  private taxes: number;\r\n  private fees: number;\r\n  private load: number;\r\n  private taxExempt: boolean;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n  private inv401kSource: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.REINVEST_INCOME);\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that was reinvested in. This is a required field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that was reinvested in\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security that was reinvested in. This is a required field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security that was reinvested in\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\r\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\r\n   *\r\n   * @return the type of income\r\n   */\r\n  public getIncomeType(): string {\r\n    return this.incomeType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of income. One of \"CGLONG\" (long term capital gains), \"CGSHORT\" (short term\r\n   * capital gains), \"DIV\" (dividend), INTEREST, or MISC. This is a required field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\" This is a required field according to the OFX spec.\r\n   *\r\n   * @param incomeType the type of income\r\n   */\r\n  public setIncomeType(incomeType: string): void {\r\n    this.incomeType = incomeType;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of income as one of the well-known types.\r\n   *\r\n   * @return the income type or null if it's not one of the well-known types\r\n   */\r\n  public getIncomeTypeEnum(): IncomeType {\r\n    return IncomeType_fromOfx(this.getIncomeType());\r\n  }\r\n\r\n  /**\r\n   * Gets the total income received. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total income received. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountSecurity the sub account type\r\n   */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n    this.subAccountSecurity = subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units of the security that was reinvested in. This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the number of units purchased\r\n   */\r\n  public getUnits(): number {\r\n    return this.units;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units of the security that was reinvested in. This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param units the number of units purchased\r\n   */\r\n  public setUnits(units: number): void {\r\n    this.units = units;\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the price per commonly-quoted unit. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param unitPrice the per unit price\r\n   */\r\n  public setUnitPrice(unitPrice: number): void {\r\n    this.unitPrice = unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the transaction commission for the reinvestment. This is an optional field according to\r\n   * the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction commision\r\n   */\r\n  public getCommission(): number {\r\n    return this.commission;\r\n  }\r\n\r\n  /**\r\n   * Sets the transaction commission for the reinvestment. This is an optional field according to\r\n   * the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param commission the transaction commision\r\n   */\r\n  public setCommission(commission: number): void {\r\n    this.commission = commission;\r\n  }\r\n\r\n  /**\r\n   * Gets the taxes for the reinvestment. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction taxes\r\n   */\r\n  public getTaxes(): number {\r\n    return this.taxes;\r\n  }\r\n\r\n  /**\r\n   * Sets the taxes for the reinvestment. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param taxes the transaction taxes\r\n   */\r\n  public setTaxes(taxes: number): void {\r\n    this.taxes = taxes;\r\n  }\r\n\r\n  /**\r\n   * Gets the fees for the reinvestment. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the transaction fees\r\n   */\r\n  public getFees(): number {\r\n    return this.fees;\r\n  }\r\n\r\n  /**\r\n   * Sets the fees for the reinvestment. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param fees the transaction fees\r\n   */\r\n  public setFees(fees: number): void {\r\n    this.fees = fees;\r\n  }\r\n\r\n  /**\r\n   * Gets the load for the reinvestment. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the load\r\n   */\r\n  public getLoad(): number {\r\n    return this.load;\r\n  }\r\n\r\n  /**\r\n   * Sets the load for the reinvestment. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param load the load\r\n   */\r\n  public setLoad(load: number): void {\r\n    this.load = load;\r\n  }\r\n\r\n  /**\r\n   * Gets whether the income was tax exempt. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return whether the transaction was tax exempt\r\n   */\r\n  public getTaxExempt(): boolean {\r\n    return this.taxExempt;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the income was tax exempt. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param taxExempt whether the transaction was tax exempt\r\n   */\r\n  public setTaxExempt(taxExempt: boolean): void {\r\n    this.taxExempt = taxExempt;\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code for the transaction\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction.\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param originalCurrencyInfo the original currency info for the transaction.\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrencyInfo;\r\n    this.currencyCode = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the state withholding\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401(k) source as one of the well-known types.\r\n   *\r\n   * @return the type of close or null if it's not well known\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add( ReinvestIncomeTransaction, \"REINVEST\" );\r\nChildAggregate_add(ReinvestIncomeTransaction, { required: true, order: 20, type: SecurityId, read: ReinvestIncomeTransaction.prototype.getSecurityId, write: ReinvestIncomeTransaction.prototype.setSecurityId });\r\nElement_add(ReinvestIncomeTransaction, { name: \"INCOMETYPE\", required: true, order: 30, type: String, read: ReinvestIncomeTransaction.prototype.getIncomeType, write: ReinvestIncomeTransaction.prototype.setIncomeType });\r\nElement_add(ReinvestIncomeTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReinvestIncomeTransaction.prototype.getTotal, write: ReinvestIncomeTransaction.prototype.setTotal });\r\nElement_add(ReinvestIncomeTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReinvestIncomeTransaction.prototype.getSubAccountSecurity, write: ReinvestIncomeTransaction.prototype.setSubAccountSecurity });\r\nElement_add(ReinvestIncomeTransaction, { name: \"UNITS\", required: true, order: 60, type: Number, read: ReinvestIncomeTransaction.prototype.getUnits, write: ReinvestIncomeTransaction.prototype.setUnits });\r\nElement_add(ReinvestIncomeTransaction, { name: \"UNITPRICE\", required: true, order: 70, type: Number, read: ReinvestIncomeTransaction.prototype.getUnitPrice, write: ReinvestIncomeTransaction.prototype.setUnitPrice });\r\nElement_add(ReinvestIncomeTransaction, { name: \"COMMISSION\", order: 80, type: Number, read: ReinvestIncomeTransaction.prototype.getCommission, write: ReinvestIncomeTransaction.prototype.setCommission });\r\nElement_add(ReinvestIncomeTransaction, { name: \"TAXES\", order: 90, type: Number, read: ReinvestIncomeTransaction.prototype.getTaxes, write: ReinvestIncomeTransaction.prototype.setTaxes });\r\nElement_add(ReinvestIncomeTransaction, { name: \"FEES\", order: 100, type: Number, read: ReinvestIncomeTransaction.prototype.getFees, write: ReinvestIncomeTransaction.prototype.setFees });\r\nElement_add(ReinvestIncomeTransaction, { name: \"LOAD\", order: 110, type: Number, read: ReinvestIncomeTransaction.prototype.getLoad, write: ReinvestIncomeTransaction.prototype.setLoad });\r\nElement_add(ReinvestIncomeTransaction, { name: \"TAXEXEMPT\", order: 120, type: Boolean, read: ReinvestIncomeTransaction.prototype.getTaxExempt, write: ReinvestIncomeTransaction.prototype.setTaxExempt });\r\nElement_add(ReinvestIncomeTransaction, { name: \"CURRENCY\", order: 130, type: String, read: ReinvestIncomeTransaction.prototype.getCurrencyCode, write: ReinvestIncomeTransaction.prototype.setCurrencyCode });\r\nElement_add(ReinvestIncomeTransaction, { name: \"ORIGCURRENCY\", order: 140, type: OriginalCurrency, read: ReinvestIncomeTransaction.prototype.getOriginalCurrencyInfo, write: ReinvestIncomeTransaction.prototype.setOriginalCurrencyInfo });\r\nElement_add(ReinvestIncomeTransaction, { name: \"INV401KSOURCE\", order: 150, type: String, read: ReinvestIncomeTransaction.prototype.get401kSource, write: ReinvestIncomeTransaction.prototype.set401kSource });\r\n","\r\n /**\r\n * Related option transaction type.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport enum RelatedOptionType {\r\n  SPREAD,\r\n  STRADDLE,\r\n  NONE,\r\n  OTHER\r\n}\r\n\r\nexport function RelatedOptionType_fromOfx(ofxVal: string): RelatedOptionType {\r\n  if (\"SPREAD\" === ofxVal) {\r\n    return RelatedOptionType.SPREAD;\r\n  } else if (\"STRADDLE\" === ofxVal) {\r\n    return RelatedOptionType.STRADDLE;\r\n  } else if (\"NONE\" === ofxVal) {\r\n    return RelatedOptionType.NONE;\r\n  } else if (\"OTHER\" === ofxVal) {\r\n    return RelatedOptionType.OTHER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { TransactionWithSecurity } from \"./TransactionWithSecurity\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for return of capital transactions.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class ReturnOfCapitalTransaction extends BaseOtherInvestmentTransaction\r\n    implements TransactionWithSecurity {\r\n\r\n  private securityId: SecurityId;\r\n  private total: number;\r\n  private subAccountSecurity: string;\r\n  private subAccountFund: string;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n  private inv401kSource: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.RETURN_OF_CAPITAL);\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that capital was returned from. This is a required field according\r\n   * to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that capital was returned from\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security that capital was returned from. This is a required field according\r\n   * to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security that capital was returned from\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the total amount of capital returned. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the total\r\n   */\r\n  public getTotal(): number {\r\n    return this.total;\r\n  }\r\n\r\n  /**\r\n   * Sets the total amount of capital returned. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param total the total\r\n   */\r\n  public setTotal(total: number): void {\r\n    this.total = total;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountSecurity the sub account type\r\n   */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n    this.subAccountSecurity = subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type that the transaction affects.\r\n   * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type that the transaction affects.\r\n   * (e.g. CASH, MARGIN, SHORT, OTHER). This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountFund the sub account fund\r\n   */\r\n  public setSubAccountFund(subAccountFund: string): void {\r\n    this.subAccountFund = subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the currency code for the transaction. Only one of currency code or original currency\r\n   * info should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param currencyCode the currency code for the transaction\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction.\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param originalCurrencyInfo the currency code for the transaction.\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrencyInfo;\r\n    this.currencyCode = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the reinvestment. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the state withholding\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401(k) source as one of the well-known types.\r\n   *\r\n   * @return the type of close or null if it's not well known.\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add( ReturnOfCapitalTransaction, \"RETOFCAP\" );\r\nChildAggregate_add(ReturnOfCapitalTransaction, { required: true, order: 20, type: SecurityId, read: ReturnOfCapitalTransaction.prototype.getSecurityId, write: ReturnOfCapitalTransaction.prototype.setSecurityId });\r\nElement_add(ReturnOfCapitalTransaction, { name: \"TOTAL\", required: true, order: 40, type: Number, read: ReturnOfCapitalTransaction.prototype.getTotal, write: ReturnOfCapitalTransaction.prototype.setTotal });\r\nElement_add(ReturnOfCapitalTransaction, { name: \"SUBACCTSEC\", order: 50, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountSecurity, write: ReturnOfCapitalTransaction.prototype.setSubAccountSecurity });\r\nElement_add(ReturnOfCapitalTransaction, { name: \"SUBACCTFUND\", order: 140, type: String, read: ReturnOfCapitalTransaction.prototype.getSubAccountFund, write: ReturnOfCapitalTransaction.prototype.setSubAccountFund });\r\nElement_add(ReturnOfCapitalTransaction, { name: \"CURRENCY\", order: 110, type: String, read: ReturnOfCapitalTransaction.prototype.getCurrencyCode, write: ReturnOfCapitalTransaction.prototype.setCurrencyCode });\r\nElement_add(ReturnOfCapitalTransaction, { name: \"ORIGCURRENCY\", order: 120, type: OriginalCurrency, read: ReturnOfCapitalTransaction.prototype.getOriginalCurrencyInfo, write: ReturnOfCapitalTransaction.prototype.setOriginalCurrencyInfo });\r\nElement_add(ReturnOfCapitalTransaction, { name: \"INV401KSOURCE\", order: 180, type: String, read: ReturnOfCapitalTransaction.prototype.get401kSource, write: ReturnOfCapitalTransaction.prototype.set401kSource });\r\n","\r\n/**\r\n * Reason debt was sold.\r\n * @see \"Section 13.9.2.4.2, OFX Spec\"\r\n */\r\nexport enum SellDebtReason {\r\n  CALL,\r\n  SELL,\r\n  MATURITY\r\n}\r\n\r\nexport function SellDebtReason_fromOfx(ofxVal: string): SellDebtReason {\r\n  if (\"CALL\" === ofxVal) {\r\n    return SellDebtReason.CALL;\r\n  } else if (\"SELL\" === ofxVal) {\r\n    return SellDebtReason.SELL;\r\n  } else if (\"MATURITY\" === ofxVal) {\r\n    return SellDebtReason.MATURITY;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\r\nimport { SellDebtReason, SellDebtReason_fromOfx } from \"./SellDebtReason\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for selling debt (i.e. bonds, CDs, etc.,).\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class SellDebtTransaction extends BaseSellInvestmentTransaction {\r\n\r\n  private sellReason: string;\r\n  private accruedInterest: number;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.SELL_DEBT);\r\n  }\r\n\r\n  /**\r\n   * Gets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\r\n   * \"MATURITY\" (the debt reached maturity).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return The reason for the sale\r\n   */\r\n  public getSellReason(): string {\r\n    return this.sellReason;\r\n  }\r\n\r\n  /**\r\n   * Sets the reason for the sale. One of \"CALL\" (the debt was called), \"SELL\" (the debt was sold),\r\n   * \"MATURITY\" (the debt reached maturity).\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param sellReason The reason for the sale\r\n   */\r\n  public setSellReason(sellReason: string): void {\r\n    this.sellReason = sellReason;\r\n  }\r\n\r\n  /**\r\n   * Gets the sell reason as one of the well-known types.\r\n   *\r\n   * @return the sell reason or null if it's not well known\r\n   */\r\n  public getSellReasonEnum(): SellDebtReason {\r\n    return SellDebtReason_fromOfx(this.getSellReason());\r\n  }\r\n\r\n  /**\r\n   * Gets the amount of accrued interest on the debt. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the amount of accrued interest\r\n   */\r\n  public getAccruedInterest(): number {\r\n    return this.accruedInterest;\r\n  }\r\n\r\n  /**\r\n   * Sets the amount of accrued interest on the debt. This is an optional field according to the\r\n   * OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param accruedInterest the amount of accrued interest\r\n   */\r\n  public setAccruedInterest(accruedInterest: number): void {\r\n    this.accruedInterest = accruedInterest;\r\n  }\r\n}\r\n\r\nAggregate_add( SellDebtTransaction, \"SELLDEBT\" );\r\nElement_add(SellDebtTransaction, { name: \"SELLREASON\", order: 30, type: String, read: SellDebtTransaction.prototype.getSellReason, write: SellDebtTransaction.prototype.setSellReason });\r\nElement_add(SellDebtTransaction, { name: \"ACCRDINT\", order: 40, type: Number, read: SellDebtTransaction.prototype.getAccruedInterest, write: SellDebtTransaction.prototype.setAccruedInterest });\r\n","\r\n/**\r\n * Type of sale for stocks and mutual funds.\r\n */\r\nexport enum SellType {\r\n  SELL,\r\n  SELL_SHORT\r\n}\r\n\r\nexport function SellType_fromOfx(ofxVal: string): SellType {\r\n  if (\"SELL\" === ofxVal) {\r\n    return SellType.SELL;\r\n  } else if (\"SELLSHORT\" === ofxVal) {\r\n    return SellType.SELL_SHORT;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\r\nimport { SellType, SellType_fromOfx } from \"./SellType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for selling mutual fund.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class SellMutualFundTransaction extends BaseSellInvestmentTransaction {\r\n\r\n  private sellType: string;\r\n  private averageCostBasis: number;\r\n  private relatedTransactionId: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.SELL_MUTUAL_FUND);\r\n  }\r\n\r\n  /**\r\n   * Gets the type of sale. One of \"SELL\" or \"SELLSHORT\".\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return The type of sale\r\n   */\r\n  public getSellType(): string {\r\n    return this.sellType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of sale. One of \"SELL\" or \"SELLSHORT\".\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param sellType The type of sale\r\n   */\r\n  public setSellType(sellType: string): void {\r\n    this.sellType = sellType;\r\n  }\r\n\r\n  /**\r\n   * Gets the sell type as one of the well-known types.\r\n   *\r\n   * @return the type of sale or null if it's not known.\r\n   */\r\n  public getSellTypeEnum(): SellType {\r\n    return SellType_fromOfx(this.sellType);\r\n  }\r\n\r\n  /**\r\n   * Gets the average cost basis of the sale.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return The average cost basis of the sale\r\n   */\r\n  public getAverageCostBasis(): number {\r\n    return this.averageCostBasis;\r\n  }\r\n\r\n  /**\r\n   * Sets the average cost basis of the sale.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param averageCostBasis The average cost basis of the sale\r\n   */\r\n  public setAverageCostBasis(averageCostBasis: number): void {\r\n    this.averageCostBasis = averageCostBasis;\r\n  }\r\n\r\n  /**\r\n   * Gets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\r\n   * This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the related transaction id\r\n   */\r\n  public getRelatedTransactionId(): string {\r\n    return this.relatedTransactionId;\r\n  }\r\n\r\n  /**\r\n   * Sets any related transaction id for a mutual fund sale (e.g. for a mutual fund exchange).\r\n   * This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param relatedTransactionId the related transaction id\r\n   */\r\n  public setRelatedTransactionId(relatedTransactionId: string): void {\r\n    this.relatedTransactionId = relatedTransactionId;\r\n  }\r\n}\r\n\r\nAggregate_add( SellMutualFundTransaction, \"SELLMF\" );\r\nElement_add(SellMutualFundTransaction, { name: \"SELLTYPE\", order: 20, type: String, read: SellMutualFundTransaction.prototype.getSellType, write: SellMutualFundTransaction.prototype.setSellType });\r\nElement_add(SellMutualFundTransaction, { name: \"AVGCOSTBASIS\", order: 30, type: Number, read: SellMutualFundTransaction.prototype.getAverageCostBasis, write: SellMutualFundTransaction.prototype.setAverageCostBasis });\r\nElement_add(SellMutualFundTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellMutualFundTransaction.prototype.getRelatedTransactionId, write: SellMutualFundTransaction.prototype.setRelatedTransactionId });\r\n","import { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\r\nimport { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { OptionSellType, OptionSellType_fromOfx } from \"./OptionSellType\";\r\nimport { RelatedOptionType, RelatedOptionType_fromOfx } from \"./RelatedOptionType\";\r\nimport { ShortOptionSecurity, ShortOptionSecurity_fromOfx } from \"../positions/ShortOptionSecurity\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for selling options.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class SellOptionTransaction extends BaseSellInvestmentTransaction {\r\n\r\n  private optionSellType: string;\r\n  private sharesPerContact: number;\r\n  private relatedTransactionId: string;\r\n  private relatedType: string;\r\n  private secured: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.SELL_OPTION);\r\n  }\r\n\r\n  /**\r\n   * Gets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the option sell type\r\n   */\r\n  public getOptionSellType(): string {\r\n    return this.optionSellType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of option sale (i.e. \"SELLTOCLOSE\" or \"SELLTOOPEN\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param optionSellType the option sell type\r\n   */\r\n  public setOptionSellType(optionSellType: string): void {\r\n    this.optionSellType = optionSellType;\r\n  }\r\n\r\n  /**\r\n   * Gets the option sell type as one of the well-known types.\r\n   *\r\n   * @return the type of sale or null if it's not known.\r\n   */\r\n  public getOptionSellTypeEnum(): OptionSellType {\r\n    return OptionSellType_fromOfx(this.optionSellType);\r\n  }\r\n\r\n  /**\r\n   * Gets the number of shares per contact. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the number of shares per contact\r\n   */\r\n  public getSharesPerContact(): number {\r\n    return this.sharesPerContact;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of shares per contact. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param sharesPerContact the number of shares per contact\r\n   */\r\n  public setSharesPerContact(sharesPerContact: number): void {\r\n    this.sharesPerContact = sharesPerContact;\r\n  }\r\n\r\n  /**\r\n   * Gets a related transaction for the option sale for complex option transactions. This\r\n   * is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return The related transaction id\r\n   */\r\n  public getRelatedTransactionId(): string {\r\n    return this.relatedTransactionId;\r\n  }\r\n\r\n  /**\r\n   * Sets a related transaction for the option sale for complex option transactions. This\r\n   * is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param relatedTransactionId The related transaction id\r\n   */\r\n  public setRelatedTransactionId(relatedTransactionId: string): void {\r\n    this.relatedTransactionId = relatedTransactionId;\r\n  }\r\n\r\n  /**\r\n   * Gets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\r\n   * is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return The related tansaction type\r\n   */\r\n  public getRelatedType(): string {\r\n    return this.relatedType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type for the related transaction. One of \"SPREAD\", \"STRADDLE\", \"NONE\", \"OTHER\". This\r\n   * is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param relatedType The related tansaction type\r\n   */\r\n  public setRelatedType(relatedType: string): void {\r\n    this.relatedType = relatedType;\r\n  }\r\n\r\n  /**\r\n   * Gets the related transaction as one of the well-known types.\r\n   *\r\n   * @return the related tansaction type or null if it's not well known\r\n   */\r\n  public getRelatedTypeEnum(): RelatedOptionType {\r\n    return RelatedOptionType_fromOfx(this.getRelatedType());\r\n  }\r\n\r\n  /**\r\n   * Gets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return how the option sale is secured\r\n   */\r\n  public getSecured(): string {\r\n    return this.secured;\r\n  }\r\n\r\n  /**\r\n   * Sets how the option sale is secured. One of \"NAKED\" or \"COVERED\". This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param secured how the option sale is secured\r\n   */\r\n  public setSecured(secured: string): void {\r\n    this.secured = secured;\r\n  }\r\n\r\n  /**\r\n   * Gets how the option sale is secured as one of the well-known types.\r\n   *\r\n   * @return the type indicating how the option is secured or null if it's not well known.\r\n   */\r\n  public getSecuredEnum(): ShortOptionSecurity {\r\n    return ShortOptionSecurity_fromOfx(this.getSecured());\r\n  }\r\n}\r\n\r\nAggregate_add( SellOptionTransaction, \"SELLOPT\" );\r\nElement_add(SellOptionTransaction, { name: \"OPTSELLTYPE\", required: true, order: 20, type: String, read: SellOptionTransaction.prototype.getOptionSellType, write: SellOptionTransaction.prototype.setOptionSellType });\r\nElement_add(SellOptionTransaction, { name: \"SHPERCTRCT\", required: true, order: 30, type: Number, read: SellOptionTransaction.prototype.getSharesPerContact, write: SellOptionTransaction.prototype.setSharesPerContact });\r\nElement_add(SellOptionTransaction, { name: \"RELFITID\", order: 40, type: String, read: SellOptionTransaction.prototype.getRelatedTransactionId, write: SellOptionTransaction.prototype.setRelatedTransactionId });\r\nElement_add(SellOptionTransaction, { name: \"RELTYPE\", order: 50, type: String, read: SellOptionTransaction.prototype.getRelatedType, write: SellOptionTransaction.prototype.setRelatedType });\r\nElement_add(SellOptionTransaction, { name: \"SECURED\", order: 60, type: String, read: SellOptionTransaction.prototype.getSecured, write: SellOptionTransaction.prototype.setSecured });\r\n","import { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\n\r\n\r\n/**\r\n * Transaction for buying other types of securities.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class SellOtherTransaction extends BaseSellInvestmentTransaction {\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.SELL_OTHER);\r\n  }\r\n}\r\n\r\nAggregate_add( SellOtherTransaction, \"SELLOTHER\" );\r\n","import { BaseSellInvestmentTransaction } from \"./BaseSellInvestmentTransaction\";\r\nimport { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { SellType, SellType_fromOfx } from \"./SellType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for selling stock.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class SellStockTransaction extends BaseSellInvestmentTransaction {\r\n\r\n  private sellType: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.SELL_STOCK);\r\n  }\r\n\r\n  /**\r\n   * Gets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @return the sell type\r\n   */\r\n  public getSellType(): string {\r\n    return this.sellType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of stock sale (i.e. \"SELL\" or \"SELLSHORT\"). This is a required field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n   *\r\n   * @param sellType the sell type\r\n   */\r\n  public setSellType(sellType: string): void {\r\n    this.sellType = sellType;\r\n  }\r\n\r\n  /**\r\n   * Gets the sell type as one of the well-known types.\r\n   *\r\n   * @return the type of sale or null if it's not known\r\n   */\r\n  public getSellTypeEnum(): SellType {\r\n    return SellType_fromOfx(this.sellType);\r\n  }\r\n}\r\n\r\nAggregate_add( SellStockTransaction, \"SELLSTOCK\" );\r\nElement_add(SellStockTransaction, { name: \"SELLTYPE\", required: true, order: 20, type: String, read: SellStockTransaction.prototype.getSellType, write: SellStockTransaction.prototype.setSellType });\r\n","import { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { OriginalCurrency } from \"./OriginalCurrency\";\r\nimport { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for a stock split.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class SplitTransaction extends BaseOtherInvestmentTransaction {\r\n  private securityId: SecurityId;\r\n  private subAccountSecurity: string;\r\n  private oldUnits: number;\r\n  private newUnits: number;\r\n  private numerator: number;\r\n  private denominator: number;\r\n  private currencyCode: string;\r\n  private originalCurrencyInfo: OriginalCurrency;\r\n  private cashForFractionalUnits: number;\r\n  private subAccountFund: string;\r\n  private inv401kSource: string;\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.SPLIT);\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security for the split. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security for the expsense\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security for the split. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security for the expsense\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account type\r\n   */\r\n  public getSubAccountSecurity(): string {\r\n    return this.subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER). This is a\r\n   * required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountSecurity the sub account type\r\n   */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n    this.subAccountSecurity = subAccountSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the old number of units for the split. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the old number of units.\r\n   */\r\n  public getOldUnits(): number {\r\n    return this.oldUnits;\r\n  }\r\n\r\n  /**\r\n   * Sets the old number of units for the split. This is a  equired field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param oldUnits the old number of units.\r\n   */\r\n  public setOldUnits(oldUnits: number): void {\r\n    this.oldUnits = oldUnits;\r\n  }\r\n\r\n  /**\r\n   * Gets the new number of units for the split. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the new number of units.\r\n   */\r\n  public getNewUnits(): number {\r\n    return this.newUnits;\r\n  }\r\n\r\n  /**\r\n   * Sets the new number of units for the split. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param newUnits the new number of units.\r\n   */\r\n  public setNewUnits(newUnits: number): void {\r\n    this.newUnits = newUnits;\r\n  }\r\n\r\n  /**\r\n   * Gets the numerator for the split ratio. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the numerator for the split ratio\r\n   */\r\n  public getNumerator(): number {\r\n    return this.numerator;\r\n  }\r\n\r\n  /**\r\n   * Sets the numerator for the split ratio. This is a required field according to the OFX spec.\r\n   *\r\n   * @param numerator the numerator for the split ratio\r\n   */\r\n  public setNumerator(numerator: number): void {\r\n    this.numerator = numerator;\r\n  }\r\n\r\n  /**\r\n   * Gets the denominator for the split ratio. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the numerator for the split ratio\r\n   */\r\n  public getDenominator(): number {\r\n    return this.denominator;\r\n  }\r\n\r\n  /**\r\n   * Sets the denominator for the split ratio. This is a required field according to the OFX spec.\r\n   *\r\n   * @param denominator the numerator for the split ratio\r\n   */\r\n  public setDenominator(denominator: number): void {\r\n    this.denominator = denominator;\r\n  }\r\n\r\n  /**\r\n   * Gets the currency code for the transaction. Only one of currency code or original currency\r\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * sets the currency code for the transaction. Only one of currency code or original currency\r\n   * code should be set according to the OFX spec. If neither are set, means the default currency.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the currency code for the transaction\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.originalCurrencyInfo = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction\r\n   */\r\n  public getOriginalCurrencyInfo(): OriginalCurrency {\r\n    return this.originalCurrencyInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the original currency info for the transaction.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the original currency info for the transaction\r\n   */\r\n  public setOriginalCurrencyInfo(originalCurrencyInfo: OriginalCurrency): void {\r\n    this.originalCurrencyInfo = originalCurrencyInfo;\r\n    this.currencyCode = null;\r\n  }\r\n\r\n  /**\r\n   * Gets the cash for fractional units.\r\n   *\r\n   * @return the cash for fractional units\r\n   */\r\n  public getCashForFractionalUnits(): number {\r\n    return this.cashForFractionalUnits;\r\n  }\r\n\r\n  /**\r\n   * Sets the cash for fractional units.\r\n   *\r\n   * @param cashForFractionalUnits the cash for fractional units\r\n   */\r\n  public setCashForFractionalUnits(cashForFractionalUnits: number): void {\r\n    this.cashForFractionalUnits = cashForFractionalUnits;\r\n  }\r\n\r\n  /**\r\n   * Gets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the sub account fund\r\n   */\r\n  public getSubAccountFund(): string {\r\n    return this.subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Sets the sub account type for the fund. (e.g. CASH, MARGIN, SHORT, OTHER).\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param subAccountFund the sub account fund\r\n   */\r\n  public setSubAccountFund(subAccountFund: string): void {\r\n    this.subAccountFund = subAccountFund;\r\n  }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountFund as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types\r\n   */\r\n  public getSubAccountFundEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountFund());\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the 401k source\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the transaction. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the 401k source\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401k source as one of the well-known types.\r\n   *\r\n   * @return the 401k source or null if its not one of the well-known types\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add( SplitTransaction, \"SPLIT\" );\r\nChildAggregate_add(SplitTransaction, { required: true, order: 20, type: SecurityId, read: SplitTransaction.prototype.getSecurityId, write: SplitTransaction.prototype.setSecurityId });\r\nElement_add(SplitTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: SplitTransaction.prototype.getSubAccountSecurity, write: SplitTransaction.prototype.setSubAccountSecurity });\r\nElement_add(SplitTransaction, { name: \"OLDUNITS\", order: 40, type: Number, read: SplitTransaction.prototype.getOldUnits, write: SplitTransaction.prototype.setOldUnits });\r\nElement_add(SplitTransaction, { name: \"NEWUNITS\", order: 50, type: Number, read: SplitTransaction.prototype.getNewUnits, write: SplitTransaction.prototype.setNewUnits });\r\nElement_add(SplitTransaction, { name: \"NUMERATOR\", order: 60, type: Number, read: SplitTransaction.prototype.getNumerator, write: SplitTransaction.prototype.setNumerator });\r\nElement_add(SplitTransaction, { name: \"DENOMINATOR\", order: 70, type: Number, read: SplitTransaction.prototype.getDenominator, write: SplitTransaction.prototype.setDenominator });\r\nElement_add(SplitTransaction, { name: \"CURRENCY\", order: 80, type: String, read: SplitTransaction.prototype.getCurrencyCode, write: SplitTransaction.prototype.setCurrencyCode });\r\nElement_add(SplitTransaction, { name: \"ORIGCURRENCY\", order: 90, type: OriginalCurrency, read: SplitTransaction.prototype.getOriginalCurrencyInfo, write: SplitTransaction.prototype.setOriginalCurrencyInfo });\r\nElement_add(SplitTransaction, { name: \"FRACCASH\", order: 100, type: Number, read: SplitTransaction.prototype.getCashForFractionalUnits, write: SplitTransaction.prototype.setCashForFractionalUnits });\r\nElement_add(SplitTransaction, { name: \"SUBACCTFUND\", order: 110, type: String, read: SplitTransaction.prototype.getSubAccountFund, write: SplitTransaction.prototype.setSubAccountFund });\r\nElement_add(SplitTransaction, { name: \"INV401KSOURCE\", order: 120, type: String, read: SplitTransaction.prototype.get401kSource, write: SplitTransaction.prototype.set401kSource });\r\n","\r\n/**\r\n * Type of transfer.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport enum TransferAction {\r\n  IN,\r\n  OUT\r\n}\r\n\r\nexport function TransferAction_fromOfx(ofxVal: string): TransferAction {\r\n  if (\"IN\" === ofxVal) {\r\n    return TransferAction.IN;\r\n  } else if (\"OUT\" === ofxVal) {\r\n    return TransferAction.OUT;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { BaseOtherInvestmentTransaction } from \"./BaseOtherInvestmentTransaction\";\r\nimport { SecurityId } from \"../../seclist/SecurityId\";\r\nimport { InvestmentTransactionType } from \"./TransactionType\";\r\nimport { SubAccountType, SubAccountType_fromOfx } from \"../accounts/SubAccountType\";\r\nimport { TransferAction, TransferAction_fromOfx } from \"./TransferAction\";\r\nimport { PositionType, PositionType_fromOfx } from \"../positions/PositionType\";\r\nimport { Inv401KSource, Inv401KSource_fromOfx } from \"../positions/Inv401KSource\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Transaction for transfers.\r\n * @see \"Section 13.9.2.4.4, OFX Spec\"\r\n */\r\nexport class TransferInvestmentTransaction extends BaseOtherInvestmentTransaction {\r\n\r\n  private securityId: SecurityId;\r\n  private subAccountSecurity: string;\r\n  private units: number;\r\n  private transferAction: string;\r\n  private positionType: string;\r\n  private averageCostBasis: number;\r\n  private unitPrice: number;\r\n  private purchaseDate: Date;\r\n  private inv401kSource: string;\r\n\r\n  // TODO (jonp) -- INVACCTFROM\r\n\r\n  constructor() {\r\n    super(InvestmentTransactionType.TRANSFER);\r\n  }\r\n\r\n  /**\r\n   * Gets the id of the security that was transferred. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the security id of the security that was transferred\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the id of the security that was transferred. This is a required field according to the OFX\r\n   * spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param securityId the security id of the security that was transferred\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n    * Gets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n    *\r\n    * @return the sub account type\r\n    */\r\n  public getSubAccountSecurity(): string {\r\n     return this.subAccountSecurity;\r\n   }\r\n\r\n  /**\r\n    * Sets the sub account type for the security (e.g. CASH, MARGIN, SHORT, OTHER).\r\n    * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n    *\r\n    * @param subAccountSecurity the sub account type\r\n    */\r\n  public setSubAccountSecurity(subAccountSecurity: string): void {\r\n     this.subAccountSecurity = subAccountSecurity;\r\n   }\r\n\r\n  /**\r\n   * Gets the result of getSubAccountSecurity as one of the well-known types.\r\n   *\r\n   * @return the type of null if it wasn't one of the well known types.\r\n   */\r\n  public getSubAccountSecurityEnum(): SubAccountType {\r\n    return SubAccountType_fromOfx(this.getSubAccountSecurity());\r\n  }\r\n\r\n  /**\r\n   * Gets the number of units of the security that was transferred. For security-based actions other\r\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the number of units transferred\r\n   */\r\n  public getUnits(): number {\r\n    return this.units;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of units of the security that was transferred. For security-based actions other\r\n   * than stock splits, this is the quantity bought. For stocks, mutual funds, and others, this\r\n   * is the number of shares. For bonds, this is the face value. For options, this is the number of\r\n   * contacts. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param units the number of units transferred\r\n   */\r\n  public setUnits(units: number): void {\r\n    this.units = units;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @return the type of transfer\r\n   */\r\n  public getTransferAction(): string {\r\n    return this.transferAction;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of transfer. One of \"IN\" or \"OUT\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @param transferAction the type of transfer\r\n   */\r\n  public setTransferAction(transferAction: string): void {\r\n    this.transferAction = transferAction;\r\n  }\r\n\r\n  /**\r\n   * Gets the transfer action as one of the well-known types.\r\n   *\r\n   * @return the type of transfer or null if it's not well known\r\n   */\r\n  public getTransferActionEnum(): TransferAction {\r\n    return TransferAction_fromOfx(this.getTransferAction());\r\n  }\r\n\r\n  /**\r\n   * Gets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @return the position type\r\n   */\r\n  public getPositionType(): string {\r\n    return this.positionType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of position. One of \"LONG\" or \"SHORT\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @param positionType the position type\r\n   */\r\n  public setPositionType(positionType: string): void {\r\n    this.positionType = positionType;\r\n  }\r\n\r\n  /**\r\n   * Gets the position type as one of the well-known types.\r\n   *\r\n   * @return the position type or null if it's not well known\r\n   */\r\n  public getPositionTypeEnum(): PositionType {\r\n    return PositionType_fromOfx(this.getPositionType());\r\n  }\r\n\r\n  /**\r\n   * Gets the average cost basis for the securities being transfered. This is an optional field\r\n   * according to the ofx spec.\r\n   *\r\n   * @return the average cost basis\r\n   */\r\n  public getAverageCostBasis(): number {\r\n    return this.averageCostBasis;\r\n  }\r\n\r\n  /**\r\n   * Sets the average cost basis for the securities being transfered. This is an optional field\r\n   * according to the ofx spec.\r\n   *\r\n   * @param averageCostBasis the average cost basis\r\n   */\r\n  public setAverageCostBasis(averageCostBasis: number): void {\r\n    this.averageCostBasis = averageCostBasis;\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a required field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param unitPrice the per unit price\r\n   */\r\n  public setUnitPrice(unitPrice: number): void {\r\n    this.unitPrice = unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the original date of purchase for the securities. This is an optional field according to\r\n   * the ofx spec.\r\n   *\r\n   * @return the original date of purchase\r\n   */\r\n  public getPurchaseDate(): Date {\r\n    return this.purchaseDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the original date of purchase for the securities. This is an optional field according to\r\n   * the ofx spec.\r\n   *\r\n   * @param purchaseDate the original date of purchase\r\n   */\r\n  public setPurchaseDate(purchaseDate: Date): void {\r\n    this.purchaseDate = purchaseDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the state withholding\r\n   */\r\n  public get401kSource(): string {\r\n    return this.inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Sets the 401K source for the transfer. Should be one of \"PRETAX\", \"AFTERTAX\", \"MATCH\",\r\n   * \"PROFITSHARING\", \"ROLLOVER\", \"OTHERVEST\", \"OTHERNONVEST\".  This is an optional field\r\n   * according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param inv401kSource the state withholding\r\n   */\r\n  public set401kSource(inv401kSource: string): void {\r\n    this.inv401kSource = inv401kSource;\r\n  }\r\n\r\n  /**\r\n   * Gets the 401(k) source as one of the well-known types.\r\n   *\r\n   * @return the type of close or null if it's not well known.\r\n   */\r\n  public get401kSourceEnum(): Inv401KSource {\r\n    return Inv401KSource_fromOfx(this.get401kSource());\r\n  }\r\n}\r\n\r\nAggregate_add(TransferInvestmentTransaction, \"TRANSFER\");\r\nChildAggregate_add(TransferInvestmentTransaction, { required: true, order: 20, type: SecurityId, read: TransferInvestmentTransaction.prototype.getSecurityId, write: TransferInvestmentTransaction.prototype.setSecurityId });\r\nElement_add(TransferInvestmentTransaction, { name: \"SUBACCTSEC\", order: 30, type: String, read: TransferInvestmentTransaction.prototype.getSubAccountSecurity, write: TransferInvestmentTransaction.prototype.setSubAccountSecurity });\r\nElement_add(TransferInvestmentTransaction, { name: \"UNITS\", required: true, order: 40, type: Number, read: TransferInvestmentTransaction.prototype.getUnits, write: TransferInvestmentTransaction.prototype.setUnits });\r\nElement_add(TransferInvestmentTransaction, { name: \"TFERACTION\", required: true, order: 50, type: String, read: TransferInvestmentTransaction.prototype.getTransferAction, write: TransferInvestmentTransaction.prototype.setTransferAction });\r\nElement_add(TransferInvestmentTransaction, { name: \"POSTYPE\", required: true, order: 60, type: String, read: TransferInvestmentTransaction.prototype.getPositionType, write: TransferInvestmentTransaction.prototype.setPositionType });\r\nElement_add(TransferInvestmentTransaction, { name: \"AVGCOSTBASIS\", order: 70, type: Number, read: TransferInvestmentTransaction.prototype.getAverageCostBasis, write: TransferInvestmentTransaction.prototype.setAverageCostBasis });\r\nElement_add(TransferInvestmentTransaction, { name: \"UNITPRICE\", required: true, order: 80, type: Number, read: TransferInvestmentTransaction.prototype.getUnitPrice, write: TransferInvestmentTransaction.prototype.setUnitPrice });\r\nElement_add(TransferInvestmentTransaction, { name: \"DTPURCHASE\", order: 90, type: Date, read: TransferInvestmentTransaction.prototype.getPurchaseDate, write: TransferInvestmentTransaction.prototype.setPurchaseDate });\r\nElement_add(TransferInvestmentTransaction, { name: \"INV401KSOURCE\", order: 100, type: String, read: TransferInvestmentTransaction.prototype.get401kSource, write: TransferInvestmentTransaction.prototype.set401kSource });\r\n","\r\n/**\r\n * @see \"Section 7.2.1, OFX Spec\"\r\n */\r\nexport enum SynchronizationCapability {\r\n\r\n  FULL,\r\n\r\n  LITE\r\n}\r\n","import { ApplicationSecurity } from \"../ApplicationSecurity\";\r\nimport { SynchronizationCapability } from \"./SynchronizationCapability\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Core information about a specific version of a specific message set.\r\n *\r\n * @see \"Section 7.2.1, OFX Spec\"\r\n */\r\nexport class CoreMessageSetInfo {\r\n\r\n  private version: string;\r\n  private serviceProviderName: string;\r\n  private url: string;\r\n  private security: ApplicationSecurity;\r\n  private sslRequired: boolean;\r\n  private realm: string;\r\n  private language: string;\r\n  private syncCapability: SynchronizationCapability;\r\n  private fileBasedErrorRecoverySupport: boolean;\r\n  private timeout: number;\r\n\r\n  constructor() {\r\n    this.version = \"1\";\r\n    this.language = \"ENG\"; //Locale.US.getISO3Language();\r\n  }\r\n\r\n  /**\r\n   * Version of the message set.\r\n   *\r\n   * @return The version of the message set.\r\n   */\r\n  public getVersion(): string {\r\n    return this.version;\r\n  }\r\n\r\n  /**\r\n   * The version of the message set.\r\n   *\r\n   * @param version The version of the message set.\r\n   */\r\n  public setVersion(version: string): void {\r\n    this.version = version;\r\n  }\r\n\r\n  /**\r\n   * The name of the service provider (sometimes the message set processing is outsourced).\r\n   *\r\n   * @return The name of the service provider (sometimes the message set processing is outsourced).\r\n   */\r\n  public getServiceProviderName(): string {\r\n    return this.serviceProviderName;\r\n  }\r\n\r\n  /**\r\n   * The name of the service provider (sometimes the message set processing is outsourced).\r\n   *\r\n   * @param serviceProviderName The name of the service provider (sometimes the message set processing is outsourced).\r\n   */\r\n  public setServiceProviderName(serviceProviderName: string): void {\r\n    this.serviceProviderName = serviceProviderName;\r\n  }\r\n\r\n  /**\r\n   * The URL at which the message set is processed.\r\n   *\r\n   * @return The URL at which the message set is processed.\r\n   */\r\n  public getUrl(): string {\r\n    return this.url;\r\n  }\r\n\r\n  /**\r\n   * The URL at which the message set is processed.\r\n   *\r\n   * @param url The URL at which the message set is processed.\r\n   */\r\n  public setUrl(url: string): void {\r\n    this.url = url;\r\n  }\r\n\r\n  /**\r\n   * The application-level security required for this message set.\r\n   *\r\n   * @return The application-level security required for this message set.\r\n   */\r\n  public getSecurity(): ApplicationSecurity {\r\n    return this.security;\r\n  }\r\n\r\n  /**\r\n   * The application-level security required for this message set.\r\n   *\r\n   * @param security The application-level security required for this message set.\r\n   */\r\n  public setSecurity(security: ApplicationSecurity): void {\r\n    this.security = security;\r\n  }\r\n\r\n  /**\r\n   * Whether transport-level security is required for this message set.\r\n   *\r\n   * @return Whether transport-level security is required for this message set.\r\n   */\r\n  public getSslRequired(): boolean {\r\n    return this.sslRequired;\r\n  }\r\n\r\n  /**\r\n   * Whether transport-level security is required for this message set.\r\n   *\r\n   * @param sslRequired Whether transport-level security is required for this message set.\r\n   */\r\n  public setSslRequired(sslRequired: boolean): void {\r\n    this.sslRequired = sslRequired;\r\n  }\r\n\r\n  /**\r\n   * The sign-on realm.\r\n   *\r\n   * @return The sign-on realm.\r\n   */\r\n  public getRealm(): string {\r\n    return this.realm;\r\n  }\r\n\r\n  /**\r\n   * The sign-on realm.\r\n   *\r\n   * @param realm The sign-on realm.\r\n   */\r\n  public setRealm(realm: string): void {\r\n    this.realm = realm;\r\n  }\r\n\r\n  /**\r\n   * The language.\r\n   *\r\n   * @return The language.\r\n   * @see java.util.Locale#getISO3Language()\r\n   */\r\n  public getLanguage(): string {\r\n    return this.language;\r\n  }\r\n\r\n  /**\r\n   * The language.\r\n   *\r\n   * @param language The language.\r\n   */\r\n  public setLanguage(language: string): void {\r\n    this.language = language;\r\n  }\r\n\r\n  /**\r\n   * The synchronization capability for this message set.\r\n   *\r\n   * @return The synchronization capability for this message set.\r\n   */\r\n  public getSyncCapability(): SynchronizationCapability {\r\n    return this.syncCapability;\r\n  }\r\n\r\n  /**\r\n   * The synchronization capability for this message set.\r\n   *\r\n   * @param syncCapability The synchronization capability for this message set.\r\n   */\r\n  public setSyncCapability(syncCapability: SynchronizationCapability): void {\r\n    this.syncCapability = syncCapability;\r\n  }\r\n\r\n  /**\r\n   * Whether there exists support for resposne-file based error recovery.\r\n   *\r\n   * @return Whether there exists support for resposne-file based error recovery.\r\n   */\r\n  public getFileBasedErrorRecoverySupport(): boolean {\r\n    return this.fileBasedErrorRecoverySupport;\r\n  }\r\n\r\n  /**\r\n   * Whether there exists support for resposne-file based error recovery.\r\n   *\r\n   * @param fileBasedErrorRecoverySupport Whether there exists support for resposne-file based error recovery.\r\n   */\r\n  public setFileBasedErrorRecoverySupport(fileBasedErrorRecoverySupport: boolean): void {\r\n    this.fileBasedErrorRecoverySupport = fileBasedErrorRecoverySupport;\r\n  }\r\n\r\n  /**\r\n   * Gets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\r\n   * it. It likely is some type of timeout in seconds.\r\n   *\r\n   * @return the \"INTU.TIMEOUT\" property\r\n   */\r\n  public getIntuTimeout(): number {\r\n    return this.timeout;\r\n  }\r\n\r\n  /**\r\n   * Sets the \"INTU.TIMEOUT\" field. There's no public documentation of this field but E*TRADE sends\r\n   * it. It likely is some type of timeout in seconds.\r\n   *\r\n   * @param timeout the \"INTU.TIMEOUT\" property\r\n   */\r\n  public setIntuTimeout(timeout: number): void {\r\n    this.timeout = timeout;\r\n  }\r\n}\r\n\r\nAggregate_add( CoreMessageSetInfo, \"MSGSETCORE\" );\r\nElement_add(CoreMessageSetInfo, { name: \"VER\", required: true, order: 0, type: String, read: CoreMessageSetInfo.prototype.getVersion, write: CoreMessageSetInfo.prototype.setVersion });\r\nElement_add(CoreMessageSetInfo, { name: \"SPNAME\", order: 10, type: String, read: CoreMessageSetInfo.prototype.getServiceProviderName, write: CoreMessageSetInfo.prototype.setServiceProviderName });\r\nElement_add(CoreMessageSetInfo, { name: \"URL\", required: true, order: 20, type: String, read: CoreMessageSetInfo.prototype.getUrl, write: CoreMessageSetInfo.prototype.setUrl });\r\nElement_add(CoreMessageSetInfo, { name: \"OFXSEC\", required: true, order: 30, type: ApplicationSecurity, read: CoreMessageSetInfo.prototype.getSecurity, write: CoreMessageSetInfo.prototype.setSecurity });\r\nElement_add(CoreMessageSetInfo, { name: \"TRANSPSEC\", required: true, order: 40, type: Boolean, read: CoreMessageSetInfo.prototype.getSslRequired, write: CoreMessageSetInfo.prototype.setSslRequired });\r\nElement_add(CoreMessageSetInfo, { name: \"SIGNONREALM\", required: true, order: 50, type: String, read: CoreMessageSetInfo.prototype.getRealm, write: CoreMessageSetInfo.prototype.setRealm });\r\nElement_add(CoreMessageSetInfo, { name: \"LANGUAGE\", required: true, order: 60, type: String, read: CoreMessageSetInfo.prototype.getLanguage, write: CoreMessageSetInfo.prototype.setLanguage });\r\nElement_add(CoreMessageSetInfo, { name: \"SYNCMODE\", required: true, order: 70, type: SynchronizationCapability, read: CoreMessageSetInfo.prototype.getSyncCapability, write: CoreMessageSetInfo.prototype.setSyncCapability });\r\nElement_add(CoreMessageSetInfo, { name: \"RESPFILEER\", required: true, order: 80, type: Boolean, read: CoreMessageSetInfo.prototype.getFileBasedErrorRecoverySupport, write: CoreMessageSetInfo.prototype.setFileBasedErrorRecoverySupport });\r\nElement_add(CoreMessageSetInfo, { name: \"INTU.TIMEOUT\", order: 90, type: Number, read: CoreMessageSetInfo.prototype.getIntuTimeout, write: CoreMessageSetInfo.prototype.setIntuTimeout });\r\n","import { MessageSetProfile } from \"../MessageSetProfile\";\r\nimport { CoreMessageSetInfo } from \"./CoreMessageSetInfo\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { ApplicationSecurity } from \"../ApplicationSecurity\";\r\nimport { SynchronizationCapability } from \"./SynchronizationCapability\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Information specific to a version of a message set.\r\n *\r\n * @see \"Section 7.2.1, OFX Spec\"\r\n */\r\nexport abstract class VersionSpecificMessageSetInfo implements MessageSetProfile {\r\n\r\n  private core: CoreMessageSetInfo;\r\n\r\n  /**\r\n   * The information core.\r\n   *\r\n   * @return The information core.\r\n   */\r\n  public getCore(): CoreMessageSetInfo {\r\n    return this.core;\r\n  }\r\n\r\n  /**\r\n   * The information core.\r\n   *\r\n   * @param core The information core.\r\n   */\r\n  public setCore(core: CoreMessageSetInfo): void {\r\n    this.core = core;\r\n  }\r\n\r\n  /**\r\n   * The message set type.\r\n   *\r\n   * @return The message set type.\r\n   */\r\n  public abstract getMessageSetType(): MessageSetType;\r\n\r\n  public getVersion(): string {\r\n    return this.core != null ? this.core.getVersion() : null;\r\n  }\r\n\r\n  public getServiceProviderName(): string {\r\n    return this.core != null ? this.core.getServiceProviderName() : null;\r\n  }\r\n\r\n  public getUrl(): string {\r\n    return this.core != null ? this.core.getUrl() : null;\r\n  }\r\n\r\n  public getSecurity(): ApplicationSecurity {\r\n    return this.core != null ? this.core.getSecurity() : null;\r\n  }\r\n\r\n  public isSslRequired(): boolean {\r\n    return this.core != null && this.core.getSslRequired() != null ? this.core.getSslRequired() : true;\r\n  }\r\n\r\n  public getRealm(): string {\r\n    return this.core != null ? this.core.getRealm() : null;\r\n  }\r\n\r\n  public getLanguage(): string {\r\n    return this.core != null ? this.core.getLanguage() : null;\r\n  }\r\n\r\n  public getSyncCapability(): SynchronizationCapability {\r\n    return this.core != null ? this.core.getSyncCapability() : null;\r\n  }\r\n\r\n  public hasFileBasedErrorRecoverySupport(): boolean {\r\n    return this.core != null && this.core.getFileBasedErrorRecoverySupport() != null ? this.core.getFileBasedErrorRecoverySupport() : false;\r\n  }\r\n}\r\n\r\nChildAggregate_add(VersionSpecificMessageSetInfo, { order: 0, type: CoreMessageSetInfo, read: VersionSpecificMessageSetInfo.prototype.getCore, write: VersionSpecificMessageSetInfo.prototype.setCore });\r\n","import { VersionSpecificMessageSetInfo } from \"./VersionSpecificMessageSetInfo\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Information about a message set.\r\n *\r\n * @see \"Section 7.2.1, OFX Spec\"\r\n */\r\nexport abstract class AbstractMessageSetInfo {\r\n\r\n  private versionSpecificInformationList: Array<VersionSpecificMessageSetInfo>;\r\n\r\n  /**\r\n   * List of information about a message set for each version supported.\r\n   *\r\n   * @return List of information about a message set for each version supported.\r\n   */\r\n  public getVersionSpecificInformationList(): Array<VersionSpecificMessageSetInfo> {\r\n    return this.versionSpecificInformationList;\r\n  }\r\n\r\n  /**\r\n   * List of information about a message set for each version supported.\r\n   *\r\n   * @param versionSpecificInformationList List of information about a message set for each version supported.\r\n   */\r\n  public setVersionSpecificInformationList(versionSpecificInformationList: Array<VersionSpecificMessageSetInfo>): void {\r\n    this.versionSpecificInformationList = versionSpecificInformationList;\r\n  }\r\n}\r\n\r\nChildAggregate_add(AbstractMessageSetInfo, { order: 0, type: Array, collectionEntryType: VersionSpecificMessageSetInfo, read: AbstractMessageSetInfo.prototype.getVersionSpecificInformationList, write: AbstractMessageSetInfo.prototype.setVersionSpecificInformationList });\r\n","\r\n/**\r\n * @see \"Section 7.2.2, OFX Spec\"\r\n */\r\nexport enum CharacterType {\r\n\r\n  ALPHAONLY,\r\n\r\n  NUMERICONLY,\r\n\r\n  ALPHAORNUMERIC,\r\n\r\n  ALPHAANDNUMERIC\r\n}\r\n","import { AbstractMessageSetInfo } from \"./AbstractMessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 7.2, OFX Spec\"\r\n */\r\nexport class MessageSetInfoList {\r\n\r\n  private informationList: Array<AbstractMessageSetInfo>;\r\n\r\n  /**\r\n   * The list of information for each message set.\r\n   *\r\n   * @return The list of information for each message set.\r\n   */\r\n  public getInformationList(): Array<AbstractMessageSetInfo> {\r\n    return this.informationList;\r\n  }\r\n\r\n  /**\r\n   * The list of information for each message set.\r\n   *\r\n   * @param informationList The list of information for each message set.\r\n   */\r\n  public setInformationList(informationList: Array<AbstractMessageSetInfo>): void {\r\n    this.informationList = informationList;\r\n  }\r\n}\r\n\r\nAggregate_add( MessageSetInfoList, \"MSGSETLIST\" );\r\nChildAggregate_add(MessageSetInfoList, { order: 0, type: Array, collectionEntryType: AbstractMessageSetInfo, read: MessageSetInfoList.prototype.getInformationList, write: MessageSetInfoList.prototype.setInformationList });\r\n","import { SignonProfile } from \"../SignonProfile\";\r\nimport { CharacterType } from \"./CharacterType\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Sign-on information\r\n *\r\n * @see \"Section 7.2.2, OFX Spec\"\r\n */\r\nexport class SignonInfo implements SignonProfile {\r\n\r\n  private realm: string;\r\n  private minPasswordCharacters: number;\r\n  private maxPasswordCharacters: number;\r\n  private passwordCharacterType: CharacterType;\r\n  private passwordCaseSensitive: boolean;\r\n  private passwordSpecialCharsAllowed: boolean;\r\n  private passwordSpacesAllowed: boolean;\r\n  private changePasswordSupported: boolean;\r\n  private changePasswordFirstRequired: boolean;\r\n  private additionalCredientialsLabel1: string;\r\n  private additionalCredientialsLabel2: string;\r\n  private clientUIDRequired: boolean;\r\n  private authTokenRequiredForFirstSignon: boolean;\r\n  private authTokenLabel: string;\r\n  private authTokenInfoURL: string;\r\n  private mfaSupported: boolean;\r\n  private mfaChallengeRequiredForFirstSignon: boolean;\r\n\r\n  constructor() {\r\n    this.passwordCaseSensitive = true;\r\n    this.passwordSpecialCharsAllowed = true;\r\n    this.passwordSpacesAllowed = true;\r\n  }\r\n\r\n  /**\r\n   * The name of the sign-on realm.\r\n   *\r\n   * @return The name of the sign-on realm.\r\n   */\r\n  public getRealm(): string {\r\n    return this.realm;\r\n  }\r\n\r\n  /**\r\n   * The name of the sign-on realm.\r\n   *\r\n   * @param realm The name of the sign-on realm.\r\n   */\r\n  public setRealm(realm: string): void {\r\n    this.realm = realm;\r\n  }\r\n\r\n  /**\r\n   * The minimum number of password characters.\r\n   *\r\n   * @return The minimum number of password characters.\r\n   */\r\n  public getMinPasswordCharacters(): number {\r\n    return this.minPasswordCharacters;\r\n  }\r\n\r\n  /**\r\n   * The minimum number of password characters.\r\n   *\r\n   * @param minPasswordCharacters The minimum number of password characters.\r\n   */\r\n  public setMinPasswordCharacters(minPasswordCharacters: number): void {\r\n    this.minPasswordCharacters = minPasswordCharacters;\r\n  }\r\n\r\n  /**\r\n   * The maximum number of password characters.\r\n   *\r\n   * @return The maximum number of password characters.\r\n   */\r\n  public getMaxPasswordCharacters(): number {\r\n    return this.maxPasswordCharacters;\r\n  }\r\n\r\n  /**\r\n   * The maximum number of password characters.\r\n   *\r\n   * @param maxPasswordCharacters The maximum number of password characters.\r\n   */\r\n  public setMaxPasswordCharacters(maxPasswordCharacters: number): void {\r\n    this.maxPasswordCharacters = maxPasswordCharacters;\r\n  }\r\n\r\n  /**\r\n   * The type of password characters supported.\r\n   *\r\n   * @return The type of password characters supported.\r\n   */\r\n  public getPasswordCharacterType(): CharacterType {\r\n    return this.passwordCharacterType;\r\n  }\r\n\r\n  /**\r\n   * The type of password characters supported.\r\n   *\r\n   * @param passwordCharacterType The type of password characters supported.\r\n   */\r\n  public setPasswordCharacterType(passwordCharacterType: CharacterType): void {\r\n    this.passwordCharacterType = passwordCharacterType;\r\n  }\r\n\r\n  /**\r\n   * Whether the password is case-sensitive.\r\n   *\r\n   * @return Whether the password is case-sensitive.\r\n   */\r\n  public getPasswordCaseSensitive(): boolean {\r\n    return this.passwordCaseSensitive;\r\n  }\r\n\r\n  /**\r\n   * Whether the password is case-sensitive.\r\n   *\r\n   * @param passwordCaseSensitive Whether the password is case-sensitive.\r\n   */\r\n  public setPasswordCaseSensitive(passwordCaseSensitive: boolean): void {\r\n    this.passwordCaseSensitive = passwordCaseSensitive;\r\n  }\r\n\r\n  /**\r\n   * Whether special characters are allowed in the password.\r\n   *\r\n   * @return Whether special characters are allowed in the password.\r\n   */\r\n  public getPasswordSpecialCharsAllowed(): boolean {\r\n    return this.passwordSpecialCharsAllowed;\r\n  }\r\n\r\n  /**\r\n   * Whether special characters are allowed in the password.\r\n   *\r\n   * @param passwordSpecialCharsAllowed Whether special characters are allowed in the password.\r\n   */\r\n  public setPasswordSpecialCharsAllowed(passwordSpecialCharsAllowed: boolean): void {\r\n    this.passwordSpecialCharsAllowed = passwordSpecialCharsAllowed;\r\n  }\r\n\r\n  /**\r\n   * Whether spaces are allowed in the password.\r\n   *\r\n   * @return Whether spaces are allowed in the password.\r\n   */\r\n  public getPasswordSpacesAllowed(): boolean {\r\n    return this.passwordSpacesAllowed;\r\n  }\r\n\r\n  /**\r\n   * Whether spaces are allowed in the password.\r\n   *\r\n   * @param passwordSpacesAllowed Whether spaces are allowed in the password.\r\n   */\r\n  public setPasswordSpacesAllowed(passwordSpacesAllowed: boolean): void {\r\n    this.passwordSpacesAllowed = passwordSpacesAllowed;\r\n  }\r\n\r\n  /**\r\n   * Whether the server can process a password change request for this realm.\r\n   *\r\n   * @return Whether the server can process a password change request for this realm.\r\n   */\r\n  public getChangePasswordSupported(): boolean {\r\n    return this.changePasswordSupported;\r\n  }\r\n\r\n  /**\r\n   * Whether the server can process a password change request for this realm.\r\n   *\r\n   * @param changePasswordSupported Whether the server can process a password change request for this realm.\r\n   */\r\n  public setChangePasswordSupported(changePasswordSupported: boolean): void {\r\n    this.changePasswordSupported = changePasswordSupported;\r\n  }\r\n\r\n  /**\r\n   * Whether the server requires the user to change their password as part of their first signon.\r\n   *\r\n   * @return Whether the server requires the user to change their password as part of their first signon.\r\n   */\r\n  public getChangePasswordFirstRequired(): boolean {\r\n    return this.changePasswordFirstRequired;\r\n  }\r\n\r\n  /**\r\n   * Whether the server requires the user to change their password as part of their first signon.\r\n   *\r\n   * @param changePasswordFirstRequired Whether the server requires the user to change their password as part of their first signon.\r\n   */\r\n  public setChangePasswordFirstRequired(changePasswordFirstRequired: boolean): void {\r\n    this.changePasswordFirstRequired = changePasswordFirstRequired;\r\n  }\r\n\r\n  /**\r\n   * Label for a set of additional credentials that the user must supply.\r\n   *\r\n   * @return Label for a set of additional credentials that the user must supply.\r\n   */\r\n  public getAdditionalCredientialsLabel1(): string {\r\n    return this.additionalCredientialsLabel1;\r\n  }\r\n\r\n  /**\r\n   * Label for a set of additional credentials that the user must supply.\r\n   *\r\n   * @param additionalCredientialsLabel1 Label for a set of additional credentials that the user must supply.\r\n   */\r\n  public setAdditionalCredientialsLabel1(additionalCredientialsLabel1: string): void {\r\n    this.additionalCredientialsLabel1 = additionalCredientialsLabel1;\r\n  }\r\n\r\n  /**\r\n   * Label for a set of additional credentials that the user must supply.\r\n   *\r\n   * @return Label for a set of additional credentials that the user must supply.\r\n   */\r\n  public getAdditionalCredientialsLabel2(): string {\r\n    return this.additionalCredientialsLabel2;\r\n  }\r\n\r\n  /**\r\n   * Label for a set of additional credentials that the user must supply.\r\n   *\r\n   * @param additionalCredientialsLabel2 Label for a set of additional credentials that the user must supply.\r\n   */\r\n  public setAdditionalCredientialsLabel2(additionalCredientialsLabel2: string): void {\r\n    this.additionalCredientialsLabel2 = additionalCredientialsLabel2;\r\n  }\r\n\r\n  /**\r\n   * Whether a client UID is required for teh sign-on.\r\n   *\r\n   * @return Whether a client UID is required for teh sign-on.\r\n   */\r\n  public getClientUIDRequired(): boolean {\r\n    return this.clientUIDRequired;\r\n  }\r\n\r\n  /**\r\n   * Whether a client UID is required for teh sign-on.\r\n   *\r\n   * @param clientUIDRequired Whether a client UID is required for teh sign-on.\r\n   */\r\n  public setClientUIDRequired(clientUIDRequired: boolean): void {\r\n    this.clientUIDRequired = clientUIDRequired;\r\n  }\r\n\r\n  /**\r\n   * Whether an auth token is required for the sign-on.\r\n   *\r\n   * @return Whether an auth token is required for the sign-on.\r\n   */\r\n  public getAuthTokenRequiredForFirstSignon(): boolean {\r\n    return this.authTokenRequiredForFirstSignon;\r\n  }\r\n\r\n  /**\r\n   * Whether an auth token is required for the sign-on.\r\n   *\r\n   * @param authTokenRequiredForFirstSignon\r\n   *         Whether an auth token is required for the sign-on.\r\n   */\r\n  public setAuthTokenRequiredForFirstSignon(authTokenRequiredForFirstSignon: boolean): void {\r\n    this.authTokenRequiredForFirstSignon = authTokenRequiredForFirstSignon;\r\n  }\r\n\r\n  /**\r\n   * The label of the auth token.\r\n   *\r\n   * @return The label of the auth token.\r\n   */\r\n  public getAuthTokenLabel(): string {\r\n    return this.authTokenLabel;\r\n  }\r\n\r\n  /**\r\n   * The label of the auth token.\r\n   *\r\n   * @param authTokenLabel The label of the auth token.\r\n   */\r\n  public setAuthTokenLabel(authTokenLabel: string): void {\r\n    this.authTokenLabel = authTokenLabel;\r\n  }\r\n\r\n  /**\r\n   * The URL for the auth token information.\r\n   *\r\n   * @return The URL for the auth token information.\r\n   */\r\n  public getAuthTokenInfoURL(): string {\r\n    return this.authTokenInfoURL;\r\n  }\r\n\r\n  /**\r\n   * The URL for the auth token information.\r\n   *\r\n   * @param authTokenInfoURL The URL for the auth token information.\r\n   */\r\n  public setAuthTokenInfoURL(authTokenInfoURL: string): void {\r\n    this.authTokenInfoURL = authTokenInfoURL;\r\n  }\r\n\r\n  /**\r\n   * Whether MFA is supported.\r\n   *\r\n   * @return Whether MFA is supported.\r\n   */\r\n  public getMfaSupported(): boolean {\r\n    return this.mfaSupported;\r\n  }\r\n\r\n  /**\r\n   * Whether MFA is supported.\r\n   *\r\n   * @param mfaSupported Whether MFA is supported.\r\n   */\r\n  public setMfaSupported(mfaSupported: boolean): void {\r\n    this.mfaSupported = mfaSupported;\r\n  }\r\n\r\n  /**\r\n   * Whether an MFA challenge request is required for the first sign-on into this realm.\r\n   *\r\n   * @return Whether an MFA challenge request is required for the first sign-on into this realm.\r\n   */\r\n  public getMfaChallengeRequiredForFirstSignon(): boolean {\r\n    return this.mfaChallengeRequiredForFirstSignon;\r\n  }\r\n\r\n  /**\r\n   * Whether an MFA challenge request is required for the first sign-on into this realm.\r\n   *\r\n   * @param mfaChallengeRequiredForFirstSignon\r\n   *         Whether an MFA challenge request is required for the first sign-on into this realm.\r\n   */\r\n  public setMfaChallengeRequiredForFirstSignon(mfaChallengeRequiredForFirstSignon: boolean): void {\r\n    this.mfaChallengeRequiredForFirstSignon = mfaChallengeRequiredForFirstSignon;\r\n  }\r\n}\r\n\r\nAggregate_add( SignonInfo, \"SIGNONINFO\" );\r\nElement_add(SignonInfo, { name: \"SIGNONREALM\", required: true, order: 0, type: String, read: SignonInfo.prototype.getRealm, write: SignonInfo.prototype.setRealm });\r\nElement_add(SignonInfo, { name: \"MIN\", required: true, order: 10, type: Number, read: SignonInfo.prototype.getMinPasswordCharacters, write: SignonInfo.prototype.setMinPasswordCharacters });\r\nElement_add(SignonInfo, { name: \"MAX\", required: true, order: 20, type: Number, read: SignonInfo.prototype.getMaxPasswordCharacters, write: SignonInfo.prototype.setMaxPasswordCharacters });\r\nElement_add(SignonInfo, { name: \"CHARTYPE\", required: true, order: 30, type: CharacterType, read: SignonInfo.prototype.getPasswordCharacterType, write: SignonInfo.prototype.setPasswordCharacterType });\r\nElement_add(SignonInfo, { name: \"CASESEN\", required: true, order: 40, type: Boolean, read: SignonInfo.prototype.getPasswordCaseSensitive, write: SignonInfo.prototype.setPasswordCaseSensitive });\r\nElement_add(SignonInfo, { name: \"SPECIAL\", required: true, order: 50, type: Boolean, read: SignonInfo.prototype.getPasswordSpecialCharsAllowed, write: SignonInfo.prototype.setPasswordSpecialCharsAllowed });\r\nElement_add(SignonInfo, { name: \"SPACES\", required: true, order: 60, type: Boolean, read: SignonInfo.prototype.getPasswordSpacesAllowed, write: SignonInfo.prototype.setPasswordSpacesAllowed });\r\nElement_add(SignonInfo, { name: \"PINCH\", required: true, order: 70, type: Boolean, read: SignonInfo.prototype.getChangePasswordSupported, write: SignonInfo.prototype.setChangePasswordSupported });\r\nElement_add(SignonInfo, { name: \"CHGPINFIRST\", required: true, order: 80, type: Boolean, read: SignonInfo.prototype.getChangePasswordFirstRequired, write: SignonInfo.prototype.setChangePasswordFirstRequired });\r\nElement_add(SignonInfo, { name: \"USERCRED1LABEL\", order: 90, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel1, write: SignonInfo.prototype.setAdditionalCredientialsLabel1 });\r\nElement_add(SignonInfo, { name: \"USERCRED2LABEL\", order: 100, type: String, read: SignonInfo.prototype.getAdditionalCredientialsLabel2, write: SignonInfo.prototype.setAdditionalCredientialsLabel2 });\r\nElement_add(SignonInfo, { name: \"CLIENTUIDREQ\", order: 110, type: Boolean, read: SignonInfo.prototype.getClientUIDRequired, write: SignonInfo.prototype.setClientUIDRequired });\r\nElement_add(SignonInfo, { name: \"AUTHTOKENFIRST\", order: 120, type: Boolean, read: SignonInfo.prototype.getAuthTokenRequiredForFirstSignon, write: SignonInfo.prototype.setAuthTokenRequiredForFirstSignon });\r\nElement_add(SignonInfo, { name: \"AUTHTOKENLABEL\", order: 130, type: String, read: SignonInfo.prototype.getAuthTokenLabel, write: SignonInfo.prototype.setAuthTokenLabel });\r\nElement_add(SignonInfo, { name: \"AUTHTOKENINFOURL\", order: 140, type: String, read: SignonInfo.prototype.getAuthTokenInfoURL, write: SignonInfo.prototype.setAuthTokenInfoURL });\r\nElement_add(SignonInfo, { name: \"MFACHALLENGESUPT\", order: 150, type: Boolean, read: SignonInfo.prototype.getMfaSupported, write: SignonInfo.prototype.setMfaSupported });\r\nElement_add(SignonInfo, { name: \"MFACHALLENGEFIRST\", order: 160, type: Boolean, read: SignonInfo.prototype.getMfaChallengeRequiredForFirstSignon, write: SignonInfo.prototype.setMfaChallengeRequiredForFirstSignon });\r\n","import { SignonInfo } from \"./SignonInfo\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * List of signon information.\r\n *\r\n * @see \"Section 7.2.2, OFX Spec\"\r\n */\r\nexport class SignonInfoList {\r\n\r\n  private infoList: Array<SignonInfo>;\r\n\r\n  /**\r\n   * List of sign-on information.\r\n   *\r\n   * @return List of sign-on information.\r\n   */\r\n  public getInfoList(): Array<SignonInfo> {\r\n    return this.infoList;\r\n  }\r\n\r\n  /**\r\n   * List of sign-on information.\r\n   *\r\n   * @param infoList List of sign-on information.\r\n   */\r\n  public setInfoList(infoList: Array<SignonInfo>): void {\r\n    this.infoList = infoList;\r\n  }\r\n}\r\n\r\nAggregate_add( SignonInfoList, \"SIGNONINFOLIST\" );\r\nChildAggregate_add(SignonInfoList, { order: 0, type: Array, collectionEntryType: SignonInfo, read: SignonInfoList.prototype.getInfoList, write: SignonInfoList.prototype.setInfoList });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { FinancialInstitutionProfile } from \"../../../client/FinancialInstitutionProfile\";\r\nimport { MessageSetInfoList } from \"./MessageSetInfoList\";\r\nimport { SignonInfoList } from \"./SignonInfoList\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { MessageSetProfile } from \"../MessageSetProfile\";\r\nimport { OFXException } from \"../../../OFXException\";\r\nimport { SignonProfile } from \"../SignonProfile\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n//import java.net.URL;\r\n\r\n/**\r\n * @see \"Section 7.2 OFX Spec\"\r\n */\r\nexport class ProfileResponse extends ResponseMessage implements FinancialInstitutionProfile {\r\n\r\n  private messageSetList: MessageSetInfoList;\r\n  private signonInfoList: SignonInfoList;\r\n  private timestamp: Date;\r\n  private financialInstitutionName: string;\r\n  private address1: string;\r\n  private address2: string;\r\n  private address3: string;\r\n  private city: string;\r\n  private state: string;\r\n  private zip: string;\r\n  private country: string;\r\n  private customerServicePhone: string;\r\n  private technicalSupportPhone: string;\r\n  private fax: string;\r\n  private siteURL: string;\r\n  private email: string;\r\n\r\n  /**\r\n   * List of message set information.\r\n   * @return List of message set information.\r\n   */\r\n  public getMessageSetList(): MessageSetInfoList {\r\n    return this.messageSetList;\r\n  }\r\n\r\n  /**\r\n   * List of message set information.\r\n   *\r\n   * @param messageSetList List of message set information.\r\n   */\r\n  public setMessageSetList(messageSetList: MessageSetInfoList): void {\r\n    this.messageSetList = messageSetList;\r\n  }\r\n\r\n  /**\r\n   * List of signon information.\r\n   *\r\n   * @return List of signon information.\r\n   */\r\n  public getSignonInfoList(): SignonInfoList {\r\n    return this.signonInfoList;\r\n  }\r\n\r\n  /**\r\n   * List of signon information.\r\n   *\r\n   * @param signonInfoList List of signon information.\r\n   */\r\n  public setSignonInfoList(signonInfoList: SignonInfoList): void {\r\n    this.signonInfoList = signonInfoList;\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessageName(): string {\r\n    return \"profile\";\r\n  }\r\n\r\n  // Inherited.\r\n  public getLastUpdated(): Date {\r\n    return this.getTimestamp();\r\n  }\r\n\r\n  /**\r\n   * The timestamp of this profile update.\r\n   *\r\n   * @return The timestamp of this profile update.\r\n   */\r\n  public getTimestamp(): Date {\r\n    return this.timestamp;\r\n  }\r\n\r\n  /**\r\n   * The timestamp of this profile update.\r\n   *\r\n   * @param timestamp The timestamp of this profile update.\r\n   */\r\n  public setTimestamp(timestamp: Date): void {\r\n    this.timestamp = timestamp;\r\n  }\r\n\r\n  /**\r\n   * The name of the financial institution.\r\n   *\r\n   * @return The name of the financial institution.\r\n   */\r\n  public getFinancialInstitutionName(): string {\r\n    return this.financialInstitutionName;\r\n  }\r\n\r\n  /**\r\n   * The name of the financial institution.\r\n   *\r\n   * @param financialInstitutionName The name of the financial institution.\r\n   */\r\n  public setFinancialInstitutionName(financialInstitutionName: string): void {\r\n    this.financialInstitutionName = financialInstitutionName;\r\n  }\r\n\r\n  /**\r\n   * The address of the financial institution.\r\n   *\r\n   * @return The address of the financial institution.\r\n   */\r\n  public getAddress1(): string {\r\n    return this.address1;\r\n  }\r\n\r\n  /**\r\n   * The address of the financial institution.\r\n   *\r\n   * @param address1 The address of the financial institution.\r\n   */\r\n  public setAddress1(address1: string): void {\r\n    this.address1 = address1;\r\n  }\r\n\r\n  /**\r\n   * The address of the financial institution.\r\n   *\r\n   * @return The address of the financial institution.\r\n   */\r\n  public getAddress2(): string {\r\n    return this.address2;\r\n  }\r\n\r\n  /**\r\n   * The address of the financial institution.\r\n   *\r\n   * @param address2 The address of the financial institution.\r\n   */\r\n  public setAddress2(address2: string): void {\r\n    this.address2 = address2;\r\n  }\r\n\r\n  /**\r\n   * The address of the financial institution.\r\n   *\r\n   * @return The address of the financial institution.\r\n   */\r\n  public getAddress3(): string {\r\n    return this.address3;\r\n  }\r\n\r\n  /**\r\n   * The address of the financial institution.\r\n   *\r\n   * @param address3 The address of the financial institution.\r\n   */\r\n  public setAddress3(address3: string): void {\r\n    this.address3 = address3;\r\n  }\r\n\r\n  /**\r\n   * The city of the financial institution.\r\n   *\r\n   * @return The city of the financial institution.\r\n   */\r\n  public getCity(): string {\r\n    return this.city;\r\n  }\r\n\r\n  /**\r\n   * The city of the financial institution.\r\n   *\r\n   * @param city The city of the financial institution.\r\n   */\r\n  public setCity(city: string): void {\r\n    this.city = city;\r\n  }\r\n\r\n  /**\r\n   * The state of this financial institution.\r\n   *\r\n   * @return The state of this financial institution.\r\n   */\r\n  public getState(): string {\r\n    return this.state;\r\n  }\r\n\r\n  /**\r\n   * The state of this financial institution.\r\n   *\r\n   * @param state The state of this financial institution.\r\n   */\r\n  public setState(state: string): void {\r\n    this.state = state;\r\n  }\r\n\r\n  /**\r\n   * The postal code of this financial institution.\r\n   *\r\n   * @return The postal code of this financial institution.\r\n   */\r\n  public getZip(): string {\r\n    return this.zip;\r\n  }\r\n\r\n  /**\r\n   * The postal code of this financial institution.\r\n   *\r\n   * @param zip The postal code of this financial institution.\r\n   */\r\n  public setZip(zip: string): void {\r\n    this.zip = zip;\r\n  }\r\n\r\n  /**\r\n   * The country code for this financial institution.\r\n   *\r\n   * @return The country code for this financial institution.\r\n   * @see java.util.Locale#getISO3Country()\r\n   */\r\n  public getCountry(): string {\r\n    return this.country;\r\n  }\r\n\r\n  /**\r\n   * The country code for this financial institution.\r\n   *\r\n   * @param country The country code for this financial institution.\r\n   */\r\n  public setCountry(country: string): void {\r\n    this.country = country;\r\n  }\r\n\r\n  /**\r\n   * The phone number to customer service.\r\n   *\r\n   * @return The phone number to customer service.\r\n   */\r\n  public getCustomerServicePhone(): string {\r\n    return this.customerServicePhone;\r\n  }\r\n\r\n  /**\r\n   * The phone number to customer service.\r\n   *\r\n   * @param customerServicePhone The phone number to customer service.\r\n   */\r\n  public setCustomerServicePhone(customerServicePhone: string): void {\r\n    this.customerServicePhone = customerServicePhone;\r\n  }\r\n\r\n  /**\r\n   * The phone number to tech support.\r\n   *\r\n   * @return The phone number to tech support.\r\n   */\r\n  public getTechnicalSupportPhone(): string {\r\n    return this.technicalSupportPhone;\r\n  }\r\n\r\n  /**\r\n   * The phone number to tech support.\r\n   *\r\n   * @param technicalSupportPhone The phone number to tech support.\r\n   */\r\n  public setTechnicalSupportPhone(technicalSupportPhone: string): void {\r\n    this.technicalSupportPhone = technicalSupportPhone;\r\n  }\r\n\r\n  /**\r\n   * The fax number.\r\n   *\r\n   * @return The fax number.\r\n   */\r\n  public getFax(): string {\r\n    return this.fax;\r\n  }\r\n\r\n  /**\r\n   * The fax number.\r\n   *\r\n   * @param fax The fax number.\r\n   */\r\n  public setFax(fax: string): void {\r\n    this.fax = fax;\r\n  }\r\n\r\n  /**\r\n   * URL for the financial institution.\r\n   *\r\n   * @return URL for the financial institution.\r\n   */\r\n  public getSiteURL(): string {\r\n    return this.siteURL;\r\n  }\r\n\r\n  /**\r\n   * URL for the financial institution.\r\n   *\r\n   * @param siteURL URL for the financial institution.\r\n   */\r\n  public setSiteURL(siteURL: string): void {\r\n    this.siteURL = siteURL;\r\n  }\r\n\r\n  /**\r\n   * The email for this FI\r\n   *\r\n   * @return The email for this FI\r\n   */\r\n  public getEmail(): string {\r\n    return this.email;\r\n  }\r\n\r\n  /**\r\n   * The email for this FI\r\n   *\r\n   * @param email The email for this FI\r\n   */\r\n  public setEmail(email: string): void {\r\n    this.email = email;\r\n  }\r\n\r\n  public getMessageSetProfile(type: MessageSetType, version: string = null): MessageSetProfile {\r\n    return (version === null) ?\r\n      this.getMessageSetProfile_noversion(type) :\r\n      this.getMessageSetProfile_version(type, version);\r\n  }\r\n\r\n  public getMessageSetProfile_noversion(type: MessageSetType): MessageSetProfile {\r\n    var profiles: Array<MessageSetProfile> = this.getProfiles(type);\r\n    if (profiles.length > 1) {\r\n      throw new OFXException(\"More than one profile of type \" + type);\r\n    }\r\n    else if (profiles.length == 0) {\r\n      return null;\r\n    }\r\n    else {\r\n      return profiles[0];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all the profiles of the specified type.\r\n   *\r\n   * @param type The type.\r\n   * @return The profiles.\r\n   */\r\n  protected getProfiles(type: MessageSetType): Array<MessageSetProfile> {\r\n    var profiles: Array<MessageSetProfile> = new Array<MessageSetProfile>();\r\n    if (this.getMessageSetList() != null && this.getMessageSetList().getInformationList() != null) {\r\n      for (var info of this.getMessageSetList().getInformationList()) {\r\n        if (info.getVersionSpecificInformationList() != null) {\r\n          for (var versionSpecificInfo of info.getVersionSpecificInformationList()) {\r\n            if (versionSpecificInfo.getMessageSetType() == type) {\r\n              profiles.push(versionSpecificInfo);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return profiles;\r\n  }\r\n\r\n  public getMessageSetProfile_version(type: MessageSetType, version: string): MessageSetProfile {\r\n    for (var profile of this.getProfiles(type)) {\r\n      if (version == null) {\r\n        if (profile.getVersion() == null) {\r\n          return profile;\r\n        }\r\n      }\r\n      else if (version === profile.getVersion()) {\r\n        return profile;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  public getSignonProfile(messageSet: MessageSetProfile): SignonProfile {\r\n    if (this.getSignonInfoList() != null && this.getSignonInfoList().getInfoList() != null) {\r\n      for (var signonInfo of this.getSignonInfoList().getInfoList()) {\r\n        if (messageSet.getRealm() == null) {\r\n          if (signonInfo.getRealm() == null) {\r\n            return signonInfo;\r\n          }\r\n        }\r\n        else if (messageSet.getRealm() === signonInfo.getRealm()) {\r\n          return signonInfo;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nAggregate_add( ProfileResponse, \"PROFRS\" );\r\nChildAggregate_add(ProfileResponse, { order: 0, type: MessageSetInfoList, read: ProfileResponse.prototype.getMessageSetList, write: ProfileResponse.prototype.setMessageSetList });\r\nChildAggregate_add(ProfileResponse, { order: 10, type: SignonInfoList, read: ProfileResponse.prototype.getSignonInfoList, write: ProfileResponse.prototype.setSignonInfoList });\r\nElement_add(ProfileResponse, { name: \"DTPROFUP\", order: 20, type: Date, read: ProfileResponse.prototype.getTimestamp, write: ProfileResponse.prototype.setTimestamp });\r\nElement_add(ProfileResponse, { name: \"FINAME\", order: 30, type: String, read: ProfileResponse.prototype.getFinancialInstitutionName, write: ProfileResponse.prototype.setFinancialInstitutionName });\r\nElement_add(ProfileResponse, { name: \"ADDR1\", required: true, order: 40, type: String, read: ProfileResponse.prototype.getAddress1, write: ProfileResponse.prototype.setAddress1 });\r\nElement_add(ProfileResponse, { name: \"ADDR2\", order: 50, type: String, read: ProfileResponse.prototype.getAddress2, write: ProfileResponse.prototype.setAddress2 });\r\nElement_add(ProfileResponse, { name: \"ADDR3\", order: 60, type: String, read: ProfileResponse.prototype.getAddress3, write: ProfileResponse.prototype.setAddress3 });\r\nElement_add(ProfileResponse, { name: \"CITY\", required: true, order: 70, type: String, read: ProfileResponse.prototype.getCity, write: ProfileResponse.prototype.setCity });\r\nElement_add(ProfileResponse, { name: \"STATE\", required: true, order: 80, type: String, read: ProfileResponse.prototype.getState, write: ProfileResponse.prototype.setState });\r\nElement_add(ProfileResponse, { name: \"POSTALCODE\", required: true, order: 90, type: String, read: ProfileResponse.prototype.getZip, write: ProfileResponse.prototype.setZip });\r\nElement_add(ProfileResponse, { name: \"COUNTRY\", required: true, order: 100, type: String, read: ProfileResponse.prototype.getCountry, write: ProfileResponse.prototype.setCountry });\r\nElement_add(ProfileResponse, { name: \"CSPHONE\", order: 110, type: String, read: ProfileResponse.prototype.getCustomerServicePhone, write: ProfileResponse.prototype.setCustomerServicePhone });\r\nElement_add(ProfileResponse, { name: \"TSPHONE\", order: 120, type: String, read: ProfileResponse.prototype.getTechnicalSupportPhone, write: ProfileResponse.prototype.setTechnicalSupportPhone });\r\nElement_add(ProfileResponse, { name: \"FAXPHONE\", order: 130, type: String, read: ProfileResponse.prototype.getFax, write: ProfileResponse.prototype.setFax });\r\nElement_add(ProfileResponse, { name: \"URL\", order: 140, type: String, read: ProfileResponse.prototype.getSiteURL, write: ProfileResponse.prototype.setSiteURL });\r\nElement_add(ProfileResponse, { name: \"EMAIL\", order: 150, type: String, read: ProfileResponse.prototype.getEmail, write: ProfileResponse.prototype.setEmail });\r\n","import { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\r\nimport { ProfileResponse } from \"./ProfileResponse\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class ProfileResponseTransaction extends TransactionWrappedResponseMessage<ProfileResponse> {\r\n\r\n  private message: ProfileResponse;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): ProfileResponse {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   */\r\n  public setMessage(message: ProfileResponse): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): ProfileResponse {\r\n    return this.getMessage();\r\n  }\r\n}\r\n\r\nAggregate_add(ProfileResponseTransaction, \"PROFTRNRS\");\r\nChildAggregate_add(ProfileResponseTransaction, { required: true, order: 30, type: ProfileResponse, read: ProfileResponseTransaction.prototype.getMessage, write: ProfileResponseTransaction.prototype.setMessage });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\r\nimport { ProfileResponseTransaction } from \"./ProfileResponseTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 7 OFX Spec\"\r\n */\r\nexport class ProfileResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private profileResponse: ProfileResponseTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.profile;\r\n  }\r\n\r\n  /**\r\n   * The profile response.\r\n   *\r\n   * @return The profile response.\r\n   */\r\n  public getProfileResponse(): ProfileResponseTransaction {\r\n    return this.profileResponse;\r\n  }\r\n\r\n  /**\r\n   * The profile response.\r\n   *\r\n   * @param profileResponse The profile response.\r\n   */\r\n  public setProfileResponse(profileResponse: ProfileResponseTransaction): void {\r\n    this.profileResponse = profileResponse;\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\r\n\r\n    if (this.getProfileResponse() != null) {\r\n      messages.push(this.getProfileResponse());\r\n    }\r\n\r\n    return messages;\r\n  }\r\n}\r\n\r\nAggregate_add(ProfileResponseMessageSet, \"PROFMSGSRSV1\");\r\nChildAggregate_add(ProfileResponseMessageSet, { required: true, order: 0, type: ProfileResponseTransaction, read: ProfileResponseMessageSet.prototype.getProfileResponse, write: ProfileResponseMessageSet.prototype.setProfileResponse });\r\n","import { ProcessorDayOff } from \"../../../common/ProcessorDayOff\";\r\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Funds Transfer Profile\r\n * @see \"Section 11.13.2.2 OFX Spec\"\r\n */\r\nexport class TransferProfile {\r\n\r\n  private processorDaysOff: Array<ProcessorDayOff>;\r\n  private processEndTime: string;\r\n  private supportsScheduledTransfers: boolean;\r\n  private supportsRecurringTransfers: boolean;\r\n  private supportsLoanTransfers: boolean;\r\n  private supportsScheduledLoanTransfers: boolean;\r\n  private supportsRecurringLoanTransfers: boolean;\r\n  private supportsTransferModification: boolean;\r\n  private supportsModelModification: boolean;\r\n  private modelWindow: number;\r\n  private withdrawnDays: number;\r\n  private defaultDaysToPay: number;\r\n\r\n\r\n  /**\r\n   * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\r\n   * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\r\n   * @return List of days during the week that no processing occurs.\r\n   */\r\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\r\n    return this.processorDaysOff;\r\n  }\r\n\r\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void  {\r\n    this.processorDaysOff = processorDaysOff;\r\n  }\r\n\r\n  /**\r\n   * Gets time of day that day's processing ends.\r\n   *\r\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\r\n   * the milliseconds and time zone are still optional, and default to GMT.\r\n   * @see \"Section 3.2.8.3 OFX Spec\"\r\n   * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\r\n   */\r\n  public getProcessEndTime(): string  {\r\n    return this.processEndTime;\r\n  }\r\n\r\n  /**\r\n   * Sets the time of day that day's processing ends.\r\n   *\r\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\r\n   * the milliseconds and time zone are still optional, and default to GMT.\r\n\r\n   * @see \"Section 3.2.8.3 OFX Spec\"\r\n   * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\r\n   */\r\n  public setProcessEndTime(processEndTime: string): void  {\r\n    this.processEndTime = processEndTime;\r\n  }\r\n\r\n  public getSupportsScheduledTransfers(): boolean  {\r\n    return this.supportsScheduledTransfers;\r\n  }\r\n\r\n  public setSupportsScheduledTransfers(supportsScheduledTransfers: boolean): void  {\r\n    this.supportsScheduledTransfers = supportsScheduledTransfers;\r\n  }\r\n\r\n  /**\r\n   * Requires <CANSCHED>\r\n   * @return Boolean whether supports recurring transfers\r\n   */\r\n  public getSupportsRecurringTransfers(): boolean  {\r\n    return this.supportsRecurringTransfers;\r\n  }\r\n\r\n  public setSupportsRecurringTransfers(supportsRecurringTransfers: boolean): void  {\r\n    this.supportsRecurringTransfers = supportsRecurringTransfers;\r\n  }\r\n\r\n  /**\r\n   * <CANLOAN>Y must be present for transfers to involve loans\r\n   * @return Boolean whether supports loan transfers\r\n   */\r\n  public getSupportsLoanTransfers(): boolean  {\r\n    return this.supportsLoanTransfers;\r\n  }\r\n\r\n  public setSupportsLoanTransfers(supportsLoanTransfers: boolean): void  {\r\n    this.supportsLoanTransfers = supportsLoanTransfers;\r\n  }\r\n\r\n  public getSupportsScheduledLoanTransfers(): boolean  {\r\n    return this.supportsScheduledLoanTransfers;\r\n  }\r\n\r\n  public setSupportsScheduledLoanTransfers(supportsScheduledLoanTransfers: boolean): void  {\r\n    this.supportsScheduledLoanTransfers = supportsScheduledLoanTransfers;\r\n  }\r\n\r\n  public getSupportsRecurringLoanTransfers(): boolean  {\r\n    return this.supportsRecurringLoanTransfers;\r\n  }\r\n\r\n  public setSupportsRecurringLoanTransfers(supportsRecurringLoanTransfers: boolean): void  {\r\n    this.supportsRecurringLoanTransfers = supportsRecurringLoanTransfers;\r\n  }\r\n\r\n  public getSupportsTransferModification(): boolean  {\r\n    return this.supportsTransferModification;\r\n  }\r\n\r\n  public setSupportsTransferModification(supportsTransferModification: boolean): void  {\r\n    this.supportsTransferModification = supportsTransferModification;\r\n  }\r\n\r\n  public getSupportsModelModification(): boolean  {\r\n    return this.supportsModelModification;\r\n  }\r\n\r\n  public setSupportsModelModification(supportsModelModification: boolean): void  {\r\n    this.supportsModelModification = supportsModelModification;\r\n  }\r\n\r\n  /**\r\n   * Model window\r\n   * the number of days before a recurring transaction is scheduled to be processed that it is\r\n   * instantiated on the system\r\n   * @return Number number of days before a recurring transaction is scheduled to be processed that it is instantiated on the system\r\n   */\r\n  public getModelWindow(): number  {\r\n    return this.modelWindow;\r\n  }\r\n\r\n  public setModelWindow(modelWindow: number): void  {\r\n    this.modelWindow = modelWindow;\r\n  }\r\n\r\n  /**\r\n   * Number of days before processing date that funds are withdrawn\r\n   * @return Number number of days before processing date that funds are withdrawn\r\n   */\r\n  public getWithdrawnDays(): number  {\r\n    return this.withdrawnDays;\r\n  }\r\n\r\n  public setWithdrawnDays(withdrawnDays: number): void  {\r\n    this.withdrawnDays = withdrawnDays;\r\n  }\r\n\r\n  /**\r\n   * Default number of days to pay\r\n   * @return Number Default number of days to pay\r\n   */\r\n  public getDefaultDaysToPay(): number  {\r\n    return this.defaultDaysToPay;\r\n  }\r\n\r\n  public setDefaultDaysToPay(defaultDaysToPay: number): void  {\r\n    this.defaultDaysToPay = defaultDaysToPay;\r\n  }\r\n}\r\n\r\nAggregate_add( TransferProfile, \"XFERPROF\" );\r\nElement_add(TransferProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: TransferProfile.prototype.getProcessorDaysOff, write: TransferProfile.prototype.setProcessorDaysOff });\r\nElement_add(TransferProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: TransferProfile.prototype.getProcessEndTime, write: TransferProfile.prototype.setProcessEndTime });\r\nElement_add(TransferProfile, { name: \"CANSCHED\", required: true, order: 20, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledTransfers, write: TransferProfile.prototype.setSupportsScheduledTransfers });\r\nElement_add(TransferProfile, { name: \"CANRECUR\", required: true, order: 30, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringTransfers, write: TransferProfile.prototype.setSupportsRecurringTransfers });\r\nElement_add(TransferProfile, { name: \"CANLOAN\", order: 40, type: Boolean, read: TransferProfile.prototype.getSupportsLoanTransfers, write: TransferProfile.prototype.setSupportsLoanTransfers });\r\nElement_add(TransferProfile, { name: \"CANSCHEDLOAN\", order: 50, type: Boolean, read: TransferProfile.prototype.getSupportsScheduledLoanTransfers, write: TransferProfile.prototype.setSupportsScheduledLoanTransfers });\r\nElement_add(TransferProfile, { name: \"CANRECURLOAN\", order: 60, type: Boolean, read: TransferProfile.prototype.getSupportsRecurringLoanTransfers, write: TransferProfile.prototype.setSupportsRecurringLoanTransfers });\r\nElement_add(TransferProfile, { name: \"CANMODXFERS\", required: true, order: 70, type: Boolean, read: TransferProfile.prototype.getSupportsTransferModification, write: TransferProfile.prototype.setSupportsTransferModification });\r\nElement_add(TransferProfile, { name: \"CANMODMDLS\", required: true, order: 80, type: Boolean, read: TransferProfile.prototype.getSupportsModelModification, write: TransferProfile.prototype.setSupportsModelModification });\r\nElement_add(TransferProfile, { name: \"MODELWND\", required: true, order: 90, type: Number, read: TransferProfile.prototype.getModelWindow, write: TransferProfile.prototype.setModelWindow });\r\nElement_add(TransferProfile, { name: \"DAYSWITH\", required: true, order: 100, type: Number, read: TransferProfile.prototype.getWithdrawnDays, write: TransferProfile.prototype.setWithdrawnDays });\r\nElement_add(TransferProfile, { name: \"DFLTDAYSTOPAY\", required: true, order: 110, type: Number, read: TransferProfile.prototype.getDefaultDaysToPay, write: TransferProfile.prototype.setDefaultDaysToPay });\r\n","import { ProcessorDayOff } from \"../../../common/ProcessorDayOff\";\r\nimport { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Stop Check Profile\r\n * @see \"Section 11.13.2.3 OFX Spec\"\r\n */\r\nexport class StopCheckProfile {\r\n\r\n  private processorDaysOff: Array<ProcessorDayOff>;\r\n  private processEndTime: string;\r\n  private canUseRange: boolean;\r\n  private canUseDescription: boolean;\r\n  private stopCheckFee: number;\r\n\r\n  /**\r\n   * Days of week that no processing occurs: MONDAY, TUESDAY, WEDNESDAY, THURSDAY,\r\n   * FRIDAY, SATURDAY, or SUNDAY. 0 or more <PROCDAYSOFF> can be sent.\r\n   * @return List of days during the week that no processing occurs.\r\n   */\r\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\r\n    return this.processorDaysOff;\r\n  }\r\n\r\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\r\n    this.processorDaysOff = processorDaysOff;\r\n  }\r\n\r\n  /**\r\n   * Gets time of day that day's processing ends.\r\n   *\r\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\r\n   * the milliseconds and time zone are still optional, and default to GMT.\r\n   * @see \"Section 3.2.8.3 OFX Spec\"\r\n   * @return Time String formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\r\n   */\r\n  public getProcessEndTime(): string {\r\n    return this.processEndTime;\r\n  }\r\n\r\n  /**\r\n   * Sets the time of day that day's processing ends.\r\n   *\r\n   * Time formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\",\r\n   * the milliseconds and time zone are still optional, and default to GMT.\r\n\r\n   * @see \"Section 3.2.8.3 OFX Spec\"\r\n   * @param processEndTime formatted as \"HHMMSS.XXX[gmt offset[:tz name]]\"\r\n   */\r\n  public setProcessEndTime(processEndTime: string): void {\r\n    this.processEndTime = processEndTime;\r\n  }\r\n\r\n  public getCanUseRange(): boolean {\r\n    return this.canUseRange;\r\n  }\r\n\r\n  public setCanUseRange(canUseRange: boolean): void {\r\n    this.canUseRange = canUseRange;\r\n  }\r\n\r\n  public getCanUseDescription(): boolean {\r\n    return this.canUseDescription;\r\n  }\r\n\r\n  public setCanUseDescription(canUseDescription: boolean): void {\r\n    this.canUseDescription = canUseDescription;\r\n  }\r\n\r\n  public getStopCheckFee(): number {\r\n    return this.stopCheckFee;\r\n  }\r\n\r\n  public setStopCheckFee(stopCheckFee: number): void {\r\n    this.stopCheckFee = stopCheckFee;\r\n  }\r\n}\r\n\r\nAggregate_add( StopCheckProfile, \"STPCHKPROF\" );\r\nElement_add(StopCheckProfile, { name: \"PROCDAYSOFF\", order: 0, type: Array, collectionEntryType: ProcessorDayOff, read: StopCheckProfile.prototype.getProcessorDaysOff, write: StopCheckProfile.prototype.setProcessorDaysOff });\r\nElement_add(StopCheckProfile, { name: \"PROCENDTM\", required: true, order: 10, type: String, read: StopCheckProfile.prototype.getProcessEndTime, write: StopCheckProfile.prototype.setProcessEndTime });\r\nElement_add(StopCheckProfile, { name: \"CANUSERANGE\", required: true, order: 20, type: Boolean, read: StopCheckProfile.prototype.getCanUseRange, write: StopCheckProfile.prototype.setCanUseRange });\r\nElement_add(StopCheckProfile, { name: \"CANUSEDESC\", required: true, order: 30, type: Boolean, read: StopCheckProfile.prototype.getCanUseDescription, write: StopCheckProfile.prototype.setCanUseDescription });\r\nElement_add(StopCheckProfile, { name: \"STPCHKFEE\", required: true, order: 40, type: Number, read: StopCheckProfile.prototype.getStopCheckFee, write: StopCheckProfile.prototype.setStopCheckFee });\r\n","import { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 11.13.2.3 OFX Spec\"\r\n */\r\nexport class EmailProfile {\r\n\r\n  private canEmail: boolean;\r\n  private canNotify: boolean;\r\n\r\n  public getCanEmail(): boolean {\r\n    return this.canEmail;\r\n  }\r\n\r\n  public setCanEmail(canEmail: boolean): void {\r\n    this.canEmail = canEmail;\r\n  }\r\n\r\n  public getCanNotify(): boolean {\r\n    return this.canNotify;\r\n  }\r\n\r\n  public setCanNotify(canNotify: boolean): void {\r\n    this.canNotify = canNotify;\r\n  }\r\n}\r\n\r\nAggregate_add( EmailProfile, \"EMAILPROF\");\r\nElement_add(EmailProfile, { name: \"CANEMAIL\", required: true, order: 10, type: Boolean, read: EmailProfile.prototype.getCanEmail, write: EmailProfile.prototype.setCanEmail });\r\nElement_add(EmailProfile, { name: \"CANNOTIFY\", required: true, order: 20, type: Boolean, read: EmailProfile.prototype.getCanNotify, write: EmailProfile.prototype.setCanNotify });\r\n","import { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Image Profile\r\n * @see \"Section 3.1.6.2 OFX Spec\"\r\n */\r\nexport class ImageProfile {\r\n\r\n  private closingImageAvailable: boolean;\r\n  private transactionImageAvailable: boolean;\r\n\r\n  public getClosingImageAvailable(): boolean {\r\n    return this.closingImageAvailable;\r\n  }\r\n\r\n  public setClosingImageAvailable(closingImageAvailable: boolean): void {\r\n    this.closingImageAvailable = closingImageAvailable;\r\n  }\r\n\r\n  public getTransactionImageAvailable(): boolean {\r\n    return this.transactionImageAvailable;\r\n  }\r\n\r\n  public setTransactionImageAvailable(transactionImageAvailable: boolean): void {\r\n    this.transactionImageAvailable = transactionImageAvailable;\r\n  }\r\n}\r\n\r\nAggregate_add( ImageProfile, \"IMAGEPROF\" );\r\nElement_add(ImageProfile, { name: \"CLOSINGIMGAVAIL\", required: true, order: 10, type: Boolean, read: ImageProfile.prototype.getClosingImageAvailable, write: ImageProfile.prototype.setClosingImageAvailable });\r\nElement_add(ImageProfile, { name: \"TRANIMGAVAIL\", required: true, order: 20, type: Boolean, read: ImageProfile.prototype.getTransactionImageAvailable, write: ImageProfile.prototype.setTransactionImageAvailable });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { AccountType } from \"../../banking/AccountType\";\r\nimport { TransferProfile } from \"./common/TransferProfile\";\r\nimport { StopCheckProfile } from \"./banking/StopCheckProfile\";\r\nimport { EmailProfile } from \"./banking/EmailProfile\";\r\nimport { ImageProfile } from \"./common/ImageProfile\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Banking Message Set Profile\r\n * @see \"Section 11.13.2.1 OFX Spec\"\r\n */\r\nexport class BankingV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private invalidAccountTypes: Array<AccountType>;\r\n  private closingAvail: boolean;\r\n  private transferProfile: TransferProfile;\r\n  private stopCheckProfile: StopCheckProfile;\r\n  private emailProfile: EmailProfile;\r\n  private imageProfile: ImageProfile;\r\n\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.banking;\r\n  }\r\n\r\n  /**\r\n   * The invalidAccountTypes list.\r\n   *\r\n   * @return The invalidAccountTypes list.\r\n   */\r\n  public getInvalidAccountTypes(): Array<AccountType> {\r\n    return this.invalidAccountTypes;\r\n  }\r\n\r\n  /**\r\n   * The invalidAccountTypes list.\r\n   *\r\n   * @param invalidAccountTypes The invalidAccountTypes list.\r\n   */\r\n  public setInvalidAccountTypes(invalidAccountTypes: Array<AccountType>): void {\r\n    this.invalidAccountTypes = invalidAccountTypes;\r\n  }\r\n\r\n  /**\r\n   * Gets whether closing statement information is available\r\n   *\r\n   * @return whether closing statement information is available\r\n   */\r\n  public getClosingAvail(): boolean {\r\n    return this.closingAvail;\r\n  }\r\n\r\n  /**\r\n   * Sets whether closing statement information is available\r\n   *\r\n   * @param closingAvail whether closing statement information is available\r\n   */\r\n  public setClosingAvail(closingAvail: boolean): void {\r\n    this.closingAvail = closingAvail;\r\n  }\r\n\r\n  public getTransferProfile(): TransferProfile {\r\n    return this.transferProfile;\r\n  }\r\n\r\n  public setTransferProfile(transferProfile: TransferProfile): void {\r\n    this.transferProfile = transferProfile;\r\n  }\r\n\r\n  public getStopCheckProfile(): StopCheckProfile {\r\n    return this.stopCheckProfile;\r\n  }\r\n\r\n  public setStopCheckProfile(stopCheckProfile: StopCheckProfile): void {\r\n    this.stopCheckProfile = stopCheckProfile;\r\n  }\r\n\r\n  public getEmailProfile(): EmailProfile {\r\n    return this.emailProfile;\r\n  }\r\n\r\n  public setEmailProfile(emailProfile: EmailProfile): void {\r\n    this.emailProfile = emailProfile;\r\n  }\r\n\r\n  public getImageProfile(): ImageProfile {\r\n    return this.imageProfile;\r\n  }\r\n\r\n  public setImageProfile(imageProfile: ImageProfile): void {\r\n    this.imageProfile = imageProfile;\r\n  }\r\n}\r\n\r\nAggregate_add( BankingV1MessageSetInfo, \"BANKMSGSETV1\" );\r\nChildAggregate_add(BankingV1MessageSetInfo, { order: 10, type: Array, collectionEntryType: AccountType, read: BankingV1MessageSetInfo.prototype.getInvalidAccountTypes, write: BankingV1MessageSetInfo.prototype.setInvalidAccountTypes });\r\nElement_add(BankingV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: BankingV1MessageSetInfo.prototype.getClosingAvail, write: BankingV1MessageSetInfo.prototype.setClosingAvail });\r\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"XFERPROF\", order: 30, type: TransferProfile, read: BankingV1MessageSetInfo.prototype.getTransferProfile, write: BankingV1MessageSetInfo.prototype.setTransferProfile });\r\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"STPCKPROF\", order: 40, type: StopCheckProfile, read: BankingV1MessageSetInfo.prototype.getStopCheckProfile, write: BankingV1MessageSetInfo.prototype.setStopCheckProfile });\r\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"EMAILPROF\", required: true, order: 50, type: EmailProfile, read: BankingV1MessageSetInfo.prototype.getEmailProfile, write: BankingV1MessageSetInfo.prototype.setEmailProfile });\r\nChildAggregate_add(BankingV1MessageSetInfo, { name: \"IMAGEPROF\", order: 60, type: ImageProfile, read: BankingV1MessageSetInfo.prototype.getImageProfile, write: BankingV1MessageSetInfo.prototype.setImageProfile });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { BankingV1MessageSetInfo } from \"./BankingV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BankingMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: BankingV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): BankingV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: BankingV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( BankingMessageSetInfo, \"BANKMSGSET\" );\r\nChildAggregate_add(BankingMessageSetInfo, { order: 0, type: BankingV1MessageSetInfo, read: BankingMessageSetInfo.prototype.getVersion1Info, write: BankingMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { ProcessorDayOff } from \"../../common/ProcessorDayOff\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * BillPay Message Set Profile\r\n * @see \"Section 12.11.2 OFX Spec\"\r\n */\r\nexport class BillpayV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private daysWith: number;\r\n  private defaultDaysToPay: number;\r\n  private transferDaysWith: number;\r\n  private transferDefaultDaysToPay: number;\r\n  private processorDaysOff: Array<ProcessorDayOff>;\r\n  private processorEndTime: string;\r\n  private modelWindow: number;\r\n  private postProcessorWindow: number;\r\n  private supportsStatusUpdateViaPaymentModificationResponse: boolean;\r\n  private supportsPaymentByAddress: boolean;\r\n  private supportsPaymentByTransfer: boolean;\r\n  private supportsPaymentByPayeeId: boolean;\r\n  private userCanAddPayee: boolean;\r\n  private supportsExtendedPayment: boolean;\r\n  private canModifyPayments: boolean;\r\n  private canModifyModels: boolean;\r\n  private supportsDifferentFirstPayment: boolean;\r\n  private supportsDifferentLastPayment: boolean;\r\n  private supportsBillPresentmentContext: boolean;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.payments;\r\n  }\r\n\r\n  public getDaysWith(): number {\r\n    return this.daysWith;\r\n  }\r\n\r\n  public setDaysWith(daysWith: number): void {\r\n    this.daysWith = daysWith;\r\n  }\r\n\r\n  public getDefaultDaysToPay(): number {\r\n    return this.defaultDaysToPay;\r\n  }\r\n\r\n  public setDefaultDaysToPay(defaultDaysToPay: number): void {\r\n    this.defaultDaysToPay = defaultDaysToPay;\r\n  }\r\n\r\n  public getTransferDaysWith(): number {\r\n    return this.transferDaysWith;\r\n  }\r\n\r\n  public setTransferDaysWith(transferDaysWith: number): void {\r\n    this.transferDaysWith = transferDaysWith;\r\n  }\r\n\r\n  public getTransferDefaultDaysToPay(): number {\r\n    return this.transferDefaultDaysToPay;\r\n  }\r\n\r\n  public setTransferDefaultDaysToPay(transferDefaultDaysToPay: number): void {\r\n    this.transferDefaultDaysToPay = transferDefaultDaysToPay;\r\n  }\r\n\r\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\r\n    return this.processorDaysOff;\r\n  }\r\n\r\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\r\n    this.processorDaysOff = processorDaysOff;\r\n  }\r\n\r\n  public getProcessorEndTime(): string {\r\n    return this.processorEndTime;\r\n  }\r\n\r\n  public setProcessorEndTime(processorEndTime: string): void {\r\n    this.processorEndTime = processorEndTime;\r\n  }\r\n\r\n  public getModelWindow(): number {\r\n    return this.modelWindow;\r\n  }\r\n\r\n  public setModelWindow(modelWindow: number): void {\r\n    this.modelWindow = modelWindow;\r\n  }\r\n\r\n  public getPostProcessorWindow(): number {\r\n    return this.postProcessorWindow;\r\n  }\r\n\r\n  public setPostProcessorWindow(postProcessorWindow: number): void {\r\n    this.postProcessorWindow = postProcessorWindow;\r\n  }\r\n\r\n  public getSupportsStatusUpdateViaPaymentModificationResponse(): boolean {\r\n    return this.supportsStatusUpdateViaPaymentModificationResponse;\r\n  }\r\n\r\n  public setSupportsStatusUpdateViaPaymentModificationResponse(supportsStatusUpdateViaPaymentModificationResponse: boolean): void {\r\n    this.supportsStatusUpdateViaPaymentModificationResponse = supportsStatusUpdateViaPaymentModificationResponse;\r\n  }\r\n\r\n  public getSupportsPaymentByAddress(): boolean {\r\n    return this.supportsPaymentByAddress;\r\n  }\r\n\r\n  public setSupportsPaymentByAddress(supportsPaymentByAddress: boolean): void {\r\n    this.supportsPaymentByAddress = supportsPaymentByAddress;\r\n  }\r\n\r\n  public getSupportsPaymentByTransfer(): boolean {\r\n    return this.supportsPaymentByTransfer;\r\n  }\r\n\r\n  public setSupportsPaymentByTransfer(supportsPaymentByTransfer: boolean): void {\r\n    this.supportsPaymentByTransfer = supportsPaymentByTransfer;\r\n  }\r\n\r\n  public getSupportsPaymentByPayeeId(): boolean {\r\n    return this.supportsPaymentByPayeeId;\r\n  }\r\n\r\n  public setSupportsPaymentByPayeeId(supportsPaymentByPayeeId: boolean): void {\r\n    this.supportsPaymentByPayeeId = supportsPaymentByPayeeId;\r\n  }\r\n\r\n  public getUserCanAddPayee(): boolean {\r\n    return this.userCanAddPayee;\r\n  }\r\n\r\n  public setUserCanAddPayee(userCanAddPayee: boolean): void {\r\n    this.userCanAddPayee = userCanAddPayee;\r\n  }\r\n\r\n  public getSupportsExtendedPayment(): boolean {\r\n    return this.supportsExtendedPayment;\r\n  }\r\n\r\n  public setSupportsExtendedPayment(supportsExtendedPayment: boolean): void {\r\n    this.supportsExtendedPayment = supportsExtendedPayment;\r\n  }\r\n\r\n  public getCanModifyPayments(): boolean {\r\n    return this.canModifyPayments;\r\n  }\r\n\r\n  public setCanModifyPayments(canModifyPayments: boolean): void {\r\n    this.canModifyPayments = canModifyPayments;\r\n  }\r\n\r\n  public getCanModifyModels(): boolean {\r\n    return this.canModifyModels;\r\n  }\r\n\r\n  public setCanModifyModels(canModifyModels: boolean): void {\r\n    this.canModifyModels = canModifyModels;\r\n  }\r\n\r\n  public getSupportsDifferentFirstPayment(): boolean {\r\n    return this.supportsDifferentFirstPayment;\r\n  }\r\n\r\n  public setSupportsDifferentFirstPayment(supportsDifferentFirstPayment: boolean): void {\r\n    this.supportsDifferentFirstPayment = supportsDifferentFirstPayment;\r\n  }\r\n\r\n  public getSupportsDifferentLastPayment(): boolean {\r\n    return this.supportsDifferentLastPayment;\r\n  }\r\n\r\n  public setSupportsDifferentLastPayment(supportsDifferentLastPayment: boolean): void {\r\n    this.supportsDifferentLastPayment = supportsDifferentLastPayment;\r\n  }\r\n\r\n  public getSupportsBillPresentmentContext(): boolean {\r\n    return this.supportsBillPresentmentContext;\r\n  }\r\n\r\n  public setSupportsBillPresentmentContext(supportsBillPresentmentContext: boolean): void {\r\n    this.supportsBillPresentmentContext = supportsBillPresentmentContext;\r\n  }\r\n}\r\n\r\nAggregate_add( BillpayV1MessageSetInfo, \"BILLPAYMSGSETV1\" );\r\nElement_add(BillpayV1MessageSetInfo, { name: \"DAYSWITH\", required: true, order: 10, type: Number, read: BillpayV1MessageSetInfo.prototype.getDaysWith, write: BillpayV1MessageSetInfo.prototype.setDaysWith });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"DFLTDAYSTOPAY\", required: true, order: 20, type: Number, read: BillpayV1MessageSetInfo.prototype.getDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setDefaultDaysToPay });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"XFERDAYSWITH\", required: true, order: 30, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDaysWith, write: BillpayV1MessageSetInfo.prototype.setTransferDaysWith });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"XFERDFLTDAYSTOPAY\", required: true, order: 40, type: Number, read: BillpayV1MessageSetInfo.prototype.getTransferDefaultDaysToPay, write: BillpayV1MessageSetInfo.prototype.setTransferDefaultDaysToPay });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 50, type: Array, /*collectionEntryType: ProcessorDayOff,*/ read: BillpayV1MessageSetInfo.prototype.getProcessorDaysOff, write: BillpayV1MessageSetInfo.prototype.setProcessorDaysOff });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 60, type: String, read: BillpayV1MessageSetInfo.prototype.getProcessorEndTime, write: BillpayV1MessageSetInfo.prototype.setProcessorEndTime });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"MODELWND\", required: true, order: 70, type: Number, read: BillpayV1MessageSetInfo.prototype.getModelWindow, write: BillpayV1MessageSetInfo.prototype.setModelWindow });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"POSTPROCWND\", required: true, order: 80, type: Number, read: BillpayV1MessageSetInfo.prototype.getPostProcessorWindow, write: BillpayV1MessageSetInfo.prototype.setPostProcessorWindow });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"STSVIAMODS\", required: true, order: 90, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsStatusUpdateViaPaymentModificationResponse, write: BillpayV1MessageSetInfo.prototype.setSupportsStatusUpdateViaPaymentModificationResponse });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYADDR\", required: true, order: 100, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByAddress, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByAddress });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYXFER\", required: true, order: 110, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByTransfer, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByTransfer });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"PMTBYPAYEEID\", required: true, order: 120, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsPaymentByPayeeId, write: BillpayV1MessageSetInfo.prototype.setSupportsPaymentByPayeeId });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"CANADDPAYEE\", required: true, order: 130, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getUserCanAddPayee, write: BillpayV1MessageSetInfo.prototype.setUserCanAddPayee });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"HASEXTDPMT\", required: true, order: 140, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsExtendedPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsExtendedPayment });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"CANMODPMTS\", required: true, order: 150, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyPayments, write: BillpayV1MessageSetInfo.prototype.setCanModifyPayments });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"CANMODMDLS\", required: true, order: 160, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getCanModifyModels, write: BillpayV1MessageSetInfo.prototype.setCanModifyModels });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"DIFFFIRSTPMT\", required: true, order: 170, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentFirstPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentFirstPayment });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"DIFFLASTPMT\", required: true, order: 180, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsDifferentLastPayment, write: BillpayV1MessageSetInfo.prototype.setSupportsDifferentLastPayment });\r\nElement_add(BillpayV1MessageSetInfo, { name: \"BILLPUBCONTEXT\", order: 190, type: Boolean, read: BillpayV1MessageSetInfo.prototype.getSupportsBillPresentmentContext, write: BillpayV1MessageSetInfo.prototype.setSupportsBillPresentmentContext });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { BillpayV1MessageSetInfo } from \"./BillpayV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class BillpayMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: BillpayV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): BillpayV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: BillpayV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( BillpayMessageSetInfo, \"BILLPAYMSGSET\" );\r\nChildAggregate_add(BillpayMessageSetInfo, { order: 0, type: BillpayV1MessageSetInfo, read: BillpayMessageSetInfo.prototype.getVersion1Info, write: BillpayMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { ImageProfile } from \"./common/ImageProfile\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Credit Card Message Set Profile\r\n * @see \"Section 11.13.3 OFX Spec\"\r\n */\r\nexport class CreditCardV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private closingAvail: boolean;\r\n  private imageProfile: ImageProfile;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.creditcard;\r\n  }\r\n\r\n  /**\r\n   * Closing statement information available\r\n   * @return Boolean\r\n   */\r\n  public getClosingAvail(): boolean {\r\n    return this.closingAvail;\r\n  }\r\n\r\n  public setClosingAvail(closingAvail: boolean): void {\r\n    this.closingAvail = closingAvail;\r\n  }\r\n\r\n  /**\r\n   * Image profile (if supported)\r\n   * @return ImageProfile\r\n   */\r\n  public getImageProfile(): ImageProfile {\r\n    return this.imageProfile;\r\n  }\r\n\r\n  public setImageProfile(imageProfile: ImageProfile): void {\r\n    this.imageProfile = imageProfile;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardV1MessageSetInfo, \"CREDITCARDMSGSETV1\" );\r\nElement_add(CreditCardV1MessageSetInfo, { name: \"CLOSINGAVAIL\", required: true, order: 20, type: Boolean, read: CreditCardV1MessageSetInfo.prototype.getClosingAvail, write: CreditCardV1MessageSetInfo.prototype.setClosingAvail });\r\nChildAggregate_add(CreditCardV1MessageSetInfo, { name: \"IMAGEPROF\", order: 10, type: ImageProfile, read: CreditCardV1MessageSetInfo.prototype.getImageProfile, write: CreditCardV1MessageSetInfo.prototype.setImageProfile });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { CreditCardV1MessageSetInfo } from \"./CreditCardV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class CreditCardMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: CreditCardV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): CreditCardV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: CreditCardV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( CreditCardMessageSetInfo, \"CREDITCARDMSGSET\" );\r\nChildAggregate_add(CreditCardMessageSetInfo, { order: 0, type: CreditCardV1MessageSetInfo, read: CreditCardMessageSetInfo.prototype.getVersion1Info, write: CreditCardMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Email Message Set Profile Information\r\n * @see \"Section 9.4.2 OFX Spec\"\r\n */\r\nexport class EmailV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private supportsMail: boolean;\r\n  private supportsMimeType: boolean;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.email;\r\n  }\r\n\r\n  /**\r\n   * Y if server supports <MAILRQ> request.\r\n   * N if server supports only the <MAILSYNCRQ> request.\r\n   * @return Boolean\r\n   */\r\n  public getSupportsMail(): boolean {\r\n    return this.supportsMail;\r\n  }\r\n\r\n  public setSupportsMail(supportsMail: boolean): void {\r\n    this.supportsMail = supportsMail;\r\n  }\r\n\r\n  /**\r\n   * Y if server supports get MIME message\r\n   * @return Boolean\r\n   */\r\n  public getSupportsMimeType(): boolean {\r\n    return this.supportsMimeType;\r\n  }\r\n\r\n  public setSupportsMimeType(supportsMimeType: boolean): void {\r\n    this.supportsMimeType = supportsMimeType;\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( EmailV1MessageSetInfo, \"EMAILMSGSETV1\" );\r\nElement_add(EmailV1MessageSetInfo, { name: \"MAILSUP\", required: true, order: 10, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMail, write: EmailV1MessageSetInfo.prototype.setSupportsMail });\r\nElement_add(EmailV1MessageSetInfo, { name: \"GETMIMESUP\", required: true, order: 20, type: Boolean, read: EmailV1MessageSetInfo.prototype.getSupportsMimeType, write: EmailV1MessageSetInfo.prototype.setSupportsMimeType });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { EmailV1MessageSetInfo } from \"./EmailV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class EmailMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: EmailV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): EmailV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: EmailV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( EmailMessageSetInfo, \"EMAILMSGSET\" );\r\nChildAggregate_add(EmailMessageSetInfo, { order: 0, type: EmailV1MessageSetInfo, read: EmailMessageSetInfo.prototype.getVersion1Info, write: EmailMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { TransferProfile } from \"./common/TransferProfile\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Interbank Funds Transfer Message Set Profile\r\n * @see \"Section 11.13.4 OFX Spec\"\r\n */\r\nexport class InterbankTransferV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private transferProfile: TransferProfile;\r\n  private supportsBillPay: boolean;\r\n  private cancelWindow: number;\r\n  private domesticInterbankTransferFee: number;\r\n  private internationalInterbankTransferFee: number;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.interbank_transfer;\r\n  }\r\n\r\n  public getTransferProfile(): TransferProfile {\r\n    return this.transferProfile;\r\n  }\r\n\r\n  public setTransferProfile(transferProfile: TransferProfile): void {\r\n    this.transferProfile = transferProfile;\r\n  }\r\n\r\n  public getSupportsBillPay(): boolean {\r\n    return this.supportsBillPay;\r\n  }\r\n\r\n  public setSupportsBillPay(supportsBillPay: boolean): void {\r\n    this.supportsBillPay = supportsBillPay;\r\n  }\r\n\r\n  public getCancelWindow(): number {\r\n    return this.cancelWindow;\r\n  }\r\n\r\n  public setCancelWindow(cancelWindow: number): void {\r\n    this.cancelWindow = cancelWindow;\r\n  }\r\n\r\n  public getDomesticInterbankTransferFee(): number {\r\n    return this.domesticInterbankTransferFee;\r\n  }\r\n\r\n  public setDomesticInterbankTransferFee(domesticInterbankTransferFee: number): void {\r\n    this.domesticInterbankTransferFee = domesticInterbankTransferFee;\r\n  }\r\n\r\n  public getInternationalInterbankTransferFee(): number {\r\n    return this.internationalInterbankTransferFee;\r\n  }\r\n\r\n  public setInternationalInterbankTransferFee(internationalInterbankTransferFee: number): void {\r\n    this.internationalInterbankTransferFee = internationalInterbankTransferFee;\r\n  }\r\n}\r\n\r\nAggregate_add( InterbankTransferV1MessageSetInfo, \"INTERXFERMSGSETV1\" );\r\nChildAggregate_add(InterbankTransferV1MessageSetInfo, { name: \"XFERPROF\", required: true, order: 10, type: TransferProfile, read: InterbankTransferV1MessageSetInfo.prototype.getTransferProfile, write: InterbankTransferV1MessageSetInfo.prototype.setTransferProfile });\r\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"CANBILLPAY\", required: true, order: 20, type: Boolean, read: InterbankTransferV1MessageSetInfo.prototype.getSupportsBillPay, write: InterbankTransferV1MessageSetInfo.prototype.setSupportsBillPay });\r\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"CANCELWND\", required: true, order: 30, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getCancelWindow, write: InterbankTransferV1MessageSetInfo.prototype.setCancelWindow });\r\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getDomesticInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setDomesticInterbankTransferFee });\r\nElement_add(InterbankTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: InterbankTransferV1MessageSetInfo.prototype.getInternationalInterbankTransferFee, write: InterbankTransferV1MessageSetInfo.prototype.setInternationalInterbankTransferFee });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { InterbankTransferV1MessageSetInfo } from \"./InterbankTransferV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class InterbankTransferMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: InterbankTransferV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): InterbankTransferV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: InterbankTransferV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( InterbankTransferMessageSetInfo, \"INTERXFERMSGSET\" );\r\nChildAggregate_add(InterbankTransferMessageSetInfo, { order: 0, type: InterbankTransferV1MessageSetInfo, read: InterbankTransferMessageSetInfo.prototype.getVersion1Info, write: InterbankTransferMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 13.7.1.1, OFX Spec\"\r\n */\r\nexport class InvestmentV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private supportsStatementsDownload: boolean;\r\n  private supportsOpenOrdersDownload: boolean;\r\n  private supportsPositionsDownload: boolean;\r\n  private supportsBalanceDownload: boolean;\r\n  private supportsEmail: boolean;\r\n  private supports401kInformation: boolean;\r\n  private supportsClosingStatements: boolean;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.investment;\r\n  }\r\n\r\n  public getSupportsStatementsDownload(): boolean {\r\n    return this.supportsStatementsDownload;\r\n  }\r\n\r\n  public setSupportsStatementsDownload(supportsStatementsDownload: boolean): void {\r\n    this.supportsStatementsDownload = supportsStatementsDownload;\r\n  }\r\n\r\n  public getSupportsOpenOrdersDownload(): boolean {\r\n    return this.supportsOpenOrdersDownload;\r\n  }\r\n\r\n  public setSupportsOpenOrdersDownload(supportsOpenOrdersDownload: boolean): void {\r\n    this.supportsOpenOrdersDownload = supportsOpenOrdersDownload;\r\n  }\r\n\r\n  public getSupportsPositionsDownload(): boolean {\r\n    return this.supportsPositionsDownload;\r\n  }\r\n\r\n  public setSupportsPositionsDownload(supportsPositionsDownload: boolean): void {\r\n    this.supportsPositionsDownload = supportsPositionsDownload;\r\n  }\r\n\r\n  public getSupportsBalanceDownload(): boolean {\r\n    return this.supportsBalanceDownload;\r\n  }\r\n\r\n  public setSupportsBalanceDownload(supportsBalanceDownload: boolean): void {\r\n    this.supportsBalanceDownload = supportsBalanceDownload;\r\n  }\r\n\r\n  public getSupportsEmail(): boolean {\r\n    return this.supportsEmail;\r\n  }\r\n\r\n  public setSupportsEmail(supportsEmail: boolean): void {\r\n    this.supportsEmail = supportsEmail;\r\n  }\r\n\r\n  public getSupports401kInformation(): boolean {\r\n    return this.supports401kInformation;\r\n  }\r\n\r\n  public setSupports401kInformation(supports401kInformation: boolean): void {\r\n    this.supports401kInformation = supports401kInformation;\r\n  }\r\n\r\n  public getSupportsClosingStatements(): boolean {\r\n    return this.supportsClosingStatements;\r\n  }\r\n\r\n  public setSupportsClosingStatements(supportsClosingStatements: boolean): void {\r\n    this.supportsClosingStatements = supportsClosingStatements;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentV1MessageSetInfo, \"INVSTMTMSGSETV1\" );\r\nElement_add(InvestmentV1MessageSetInfo, { name: \"TRANDNLD\", required:true, order: 10, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsStatementsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsStatementsDownload });\r\nElement_add(InvestmentV1MessageSetInfo, { name: \"OODNLD\", required:true, order: 20, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsOpenOrdersDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsOpenOrdersDownload });\r\nElement_add(InvestmentV1MessageSetInfo, { name: \"POSDNLD\", required:true, order: 30, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsPositionsDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsPositionsDownload });\r\nElement_add(InvestmentV1MessageSetInfo, { name: \"BALDNLD\", required:true, order: 40, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsBalanceDownload, write: InvestmentV1MessageSetInfo.prototype.setSupportsBalanceDownload });\r\nElement_add(InvestmentV1MessageSetInfo, { name: \"CANEMAIL\", required:true, order: 50, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsEmail, write: InvestmentV1MessageSetInfo.prototype.setSupportsEmail });\r\nElement_add(InvestmentV1MessageSetInfo, { name: \"INV401KDNLD\", order: 60, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupports401kInformation, write: InvestmentV1MessageSetInfo.prototype.setSupports401kInformation });\r\nElement_add(InvestmentV1MessageSetInfo, { name: \"CLOSINGAVAIL\", order: 70, type: Boolean, read: InvestmentV1MessageSetInfo.prototype.getSupportsClosingStatements, write: InvestmentV1MessageSetInfo.prototype.setSupportsClosingStatements });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { InvestmentV1MessageSetInfo } from \"./InvestmentV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class InvestmentMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: InvestmentV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): InvestmentV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: InvestmentV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( InvestmentMessageSetInfo, \"INVSTMTMSGSET\" );\r\nChildAggregate_add(InvestmentMessageSetInfo, { order: 0, type: InvestmentV1MessageSetInfo, read: InvestmentMessageSetInfo.prototype.getVersion1Info, write: InvestmentMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\n\r\n\r\nexport class ProfileV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.profile;\r\n  }\r\n}\r\n\r\nAggregate_add( ProfileV1MessageSetInfo, \"PROFMSGSETV1\" );\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { ProfileV1MessageSetInfo } from \"./ProfileV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class ProfileMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: ProfileV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): ProfileV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: ProfileV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( ProfileMessageSetInfo, \"PROFMSGSET\" );\r\nChildAggregate_add(ProfileMessageSetInfo, { order: 0, type: ProfileV1MessageSetInfo, read: ProfileMessageSetInfo.prototype.getVersion1Info, write: ProfileMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * @see \"Section 13.7.2.1, OFX Spec\"\r\n */\r\nexport class SecurityListV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private supportsSecurityListDownload: boolean;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.investment_security;\r\n  }\r\n\r\n  public getSupportsSecurityListDownload(): boolean {\r\n    return this.supportsSecurityListDownload;\r\n  }\r\n\r\n  public setSupportsSecurityListDownload(supportsSecurityListDownload: boolean): void {\r\n    this.supportsSecurityListDownload = supportsSecurityListDownload;\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityListV1MessageSetInfo, \"SECLISTMSGSETV1\" );\r\nElement_add(SecurityListV1MessageSetInfo, { name: \"SECLISTRQDNLD\", required:true, order: 10, type: Boolean, read: SecurityListV1MessageSetInfo.prototype.getSupportsSecurityListDownload, write: SecurityListV1MessageSetInfo.prototype.setSupportsSecurityListDownload });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { SecurityListV1MessageSetInfo } from \"./SecurityListV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class SecurityListMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: SecurityListV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): SecurityListV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: SecurityListV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityListMessageSetInfo, \"SECLISTMSGSET\" );\r\nChildAggregate_add(SecurityListMessageSetInfo, { order: 0, type: SecurityListV1MessageSetInfo, read: SecurityListMessageSetInfo.prototype.getVersion1Info, write: SecurityListMessageSetInfo.prototype.setVersion1Info });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\n\r\n\r\nexport class SignOnV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.signon;\r\n  }\r\n}\r\n\r\nAggregate_add( SignOnV1MessageSetInfo, \"SIGNONMSGSETV1\" );\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { SignOnV1MessageSetInfo } from \"./SignOnV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class SignOnMessageSetInfo extends AbstractMessageSetInfo {\r\n  private version1Info: SignOnV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): SignOnV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: SignOnV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( SignOnMessageSetInfo, \"SIGNONMSGSET\" );\r\nChildAggregate_add(SignOnMessageSetInfo, { order: 0, type: SignOnV1MessageSetInfo, read: SignOnMessageSetInfo.prototype.getVersion1Info, write: SignOnMessageSetInfo.prototype.setVersion1Info });\r\n","import { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Client Enrollment option, contains indicator as to whether the account number is required as part of enrollment\r\n * @see \"Section 8.8 OFX Spec\"\r\n */\r\nexport class ClientEnrollment {\r\n\r\n  private accountRequired: boolean;\r\n\r\n  /**\r\n   * Y if account number is required as part of enrollment\r\n   * @return Boolean\r\n   */\r\n  public getAccountRequired(): boolean {\r\n    return this.accountRequired;\r\n  }\r\n\r\n  public setAccountRequired(accountRequired: boolean): void {\r\n    this.accountRequired = accountRequired;\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( ClientEnrollment, \"CLIENTENROLL\" );\r\nElement_add(ClientEnrollment, { name: \"ACCTREQUIRED\", required: true, order: 0, type: Boolean, read: ClientEnrollment.prototype.getAccountRequired, write: ClientEnrollment.prototype.setAccountRequired });\r\n","import { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Web Enrollment option containing URL to direct user for web based enrollment, if supported.\r\n * @see \"Section 8.8 OFX Spec\"\r\n */\r\nexport class WebEnrollment {\r\n\r\n  private url: string;\r\n\r\n  /**\r\n   * URL to start enrollment process\r\n   * @return String\r\n   */\r\n  public getUrl(): string {\r\n    return this.url;\r\n  }\r\n\r\n  public setUrl(url: string): void {\r\n    this.url = url;\r\n  }\r\n\r\n}\r\n\r\nAggregate_add( WebEnrollment, \"WEBENROLL\" );\r\nElement_add(WebEnrollment, { name: \"URL\", required: true, order: 0, type: String, read: WebEnrollment.prototype.getUrl, write: WebEnrollment.prototype.setUrl });\r\n","import { Aggregate_add } from \"../../../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Other Enrollment option containing a text message directing users to some other method (such as a phone call)\r\n * @see \"Section 8.8 OFX Spec\"\r\n */\r\nexport class OtherEnrollment {\r\n\r\n  private message: string;\r\n\r\n  /**\r\n   * Message to consumer about what to do next (for example, a phone number),\r\n   * @return String\r\n   */\r\n  public getMessage(): string {\r\n    return this.message;\r\n  }\r\n\r\n  public setMessage(message: string): void {\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nAggregate_add( OtherEnrollment, \"OTHERENROLL\" );\r\nElement_add(OtherEnrollment, { name: \"MESSAGE\", required: true, order: 0, type: String, read: OtherEnrollment.prototype.getMessage, write: OtherEnrollment.prototype.setMessage });\r\n","import { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { ClientEnrollment } from \"./signup/ClientEnrollment\";\r\nimport { WebEnrollment } from \"./signup/WebEnrollment\";\r\nimport { OtherEnrollment } from \"./signup/OtherEnrollment\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Servers use the Signup Message Set Profile Information to define how enrollment should proceed.\r\n *\r\n * This aggregate should contain 1 Enrollment option among <CLIENTENROLL>, <WEBENROLL>, or <OTHERENROLL>.\r\n * todo: review how best to enforce this constraint\r\n *\r\n * @see \"Section 8.8 OFX Spec\"\r\n */\r\nexport class SignupV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private clientEnrollment: ClientEnrollment;\r\n  private webEnrollment: WebEnrollment;\r\n  private otherEnrollment: OtherEnrollment;\r\n  private supportsClientUserInfoChanges: boolean;\r\n  private supportsAvailableAccounts: boolean;\r\n  private supportsClientServiceActivationRequests: boolean;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.signup;\r\n  }\r\n\r\n  public getClientEnrollment(): ClientEnrollment {\r\n    return this.clientEnrollment;\r\n  }\r\n\r\n  public setClientEnrollment(clientEnrollment: ClientEnrollment): void {\r\n    this.clientEnrollment = clientEnrollment;\r\n  }\r\n\r\n  public getWebEnrollment(): WebEnrollment {\r\n    return this.webEnrollment;\r\n  }\r\n\r\n  public setWebEnrollment(webEnrollment: WebEnrollment): void {\r\n    this.webEnrollment = webEnrollment;\r\n  }\r\n\r\n  public getOtherEnrollment(): OtherEnrollment {\r\n    return this.otherEnrollment;\r\n  }\r\n\r\n  public setOtherEnrollment(otherEnrollment: OtherEnrollment): void {\r\n    this.otherEnrollment = otherEnrollment;\r\n  }\r\n\r\n  /**\r\n   * Y if server supports client-based user information changes,\r\n   * @return Boolean\r\n   */\r\n  public getSupportsClientUserInfoChanges(): boolean {\r\n    return this.supportsClientUserInfoChanges;\r\n  }\r\n\r\n  public setSupportsClientUserInfoChanges(supportsClientUserInfoChanges: boolean): void {\r\n    this.supportsClientUserInfoChanges = supportsClientUserInfoChanges;\r\n  }\r\n\r\n  /**\r\n   * Y if server can provide information on accounts with SVCSTATUS available,\r\n   * N means client should expect to ask user for specific account information\r\n   * @return Boolean\r\n   */\r\n  public getSupportsAvailableAccounts(): boolean {\r\n    return this.supportsAvailableAccounts;\r\n  }\r\n\r\n  public setSupportsAvailableAccounts(supportsAvailableAccounts: boolean): void {\r\n    this.supportsAvailableAccounts = supportsAvailableAccounts;\r\n  }\r\n\r\n  /**\r\n   * Y if server allows clients to make service activation requests (<ACCTRQ>),\r\n   * N if server will only advise clients via synchronization of service additions,\r\n   * changes, or deletions.\r\n   * @return Boolean\r\n   */\r\n  public getSupportsClientServiceActivationRequests(): boolean {\r\n    return this.supportsClientServiceActivationRequests;\r\n  }\r\n\r\n  public setSupportsClientServiceActivationRequests(supportsClientServiceActivationRequests: boolean): void {\r\n    this.supportsClientServiceActivationRequests = supportsClientServiceActivationRequests;\r\n  }\r\n}\r\n\r\nAggregate_add( SignupV1MessageSetInfo, \"SIGNUPMSGSETV1\" );\r\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"CLIENTENROLL\", order: 10, type: ClientEnrollment, read: SignupV1MessageSetInfo.prototype.getClientEnrollment, write: SignupV1MessageSetInfo.prototype.setClientEnrollment });\r\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"WEBENROLL\", order: 20, type: WebEnrollment, read: SignupV1MessageSetInfo.prototype.getWebEnrollment, write: SignupV1MessageSetInfo.prototype.setWebEnrollment });\r\nChildAggregate_add(SignupV1MessageSetInfo, { name: \"OTHERENROLL\", order: 30, type: OtherEnrollment, read: SignupV1MessageSetInfo.prototype.getOtherEnrollment, write: SignupV1MessageSetInfo.prototype.setOtherEnrollment });\r\nElement_add(SignupV1MessageSetInfo, { name: \"CHGUSERINFO\", required: true, order: 40, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientUserInfoChanges, write: SignupV1MessageSetInfo.prototype.setSupportsClientUserInfoChanges });\r\nElement_add(SignupV1MessageSetInfo, { name: \"AVAILACCTS\", required: true, order: 50, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsAvailableAccounts, write: SignupV1MessageSetInfo.prototype.setSupportsAvailableAccounts });\r\nElement_add(SignupV1MessageSetInfo, { name: \"CLIENTACTREQ\", required: true, order: 60, type: Boolean, read: SignupV1MessageSetInfo.prototype.getSupportsClientServiceActivationRequests, write: SignupV1MessageSetInfo.prototype.setSupportsClientServiceActivationRequests });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { SignupV1MessageSetInfo } from \"./SignupV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class SignupMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: SignupV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): SignupV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: SignupV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( SignupMessageSetInfo, \"SIGNUPMSGSET\" );\r\nChildAggregate_add(SignupMessageSetInfo, { order: 0, type: SignupV1MessageSetInfo, read: SignupMessageSetInfo.prototype.getVersion1Info, write: SignupMessageSetInfo.prototype.setVersion1Info });\r\n","import { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { VersionSpecificMessageSetInfo } from \"../VersionSpecificMessageSetInfo\";\r\nimport { ProcessorDayOff } from \"../../common/ProcessorDayOff\";\r\nimport { MessageSetType } from \"../../MessageSetType\";\r\nimport { Element_add } from \"../../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Wire Transfer Message Set Profile\r\n * @see \"Section 11.13.5 OFX Spec\"\r\n */\r\nexport class WireTransferV1MessageSetInfo extends VersionSpecificMessageSetInfo {\r\n\r\n  private processorDaysOff: Array<ProcessorDayOff>;\r\n  private processEndTime: string;\r\n  private supportsScheduledTransfers: boolean;\r\n  private domesticWireTransferFee: number;\r\n  private internationalWireTransferFee: number;\r\n\r\n  public getMessageSetType(): MessageSetType {\r\n    return MessageSetType.wire_transfer;\r\n  }\r\n\r\n  public getProcessorDaysOff(): Array<ProcessorDayOff> {\r\n    return this.processorDaysOff;\r\n  }\r\n\r\n  public setProcessorDaysOff(processorDaysOff: Array<ProcessorDayOff>): void {\r\n    this.processorDaysOff = processorDaysOff;\r\n  }\r\n\r\n  public getProcessEndTime(): string {\r\n    return this.processEndTime;\r\n  }\r\n\r\n  public setProcessEndTime(processEndTime: string): void {\r\n    this.processEndTime = processEndTime;\r\n  }\r\n\r\n  public getSupportsScheduledTransfers(): boolean {\r\n    return this.supportsScheduledTransfers;\r\n  }\r\n\r\n  public setSupportsScheduledTransfers(supportsScheduledTransfers: boolean): void {\r\n    this.supportsScheduledTransfers = supportsScheduledTransfers;\r\n  }\r\n\r\n  public getDomesticWireTransferFee(): number {\r\n    return this.domesticWireTransferFee;\r\n  }\r\n\r\n  public setDomesticWireTransferFee(domesticWireTransferFee: number): void {\r\n    this.domesticWireTransferFee = domesticWireTransferFee;\r\n  }\r\n\r\n  public getInternationalWireTransferFee(): number {\r\n    return this.internationalWireTransferFee;\r\n  }\r\n\r\n  public setInternationalWireTransferFee(internationalWireTransferFee: number): void {\r\n    this.internationalWireTransferFee = internationalWireTransferFee;\r\n  }\r\n}\r\n\r\nAggregate_add( WireTransferV1MessageSetInfo, \"WIREXFERMSGSETV1\" );\r\nElement_add(WireTransferV1MessageSetInfo, { name: \"PROCDAYSOFF\", order: 10, type: Array, collectionEntryType: ProcessorDayOff, read: WireTransferV1MessageSetInfo.prototype.getProcessorDaysOff, write: WireTransferV1MessageSetInfo.prototype.setProcessorDaysOff });\r\nElement_add(WireTransferV1MessageSetInfo, { name: \"PROCENDTM\", required: true, order: 20, type: String, read: WireTransferV1MessageSetInfo.prototype.getProcessEndTime, write: WireTransferV1MessageSetInfo.prototype.setProcessEndTime });\r\nElement_add(WireTransferV1MessageSetInfo, { name: \"CANSCHED\", required: true, order: 30, type: Boolean, read: WireTransferV1MessageSetInfo.prototype.getSupportsScheduledTransfers, write: WireTransferV1MessageSetInfo.prototype.setSupportsScheduledTransfers });\r\nElement_add(WireTransferV1MessageSetInfo, { name: \"DOMXFERFEE\", required: true, order: 40, type: Number, read: WireTransferV1MessageSetInfo.prototype.getDomesticWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setDomesticWireTransferFee });\r\nElement_add(WireTransferV1MessageSetInfo, { name: \"INTLXFERFEE\", required: true, order: 50, type: Number, read: WireTransferV1MessageSetInfo.prototype.getInternationalWireTransferFee, write: WireTransferV1MessageSetInfo.prototype.setInternationalWireTransferFee });\r\n","import { AbstractMessageSetInfo } from \"../AbstractMessageSetInfo\";\r\nimport { WireTransferV1MessageSetInfo } from \"./WireTransferV1MessageSetInfo\";\r\nimport { Aggregate_add } from \"../../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class WireTransferMessageSetInfo extends AbstractMessageSetInfo {\r\n\r\n  private version1Info: WireTransferV1MessageSetInfo;\r\n\r\n  public getVersion1Info(): WireTransferV1MessageSetInfo {\r\n    return this.version1Info;\r\n  }\r\n\r\n  public setVersion1Info(version1Info: WireTransferV1MessageSetInfo): void {\r\n    this.version1Info = version1Info;\r\n  }\r\n}\r\n\r\nAggregate_add( WireTransferMessageSetInfo, \"WIREXFERMSGSET\" );\r\nChildAggregate_add(WireTransferMessageSetInfo, { order: 0, type: WireTransferV1MessageSetInfo, read: WireTransferMessageSetInfo.prototype.getVersion1Info, write: WireTransferMessageSetInfo.prototype.setVersion1Info });\r\n","\r\n /**\r\n * Asset class for debt.\r\n * @see \"Section 13.8.5.7, OFX Spec\"\r\n */\r\nexport enum AssetClass {\r\n  /**\r\n   * Government or corporate bonds issued in the United States.\r\n   */\r\n  DOMESTIC_BOND,\r\n\r\n  /**\r\n   * Government or corporate bonds issued in foreign countries or the United States.\r\n   */\r\n  INTL_BOND,\r\n\r\n  /**\r\n   * Stocks for US companies with market caps of $2B or more.\r\n   */\r\n  LARGE_STOCK,\r\n\r\n  /**\r\n   * Stocks for US companies with market caps of ~$100M to $2B.\r\n   */\r\n  SMALL_STOCK,\r\n\r\n  /**\r\n   * Publicallt traded stocks for companies based in foreign countries.\r\n   */\r\n  INTL_STOCK,\r\n\r\n  /**\r\n   * Stable, short-term investments which provide income that rises and falls with short-term\r\n   * interest rates.\r\n   */\r\n  MONEY_MARKET,\r\n\r\n  /**\r\n   * Investments which do not fit into any of the other types.\r\n   */\r\n  OTHER\r\n}\r\n\r\nexport function AssetClass_fromOfx(ofxVal: string): AssetClass {\r\n  if (\"DOMESTICBOND\" === ofxVal) {\r\n    return AssetClass.DOMESTIC_BOND;\r\n  } else if (\"INTLBOND\" === ofxVal) {\r\n    return AssetClass.INTL_BOND;\r\n  } else if (\"LARGESTOCK\" === ofxVal) {\r\n    return AssetClass.LARGE_STOCK;\r\n  } else if (\"SMALLSTOCK\" === ofxVal) {\r\n    return AssetClass.SMALL_STOCK;\r\n  } else if (\"INTLSTOCK\" === ofxVal) {\r\n    return AssetClass.INTL_STOCK;\r\n  } else if (\"MONEYMARKET\" === ofxVal) {\r\n    return AssetClass.MONEY_MARKET;\r\n  } else if (\"OTHER\" === ofxVal) {\r\n    return AssetClass.OTHER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { SecurityId } from \"./SecurityId\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Info about a security.\r\n * @see \"Section 13.8.5.1, OFX Spec\"\r\n */\r\nexport class SecurityInfo {\r\n  private securityId: SecurityId;\r\n  private securityName: string;\r\n  private tickerSymbol: string;\r\n  private fiId: string;\r\n  private rating: string;\r\n  private unitPrice: number;\r\n  private marketValueDate: Date;\r\n  private currencyCode: string;\r\n  private memo: string;\r\n\r\n  /**\r\n   * Gets the unique security id for the security. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the security id\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.securityId;\r\n  }\r\n\r\n  /**\r\n   * Sets the unique security id for the security. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param securityId the security id\r\n   */\r\n  public setSecurityId(securityId: SecurityId): void {\r\n    this.securityId = securityId;\r\n  }\r\n\r\n  /**\r\n   * Gets the full name of the security. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the full name of the security\r\n   */\r\n  public getSecurityName(): string {\r\n    return this.securityName;\r\n  }\r\n\r\n  /**\r\n   * Sets the full name of the security. This is a required field according to the OFX spec.\r\n   *\r\n   * @param securityName the full name of the security\r\n   */\r\n  public setSecurityName(securityName: string): void {\r\n    this.securityName = securityName;\r\n  }\r\n\r\n  /**\r\n   * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the ticket symbol or null if there's no ticker symbol\r\n   */\r\n  public getTickerSymbol(): string {\r\n    return this.tickerSymbol;\r\n  }\r\n\r\n  /**\r\n   * Sets the ticker symbol for the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param tickerSymbol the ticket symbol or null if there's no ticker symbol\r\n   */\r\n  public setTickerSymbol(tickerSymbol: string): void {\r\n    this.tickerSymbol = tickerSymbol;\r\n  }\r\n\r\n  /**\r\n   * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the FI ID number for the security\r\n   */\r\n  public getFiId(): string {\r\n    return this.fiId;\r\n  }\r\n\r\n  /**\r\n   * Sets the FI ID number for the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param fiId the FI ID number for the security\r\n   */\r\n  public setFiId(fiId: string): void {\r\n    this.fiId = fiId;\r\n  }\r\n\r\n  /**\r\n   * Gets the rating of the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the rating\r\n   */\r\n  public getRating(): string {\r\n    return this.rating;\r\n  }\r\n\r\n  /**\r\n   * Sets the rating of the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param rating the rating\r\n   */\r\n  public setRating(rating: string): void {\r\n    this.rating = rating;\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a noptional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is an optional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @param unitPrice the per unit price\r\n   */\r\n  public setUnitPrice(unitPrice: number): void {\r\n    this.unitPrice = unitPrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the date as-of for the unit price\r\n   */\r\n  public getUnitPriceAsOfDate(): Date {\r\n    return this.marketValueDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the date as-of for the unit price. This is an optional field according to the OFX spec.\r\n   *\r\n   * param marketValueDate the date as-of for the unit price\r\n   */\r\n  public setUnitPriceAsOfDate(marketValueDate: Date): void {\r\n    this.marketValueDate = marketValueDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the overriding currency code for the security. If not set, implies the default currency.\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the overriding currency code or null to mean the default currency\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Sets the overriding currency code for the security. If not set, implies the default currency.\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @param currencyCode the overriding currency code or null to mean the default currency\r\n   */\r\n  public setCurrencyCode(currencyCode: string): void {\r\n    this.currencyCode = currencyCode;\r\n  }\r\n\r\n  /**\r\n   * Gets any memo associated with the security. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the memo\r\n   */\r\n  public getMemo(): string {\r\n    return this.memo;\r\n  }\r\n\r\n  /**\r\n   * Sets any memo associated with the security. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param memo the memo\r\n   */\r\n  public setMemo(memo: string): void {\r\n    this.memo = memo;\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityInfo, \"SECINFO\" );\r\nChildAggregate_add(SecurityInfo, { required: true, order: 10, type: SecurityId, read: SecurityInfo.prototype.getSecurityId, write: SecurityInfo.prototype.setSecurityId });\r\nElement_add(SecurityInfo, { name: \"SECNAME\", required: true, order: 20, type: String, read: SecurityInfo.prototype.getSecurityName, write: SecurityInfo.prototype.setSecurityName });\r\nElement_add(SecurityInfo, { name: \"TICKER\", order: 30, type: String, read: SecurityInfo.prototype.getTickerSymbol, write: SecurityInfo.prototype.setTickerSymbol });\r\nElement_add(SecurityInfo, { name: \"FIID\", order: 40, type: String, read: SecurityInfo.prototype.getFiId, write: SecurityInfo.prototype.setFiId });\r\nElement_add(SecurityInfo, { name: \"RATING\", order: 50, type: String, read: SecurityInfo.prototype.getRating, write: SecurityInfo.prototype.setRating });\r\nElement_add(SecurityInfo, { name: \"UNITPRICE\", order: 60, type: Number, read: SecurityInfo.prototype.getUnitPrice, write: SecurityInfo.prototype.setUnitPrice });\r\nElement_add(SecurityInfo, { name: \"DTASOF\", order: 70, type: Date, read: SecurityInfo.prototype.getUnitPriceAsOfDate, write: SecurityInfo.prototype.setUnitPriceAsOfDate });\r\nElement_add(SecurityInfo, { name: \"CURRENCY\", order: 80, type: String, read: SecurityInfo.prototype.getCurrencyCode, write: SecurityInfo.prototype.setCurrencyCode });\r\nElement_add(SecurityInfo, { name: \"MEMO\", order: 90, type: String, read: SecurityInfo.prototype.getMemo, write: SecurityInfo.prototype.setMemo });\r\n","import { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { SecurityInfo } from \"./SecurityInfo\";\r\nimport { SecurityId } from \"./SecurityId\";\r\n\r\n\r\n/**\r\n * Base class for info about the various types of securities.\r\n * @see \"Section 13.8.5.1, OFX Spec\"\r\n * <br>\r\n * This class exposes a read-only view of the flattened aggregates that are\r\n * common to all security info as a convenience to application\r\n * developers who may not find the ofx aggregation model intuitive.\r\n */\r\nexport class BaseSecurityInfo {\r\n  private securityInfo: SecurityInfo;\r\n\r\n  /**\r\n   * Gets the security info aggregate.\r\n   *\r\n   * @return the security info aggregate.\r\n   */\r\n  public getSecurityInfo(): SecurityInfo {\r\n    return this.securityInfo;\r\n  }\r\n\r\n  /**\r\n   * Sets the security info aggregate.\r\n   *\r\n   * @param securityInfo the security info aggregate.\r\n   */\r\n  public setSecurityInfo(securityInfo: SecurityInfo): void {\r\n    this.securityInfo = securityInfo;\r\n  }\r\n\r\n  /**\r\n   * Gets the unique security id for the security. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the security id\r\n   */\r\n  public getSecurityId(): SecurityId {\r\n    return this.getSecurityInfo().getSecurityId();\r\n  }\r\n\r\n  /**\r\n   * Gets the full name of the security. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the full name of the security.\r\n   */\r\n  public getSecurityName(): string {\r\n    return this.getSecurityInfo().getSecurityName();\r\n  }\r\n\r\n  /**\r\n   * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the ticket symbol or null if there's no ticker symbol\r\n   */\r\n  public getTickerSymbol(): string {\r\n    return this.getSecurityInfo().getTickerSymbol();\r\n  }\r\n\r\n  /**\r\n   * Gets the FI ID number for the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the FI ID number for the security\r\n   */\r\n  public getFiId(): string {\r\n    return this.getSecurityInfo().getFiId();\r\n  }\r\n\r\n  /**\r\n   * Gets the rating of the security. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the rating\r\n   */\r\n  public getRating(): string {\r\n    return this.getSecurityInfo().getRating();\r\n  }\r\n\r\n  /**\r\n   * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the\r\n   * share price. For bonds, this is the percentage of par. For options, this is the per share (not\r\n   * per contact) price. This is a noptional field according to the OFX spec.\r\n   * @see \"Section 13.9.2.4.3, OFX Spec\"\r\n   *\r\n   * @return the per unit price\r\n   */\r\n  public getUnitPrice(): number {\r\n    return this.getSecurityInfo().getUnitPrice();\r\n  }\r\n\r\n  /**\r\n   * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the date as-of for the unit price\r\n   */\r\n  public getUnitPriceAsOfDate(): Date {\r\n    return this.getSecurityInfo().getUnitPriceAsOfDate();\r\n  }\r\n\r\n  /**\r\n   * Gets the overriding currency code for the security. If not set, implies the default currency.\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the overriding currency code or null to mean the default currency\r\n   */\r\n  public getCurrencyCode(): string {\r\n    return this.getSecurityInfo().getCurrencyCode();\r\n  }\r\n\r\n  /**\r\n   * Gets any memo associated with the security. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the memo\r\n   */\r\n  public getMemo(): string {\r\n    return this.getSecurityInfo().getMemo();\r\n  }\r\n}\r\n\r\nChildAggregate_add(BaseSecurityInfo, { required: true, order: 10, type: SecurityInfo, read: BaseSecurityInfo.prototype.getSecurityInfo, write: BaseSecurityInfo.prototype.setSecurityInfo });\r\n","\r\n/**\r\n * Call type for debt.\r\n * @see \"Section 13.8.5.2, OFX Spec\"\r\n */\r\nexport enum CallType {\r\n  CALL,\r\n  PUT,\r\n  PREFUND,\r\n  MATURITY\r\n}\r\n\r\nexport function CallType_fromOfx(ofxVal: string): CallType {\r\n  if (\"CALL\" === ofxVal) {\r\n    return CallType.CALL;\r\n  } else if (\"PUT\" === ofxVal) {\r\n    return CallType.PUT;\r\n  } else if (\"PREFUND\" === ofxVal) {\r\n    return CallType.PREFUND;\r\n  } else if (\"MATURITY\" === ofxVal) {\r\n    return CallType.MATURITY;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","\r\n/**\r\n * Coupon freqency for debt.\r\n * @see \"Section 13.8.5.2, OFX Spec\"\r\n */\r\nexport enum CouponFrequency {\r\n  MONTHLY,\r\n  QUARTERLY,\r\n  SEMIANNUAL,\r\n  ANNUAL,\r\n  OTHER\r\n}\r\n\r\nexport function CouponFrequency_fromOfx(ofxVal: string): CouponFrequency {\r\n  if (\"MONTHLY\" === ofxVal) {\r\n    return CouponFrequency.MONTHLY;\r\n  } else if (\"QUARTERLY\" === ofxVal) {\r\n    return CouponFrequency.QUARTERLY;\r\n  } else if (\"SEMIANNUAL\" === ofxVal) {\r\n    return CouponFrequency.SEMIANNUAL;\r\n  } else if (\"ANNUAL\" === ofxVal) {\r\n    return CouponFrequency.ANNUAL;\r\n  } else if (\"OTHER\" === ofxVal) {\r\n    return CouponFrequency.OTHER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","\r\n/**\r\n * The class of debt.\r\n * @see \"Section 13.8.5.2, OFX Spec\"\r\n */\r\nexport enum DebtClass {\r\n  TREASURY,\r\n  MUNICIPAL,\r\n  CORPORATE,\r\n  OTHER\r\n}\r\n\r\nexport function DebtClass_fromOfx(ofxVal: string): DebtClass {\r\n  if (\"TREASURY\" === ofxVal) {\r\n    return DebtClass.TREASURY;\r\n  } else if (\"MUNICIPAL\" === ofxVal) {\r\n    return DebtClass.MUNICIPAL;\r\n  } else if (\"CORPORATE\" === ofxVal) {\r\n    return DebtClass.CORPORATE;\r\n  } else if (\"OTHER\" === ofxVal) {\r\n    return DebtClass.OTHER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","\r\n/**\r\n * The type of debt.\r\n * @see \"Section 13.8.5.2, OFX Spec\"\r\n */\r\nexport enum DebtType {\r\n  COUPON,\r\n  ZERO\r\n}\r\n\r\nexport function DebtType_fromOfx(ofxVal: string): DebtType {\r\n  if (\"COUPON\" === ofxVal) {\r\n    return DebtType.COUPON;\r\n  } else if (\"ZERO\" === ofxVal) {\r\n    return DebtType.ZERO;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\r\nimport { DebtType, DebtType_fromOfx } from \"./DebtType\";\r\nimport { DebtClass, DebtClass_fromOfx } from \"./DebtClass\";\r\nimport { CouponFrequency, CouponFrequency_fromOfx } from \"./CouponFrequency\";\r\nimport { CallType, CallType_fromOfx } from \"./CallType\";\r\nimport { AssetClass, AssetClass_fromOfx } from \"./AssetClass\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Info about a debt security.\r\n * @see \"Section 13.8.5.2, OFX Spec\"\r\n */\r\nexport class DebtSecurityInfo extends BaseSecurityInfo {\r\n\r\n  private parValue: number;\r\n  private debtType: string;\r\n  private debtClass: string;\r\n  private couponRate: number;\r\n  private nextMaturityDate: Date;\r\n  private couponFrequency: string;\r\n  private callPrice: number;\r\n  private yieldToCall: number;\r\n  private nextCallDate: Date;\r\n  private callType: string;\r\n  private yieldToMaturity: number;\r\n  private debtMaturityDate: Date;\r\n  private assetClass: string;\r\n  private fiAssetClass: string;\r\n\r\n  /**\r\n   * Gets the par value of the debt. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the par value of the debt\r\n   */\r\n  public getParValue(): number {\r\n    return this.parValue;\r\n  }\r\n\r\n  /**\r\n   * Sets the par value of the debt. This is a required field according to the OFX spec.\r\n   *\r\n   * @param parValue the par value of the debt\r\n   */\r\n  public setParValue(parValue: number): void {\r\n    this.parValue = parValue;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @return the type of debt\r\n   */\r\n  public getDebtType(): string {\r\n    return this.debtType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of debt. One of \"COUPON\" or \"ZERO\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @param debtType the type of debt\r\n   */\r\n  public setDebtType(debtType: string): void {\r\n    this.debtType = debtType;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of debt as one of the well-known types.\r\n   *\r\n   * @return the type of debt or null if it's not one of the well-known types\r\n   */\r\n  public getDebtTypeEnum(): DebtType {\r\n    return DebtType_fromOfx(this.getDebtType());\r\n  }\r\n\r\n  /**\r\n   * Gets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the class of debt\r\n   */\r\n  public getDebtClass(): string {\r\n    return this.debtClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the class of debt. One of \"TREASURY\", \"MUNICIPAL\", \"CORPORATE\", or \"OTHER\".\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @param debtClass the class of debt\r\n   */\r\n  public setDebtClass(debtClass: string): void {\r\n    this.debtClass = debtClass;\r\n  }\r\n\r\n  /**\r\n   * Gets the class of debt as one of the well-known types.\r\n   *\r\n   * @return the class of debt or null if it's not one of the well-known types\r\n   */\r\n  public getDebtClassEnum(): DebtClass {\r\n    return DebtClass_fromOfx(this.debtClass);\r\n  }\r\n\r\n  /**\r\n   * Gets the coupon rate of the debt for the next closest call date.\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the coupon rate\r\n   */\r\n  public getCouponRate(): number {\r\n    return this.couponRate;\r\n  }\r\n\r\n  /**\r\n   * Sets the coupon rate of the debt for the next closest call date.\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @param couponRate the coupon rate\r\n   */\r\n  public setCouponRate(couponRate: number): void {\r\n    this.couponRate = couponRate;\r\n  }\r\n\r\n  /**\r\n   * Gets the next maturity date for the next coupon.\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the maturity date for the next coupon\r\n   */\r\n  public getNextMaturityDate(): Date {\r\n    return this.nextMaturityDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the next maturity date for the next coupon.\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @param nextMaturityDate the maturity date for the next coupon.\r\n   */\r\n  public setNextMaturityDate(nextMaturityDate: Date): void {\r\n    this.nextMaturityDate = nextMaturityDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the coupon frequency\r\n   */\r\n  public getCouponFrequency(): string {\r\n    return this.couponFrequency;\r\n  }\r\n\r\n  /**\r\n   * Sets the coupon frequency. One of \"MONTHLY\", \"QUARTERLY\", \"SEMIANNUAL\", \"ANNUAL\", or \"OTHER\".\r\n   * This is an optional field according to the OFX spec.\r\n   *\r\n   * @param couponFrequency the coupon frequency\r\n   */\r\n  public setCouponFrequency(couponFrequency: string): void {\r\n    this.couponFrequency = couponFrequency;\r\n  }\r\n\r\n  /**\r\n   * Gets the coupon frequency as one of the well-known types.\r\n   *\r\n   * @return the coupon frequency or null if it's not one of the well-known types\r\n   */\r\n  public getCouponFrequencyEnum(): CouponFrequency {\r\n    return CouponFrequency_fromOfx(this.getCouponFrequency());\r\n  }\r\n\r\n  /**\r\n   * Gets the bond price. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the bond price\r\n   */\r\n  public getCallPrice(): number {\r\n    return this.callPrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the bond price. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param callPrice the bond price\r\n   */\r\n  public setCallPrice(callPrice: number): void {\r\n    this.callPrice = callPrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the yield to call as a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the yield to call rate\r\n   */\r\n  public getYieldToCall(): number {\r\n    return this.yieldToCall;\r\n  }\r\n\r\n  /**\r\n   * Sets the yield to call as a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param yieldToCall the yield to call rate\r\n   */\r\n  public setYieldToCall(yieldToCall: number): void {\r\n    this.yieldToCall = yieldToCall;\r\n  }\r\n\r\n  /**\r\n   * Gets the next call date. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the next call date.\r\n   */\r\n  public getNextCallDate(): Date {\r\n    return this.nextCallDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the next call date. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param nextCallDate the next call date.\r\n   */\r\n  public setNextCallDate(nextCallDate: Date): void {\r\n    this.nextCallDate = nextCallDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of call.\r\n   *\r\n   * @return the type of call\r\n   */\r\n  public getCallType(): string {\r\n    return this.callType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of call.\r\n   *\r\n   * @param callType the type of call\r\n   */\r\n  public setCallType(callType: string): void {\r\n    this.callType = callType;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of call as one of the well-known types.\r\n   *\r\n   * @return the type of call or null if it's not one of the well-known types\r\n   */\r\n  public getCallTypeEnum(): CallType {\r\n    return CallType_fromOfx(this.getCallType());\r\n  }\r\n\r\n  /**\r\n   * Gets the yield to maturity as a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the yield to call rate\r\n   */\r\n  public getYieldToMaturity(): number {\r\n    return this.yieldToMaturity;\r\n  }\r\n\r\n  /**\r\n   * Sets the yield to maturity as a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param yieldToMaturity the yield to call rate\r\n   */\r\n  public setYieldToMaturity(yieldToMaturity: number): void {\r\n    this.yieldToMaturity = yieldToMaturity;\r\n  }\r\n\r\n  /**\r\n   * Gets the date when the debt matures. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the date when the debt matures\r\n   */\r\n  public getDebtMaturityDate(): Date {\r\n    return this.debtMaturityDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the date when the debt matures. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param debtMaturityDate the date when the debt matures\r\n   */\r\n  public setDebtMaturityDate(debtMaturityDate: Date): void {\r\n    this.debtMaturityDate = debtMaturityDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the asset class of the debt. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the asset class of the debt\r\n   */\r\n  public getAssetClass(): string {\r\n    return this.assetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the asset class of the debt. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param assetClass the asset class of the debt\r\n   */\r\n  public setAssetClass(assetClass: string): void {\r\n    this.assetClass = assetClass;\r\n  }\r\n\r\n  /**\r\n   * Gets the assert class as one of the well-known types.\r\n   *\r\n   * @return the asset class or null if it's not one of the well-known types\r\n   */\r\n  public getAssetClassEnum(): AssetClass {\r\n    return AssetClass_fromOfx(this.getAssetClass());\r\n  }\r\n\r\n  /**\r\n   * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the FI-defined asset class of the debt\r\n   */\r\n  public getFiAssetClass(): string {\r\n    return this.fiAssetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param fiAssetClass the FI-defined asset class of the debt\r\n   */\r\n  public setFiAssetClass(fiAssetClass: string): void {\r\n    this.fiAssetClass = fiAssetClass;\r\n  }\r\n}\r\n\r\nAggregate_add( DebtSecurityInfo, \"DEBTINFO\" );\r\nElement_add(DebtSecurityInfo, { name: \"PARVALUE\", required:true, order: 20, type: Number, read: DebtSecurityInfo.prototype.getParValue, write: DebtSecurityInfo.prototype.setParValue });\r\nElement_add(DebtSecurityInfo, { name: \"DEBTTYPE\", required:true, order: 30, type: String, read: DebtSecurityInfo.prototype.getDebtType, write: DebtSecurityInfo.prototype.setDebtType });\r\nElement_add(DebtSecurityInfo, { name: \"DEBTCLASS\", order: 40, type: String, read: DebtSecurityInfo.prototype.getDebtClass, write: DebtSecurityInfo.prototype.setDebtClass });\r\nElement_add(DebtSecurityInfo, { name: \"COUPONRT\", order: 50, type: Number, read: DebtSecurityInfo.prototype.getCouponRate, write: DebtSecurityInfo.prototype.setCouponRate });\r\nElement_add(DebtSecurityInfo, { name: \"DTCOUPON\", order: 60, type: Date, read: DebtSecurityInfo.prototype.getNextMaturityDate, write: DebtSecurityInfo.prototype.setNextMaturityDate });\r\nElement_add(DebtSecurityInfo, { name: \"COUPONFREQ\", order: 70, type: String, read: DebtSecurityInfo.prototype.getCouponFrequency, write: DebtSecurityInfo.prototype.setCouponFrequency });\r\nElement_add(DebtSecurityInfo, { name: \"CALLPRICE\", order: 80, type: Number, read: DebtSecurityInfo.prototype.getCallPrice, write: DebtSecurityInfo.prototype.setCallPrice });\r\nElement_add(DebtSecurityInfo, { name: \"YIELDTOCALL\", order: 90, type: Number, read: DebtSecurityInfo.prototype.getYieldToCall, write: DebtSecurityInfo.prototype.setYieldToCall });\r\nElement_add(DebtSecurityInfo, { name: \"DTCALL\", order: 100, type: Date, read: DebtSecurityInfo.prototype.getNextCallDate, write: DebtSecurityInfo.prototype.setNextCallDate });\r\nElement_add(DebtSecurityInfo, { name: \"CALLTYPE\", order: 110, type: String, read: DebtSecurityInfo.prototype.getCallType, write: DebtSecurityInfo.prototype.setCallType });\r\nElement_add(DebtSecurityInfo, { name: \"YIELDTOMAT\", order: 120, type: Number, read: DebtSecurityInfo.prototype.getYieldToMaturity, write: DebtSecurityInfo.prototype.setYieldToMaturity });\r\nElement_add(DebtSecurityInfo, { name: \"DTMAT\", order: 130, type: Date, read: DebtSecurityInfo.prototype.getDebtMaturityDate, write: DebtSecurityInfo.prototype.setDebtMaturityDate });\r\nElement_add(DebtSecurityInfo, { name: \"ASSETCLASS\", order: 140, type: String, read: DebtSecurityInfo.prototype.getAssetClass, write: DebtSecurityInfo.prototype.setAssetClass });\r\nElement_add(DebtSecurityInfo, { name: \"FIASSETCLASS\", order: 150, type: String, read: DebtSecurityInfo.prototype.getFiAssetClass, write: DebtSecurityInfo.prototype.setFiAssetClass });\r\n","\r\n/**\r\n * The type of mutual fund.\r\n * @see \"Section 13.8.5.2, OFX Spec\"\r\n */\r\nexport enum MutualFundType {\r\n  OPEN_END,\r\n  CLOSE_END,\r\n  OTHER\r\n}\r\n\r\nexport function MutualFundType_fromOfx(ofxVal: string): MutualFundType {\r\n  if (\"OPENEND\" === ofxVal) {\r\n    return MutualFundType.OPEN_END;\r\n  } else if (\"CLOSEEND\" === ofxVal) {\r\n    return MutualFundType.CLOSE_END;\r\n  } else if (\"OTHER\" === ofxVal) {\r\n    return MutualFundType.OTHER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\r\nimport { MutualFundType, MutualFundType_fromOfx } from \"./MutualFundType\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Info about a mutual fund security.\r\n * @see \"Section 13.8.5.3, OFX Spec\"\r\n */\r\nexport class MutualFundSecurityInfo extends BaseSecurityInfo {\r\n  private mfType: string;\r\n  private yield: number;\r\n  private dateYieldAsOf: Date;\r\n\r\n  /**\r\n   * Gets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\r\n   * according to the OFX spec.\r\n   *\r\n   * @return the mutual fund type\r\n   */\r\n  public getType(): string {\r\n    return this.mfType;\r\n  }\r\n\r\n  /**\r\n   * Sets the mutual fund type. One of \"OPENEND\", \"CLOSEEND\", or \"OTHER\". This is an optional field\r\n   * according to the OFX spec.\r\n   *\r\n   * @param mfType the mutual fund type\r\n   */\r\n  public setType(mfType: string): void {\r\n    this.mfType = mfType;\r\n  }\r\n\r\n  /**\r\n   * Gets the mutual fund type as one of the well-known types.\r\n   *\r\n   * @return the mutual fund type or null if it's not one of the well-known types\r\n   */\r\n  public getTypeEnum(): MutualFundType {\r\n    return MutualFundType_fromOfx(this.getType());\r\n  }\r\n\r\n  /**\r\n   * Gets the yield as a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the yield as a rate\r\n   */\r\n  public getYield(): number {\r\n    return this.yield;\r\n  }\r\n\r\n  /**\r\n   * Sets the yield as a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param yield the yield as a rate\r\n   */\r\n  public setYield(yield_: number): void {\r\n    this.yield = yield_;\r\n  }\r\n\r\n  /**\r\n   * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the as-of date for the yield\r\n   */\r\n  public getDateYieldAsOf(): Date {\r\n    return this.dateYieldAsOf;\r\n  }\r\n\r\n  /**\r\n   * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param dateYieldAsOf the as-of date for the yield\r\n   */\r\n  public setDateYieldAsOf(dateYieldAsOf: Date): void {\r\n    this.dateYieldAsOf = dateYieldAsOf;\r\n  }\r\n\r\n  // TODO(jonp) -- MFASSERTCLASS and FIMFASSERTCLASS child aggregates\r\n}\r\n\r\nAggregate_add( MutualFundSecurityInfo, \"MFINFO\" );\r\nElement_add(MutualFundSecurityInfo, { name: \"MFTYPE\", order: 20, type: String, read: MutualFundSecurityInfo.prototype.getType, write: MutualFundSecurityInfo.prototype.setType });\r\nElement_add(MutualFundSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: MutualFundSecurityInfo.prototype.getYield, write: MutualFundSecurityInfo.prototype.setYield });\r\nElement_add(MutualFundSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: MutualFundSecurityInfo.prototype.getDateYieldAsOf, write: MutualFundSecurityInfo.prototype.setDateYieldAsOf });\r\n","\r\n/**\r\n * Type of option.\r\n * @see \"Section 13.8.5.4, OFX Spec\"\r\n */\r\nexport enum OptionType {\r\n  PUT,\r\n  CALL\r\n}\r\n\r\n\r\nexport function OptionType_fromOfx(ofxVal: string): OptionType {\r\n  if (\"PUT\" === ofxVal) {\r\n    return OptionType.PUT;\r\n  } else if (\"CALL\" === ofxVal) {\r\n    return OptionType.CALL;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\r\nimport { SecurityId } from \"./SecurityId\";\r\nimport { OptionType, OptionType_fromOfx } from \"./OptionType\";\r\nimport { AssetClass, AssetClass_fromOfx } from \"./AssetClass\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Info about an option security.\r\n * @see \"Section 13.8.5.4, OFX Spec\"\r\n */\r\nexport class OptionSecurityInfo extends BaseSecurityInfo {\r\n\r\n  private optionType: string;\r\n  private strikePrice: number;\r\n  private expirationDate: Date;\r\n  private sharesPerContact: number;\r\n  private underlyingSecurity: SecurityId;\r\n  private assetClass: string;\r\n  private fiAssetClass: string;\r\n\r\n  /**\r\n   * Gets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @return the option type\r\n   */\r\n  public getOptionType(): string {\r\n    return this.optionType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of option. One of \"PUT\" or \"CALL\". This is a required field according to the\r\n   * OFX spec.\r\n   *\r\n   * @param optionType the option type\r\n   */\r\n  public setOptionType(optionType: string): void {\r\n    this.optionType = optionType;\r\n  }\r\n\r\n  /**\r\n   * Gets the option type as a well-known enum value.\r\n   *\r\n   * @return the option type or null if it's not one of the well-known types\r\n   */\r\n  public getOptionTypeEnum(): OptionType {\r\n    return OptionType_fromOfx(this.getOptionType());\r\n  }\r\n\r\n  /**\r\n   * Gets the strike price of the option. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the option strike price\r\n   */\r\n  public getStrikePrice(): number {\r\n    return this.strikePrice;\r\n  }\r\n\r\n  /**\r\n   * Sets the strike price of the option. This is a required field according to the OFX spec.\r\n   *\r\n   * @param strikePrice the option strike price\r\n   */\r\n  public setStrikePrice(strikePrice: number): void {\r\n    this.strikePrice = strikePrice;\r\n  }\r\n\r\n  /**\r\n   * Gets the expiration date of the option. This is a required field according to the OFX spec.\r\n   *\r\n   * @return the expiration date of the option\r\n   */\r\n  public getExpirationDate(): Date {\r\n    return this.expirationDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the expiration date of the option. This is a required field according to the OFX spec.\r\n   *\r\n   * @param expirationDate the expiration date of the option\r\n   */\r\n  public setExpirationDate(expirationDate: Date): void {\r\n    this.expirationDate = expirationDate;\r\n  }\r\n\r\n  /**\r\n   * Gets the number of shares per option contact. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the number of shares per option contact\r\n   */\r\n  public getSharesPerContact(): number {\r\n    return this.sharesPerContact;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of shares per option contact. This is a required field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param sharesPerContact the number of shares per option contact\r\n   */\r\n  public setSharesPerContact(sharesPerContact: number): void {\r\n    this.sharesPerContact = sharesPerContact;\r\n  }\r\n\r\n  /**\r\n   * Gets the security id of the underling security. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the security id of the underlying security\r\n   */\r\n  public getUnderlyingSecurity(): SecurityId {\r\n    return this.underlyingSecurity;\r\n  }\r\n\r\n  /**\r\n   * Sets the security id of the underling security. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param underlyingSecurity the security id of the underlying security\r\n   */\r\n  public setUnderlyingSecurity(underlyingSecurity: SecurityId): void {\r\n    this.underlyingSecurity = underlyingSecurity;\r\n  }\r\n\r\n  /**\r\n   * Gets the asset class of the option. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the asset class of the option\r\n   */\r\n  public getAssetClass(): string {\r\n    return this.assetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the asset class of the option. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param assetClass the asset class of the option\r\n   */\r\n  public setAssetClass(assetClass: string): void {\r\n    this.assetClass = assetClass;\r\n  }\r\n\r\n  /**\r\n   * Gets the assert class as one of the well-known types.\r\n   *\r\n   * @return the asset class or null if it's not one of the well-known types\r\n   */\r\n  public getAssetClassEnum(): AssetClass {\r\n    return AssetClass_fromOfx(this.getAssetClass());\r\n  }\r\n\r\n  /**\r\n   * Gets the FI-defined asset class of the option. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the FI-defined asset class of the option\r\n   */\r\n  public getFiAssetClass(): string {\r\n    return this.fiAssetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the FI-defined asset class of the option. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param fiAssetClass the FI-defined asset class of the option\r\n   */\r\n  public setFiAssetClass(fiAssetClass: string): void {\r\n    this.fiAssetClass = fiAssetClass;\r\n  }\r\n}\r\n\r\nAggregate_add( OptionSecurityInfo, \"OPTINFO\" );\r\nElement_add(OptionSecurityInfo, { name: \"OPTTYPE\", order: 20, type: String, read: OptionSecurityInfo.prototype.getOptionType, write: OptionSecurityInfo.prototype.setOptionType });\r\nElement_add(OptionSecurityInfo, { name: \"STRIKEPRICE\", order: 30, type: Number, read: OptionSecurityInfo.prototype.getStrikePrice, write: OptionSecurityInfo.prototype.setStrikePrice });\r\nElement_add(OptionSecurityInfo, { name: \"DTEXPIRE\", order: 40, type: Date, read: OptionSecurityInfo.prototype.getExpirationDate, write: OptionSecurityInfo.prototype.setExpirationDate });\r\nElement_add(OptionSecurityInfo, { name: \"SHPERCTRCT\", order: 50, type: Number, read: OptionSecurityInfo.prototype.getSharesPerContact, write: OptionSecurityInfo.prototype.setSharesPerContact });\r\nElement_add(OptionSecurityInfo, { name: \"SECID\", order: 60, type: SecurityId, read: OptionSecurityInfo.prototype.getUnderlyingSecurity, write: OptionSecurityInfo.prototype.setUnderlyingSecurity });\r\nElement_add(OptionSecurityInfo, { name: \"ASSETCLASS\", order: 70, type: String, read: OptionSecurityInfo.prototype.getAssetClass, write: OptionSecurityInfo.prototype.setAssetClass });\r\nElement_add(OptionSecurityInfo, { name: \"FIASSETCLASS\", order: 80, type: String, read: OptionSecurityInfo.prototype.getFiAssetClass, write: OptionSecurityInfo.prototype.setFiAssetClass });\r\n","import { AssetClass_fromOfx, AssetClass } from \"./AssetClass\";\r\nimport { BaseSecurityInfo } from \"./BaseSecurityInfo\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Info about any other type of security.\r\n * @see \"Section 13.8.5.5, OFX Spec\"\r\n */\r\nexport class OtherSecurityInfo extends BaseSecurityInfo {\r\n\r\n  private typeDesc: string;\r\n  private assetClass: string;\r\n  private fiAssetClass: string;\r\n\r\n  /**\r\n   * Gets a description of the type of security. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the description of the security\r\n   */\r\n  public getTypeDesc(): string {\r\n    return this.typeDesc;\r\n  }\r\n\r\n  /**\r\n   * Sets a description of the type of security. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param typeDesc the description of the security\r\n   */\r\n  public setTypeDesc(typeDesc: string): void {\r\n    this.typeDesc = typeDesc;\r\n  }\r\n\r\n  /**\r\n   * Gets the asset class of the option. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the asset class of the debt\r\n   */\r\n  public getAssetClass(): string {\r\n    return this.assetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the asset class of the debt. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param assetClass the asset class of the debt\r\n   */\r\n  public setAssetClass(assetClass: string): void {\r\n    this.assetClass = assetClass;\r\n  }\r\n\r\n  /**\r\n   * Gets the assert class as one of the well-known types.\r\n   *\r\n   * @return the asset class or null if it's not one of the well-known types\r\n   */\r\n  public getAssetClassEnum(): AssetClass {\r\n    return AssetClass_fromOfx(this.getAssetClass());\r\n  }\r\n\r\n  /**\r\n   * Gets the FI-defined asset class of the debt. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the FI-defined asset class of the debt\r\n   */\r\n  public getFiAssetClass(): string {\r\n    return this.fiAssetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the FI-defined asset class of the debt. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param fiAssetClass the FI-defined asset class of the debt\r\n   */\r\n  public setFiAssetClass(fiAssetClass: string): void {\r\n    this.fiAssetClass = fiAssetClass;\r\n  }\r\n}\r\n\r\nAggregate_add( OtherSecurityInfo, \"OTHERINFO\" );\r\nElement_add(OtherSecurityInfo, { name: \"TYPEDESC\", order: 20, type: String, read: OtherSecurityInfo.prototype.getTypeDesc, write: OtherSecurityInfo.prototype.setTypeDesc });\r\nElement_add(OtherSecurityInfo, { name: \"ASSETCLASS\", order: 30, type: String, read: OtherSecurityInfo.prototype.getAssetClass, write: OtherSecurityInfo.prototype.setAssetClass });\r\nElement_add(OtherSecurityInfo, { name: \"FIASSETCLASS\", order: 40, type: String, read: OtherSecurityInfo.prototype.getFiAssetClass, write: OtherSecurityInfo.prototype.setFiAssetClass });\r\n","import { BaseSecurityInfo } from \"./BaseSecurityInfo\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Aggregate for a list of securities.\r\n * @see \"Section 13.8.4, OFX Spec\"\r\n */\r\nexport class SecurityList {\r\n  private securityInfos: Array<BaseSecurityInfo>;\r\n\r\n  public getSecurityInfos(): Array<BaseSecurityInfo> {\r\n    return this.securityInfos;\r\n  }\r\n\r\n  public setSecurityInfos(securityInfos: Array<BaseSecurityInfo>): void {\r\n    this.securityInfos = securityInfos;\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityList, \"SECLIST\" );\r\nChildAggregate_add(SecurityList, { order: 10, type: Array, collectionEntryType: BaseSecurityInfo, read: SecurityList.prototype.getSecurityInfos, write: SecurityList.prototype.setSecurityInfos });\r\n","import { ResponseMessage } from \"../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\n\r\n\r\n/**\r\n * Security list response. This is an empty aggregate. The actual security information is included\r\n * in the \"SECLIST\" aggregate.\r\n * @see \"Section 13.8.3, OFX Spec\"\r\n */\r\nexport class SecurityListResponse extends ResponseMessage {\r\n  public getResponseMessageName(): string {\r\n    return \"security list\";\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityListResponse, \"SECLISTRS\" );\r\n","import { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\r\nimport { SecurityListResponse } from \"./SecurityListResponse\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\n/**\r\n * Security list transaction response.\r\n * @see \"Section 13.8.3.1, OFX Spec\"\r\n */\r\nexport class SecurityListResponseTransaction\r\n    extends TransactionWrappedResponseMessage<SecurityListResponse> {\r\n\r\n  private message: SecurityListResponse;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): SecurityListResponse {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   */\r\n  public setMessage(message: SecurityListResponse): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): SecurityListResponse {\r\n    return this.getMessage();\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityListResponseTransaction, \"SECLISTTRNRS\");\r\nChildAggregate_add(SecurityListResponseTransaction, { required: true, order: 30, type: SecurityListResponse, read: SecurityListResponseTransaction.prototype.getMessage, write: SecurityListResponseTransaction.prototype.setMessage });\r\n","import { ResponseMessageSet } from \"../ResponseMessageSet\";\r\nimport { SecurityListResponseTransaction } from \"./SecurityListResponseTransaction\";\r\nimport { SecurityList } from \"./SecurityList\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class SecurityListResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private securityListResponse: SecurityListResponseTransaction;\r\n  private securityList: SecurityList;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.investment_security;\r\n  }\r\n\r\n  /**\r\n   * The security list response list transaction.\r\n   *\r\n   * Most OFX files have a single security response.\r\n   *\r\n   * @return The security list response list.\r\n   */\r\n  public getSecurityListResponse(): SecurityListResponseTransaction {\r\n    return this.securityListResponse;\r\n  }\r\n\r\n  /**\r\n   * The security list response.\r\n   *\r\n   * @param securityListResponse The security list response.\r\n   */\r\n  public setSecurityListResponse(securityListResponse: SecurityListResponseTransaction) {\r\n    this.securityListResponse = securityListResponse;\r\n  }\r\n\r\n  public getSecurityList(): SecurityList {\r\n    return this.securityList;\r\n  }\r\n\r\n  public setSecurityList(securityList: SecurityList): void {\r\n    this.securityList = securityList;\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    var ret: Array<ResponseMessage> = new Array<ResponseMessage>();\r\n    ret.push(this.securityListResponse);\r\n    return ret;\r\n  }\r\n}\r\n\r\nAggregate_add( SecurityListResponseMessageSet, \"SECLISTMSGSRSV1\" );\r\nChildAggregate_add(SecurityListResponseMessageSet, { order: 0, type: SecurityListResponseTransaction, read: SecurityListResponseMessageSet.prototype.getSecurityListResponse, write: SecurityListResponseMessageSet.prototype.setSecurityListResponse });\r\nChildAggregate_add(SecurityListResponseMessageSet, { order: 10, type: SecurityList, read: SecurityListResponseMessageSet.prototype.getSecurityList, write: SecurityListResponseMessageSet.prototype.setSecurityList });\r\n","\r\n/**\r\n * The type of debt.\r\n * @see \"Section 13.8.5.6, OFX Spec\"\r\n */\r\nexport enum StockType {\r\n  COMMON,\r\n  PREFERRED,\r\n  CONVERTIBLE,\r\n  OTHER\r\n}\r\n\r\nexport function StockType_fromOfx(ofxVal: string): StockType {\r\n  if (\"COMMON\" === ofxVal) {\r\n    return StockType.COMMON;\r\n  } else if (\"PREFERRED\" === ofxVal) {\r\n    return StockType.PREFERRED;\r\n  } else if (\"CONVERTIBLE\" === ofxVal) {\r\n    return StockType.CONVERTIBLE;\r\n  } else if (\"OTHER\" === ofxVal) {\r\n    return StockType.OTHER;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import { BaseSecurityInfo } from \"./BaseSecurityInfo\";\r\nimport { StockType, StockType_fromOfx } from \"./StockType\";\r\nimport { AssetClass, AssetClass_fromOfx } from \"./AssetClass\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n/**\r\n * Info about a stock security.\r\n * @see \"Section 13.8.5.6, OFX Spec\"\r\n */\r\nexport class StockSecurityInfo extends BaseSecurityInfo {\r\n\r\n  private stockType: string;\r\n  private yield: number;\r\n  private dateYieldAsOf: Date;\r\n  private assetClass: string;\r\n  private fiAssetClass: string;\r\n\r\n  /**\r\n   * Gets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\r\n   * optional field according to the OFX spec.\r\n   *\r\n   * @return the type of stock\r\n   */\r\n  public getType(): string {\r\n    return this.stockType;\r\n  }\r\n\r\n  /**\r\n   * Sets the type of stock. One of \"COMMON\", \"PREFERRED\", \"CONVERTIBLE\", or \"OTHER\". This is an\r\n   * optional field according to the OFX spec.\r\n   *\r\n   * @param stockType the type of stock\r\n   */\r\n  public setType(stockType: string): void {\r\n    this.stockType = stockType;\r\n  }\r\n\r\n  /**\r\n   * Gets the type of stock as one of the well-known types.\r\n   *\r\n   * @return the type of stock or null if it's not one of the well-known types\r\n   */\r\n  public getTypeEnum(): StockType {\r\n    return StockType_fromOfx(this.getType());\r\n  }\r\n\r\n  /**\r\n   * Gets the current yield reported as the dividend expressed as a portion of the current stock\r\n   * price, a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the dividend yield\r\n   */\r\n  public getYield(): number {\r\n    return this.yield;\r\n  }\r\n\r\n  /**\r\n   * Sets the current yield reported as the dividend expressed as a portion of the current stock\r\n   * price, a rate. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param yield the dividend yield\r\n   */\r\n  public setYield(yield_: number): void {\r\n    this.yield = yield_;\r\n  }\r\n\r\n  /**\r\n   * Gets the as-of date for the yield. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the as-of date for the yield\r\n   */\r\n  public getDateYieldAsOf(): Date {\r\n    return this.dateYieldAsOf;\r\n  }\r\n\r\n  /**\r\n   * Sets the as-of date for the yield. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param dateYieldAsOf the as-of date for the yield\r\n   */\r\n  public setDateYieldAsOf(dateYieldAsOf: Date): void {\r\n    this.dateYieldAsOf = dateYieldAsOf;\r\n  }\r\n\r\n  /**\r\n   * Gets the asset class of the stock. This is an optional field according to the OFX spec.\r\n   *\r\n   * @return the asset class of the stock\r\n   */\r\n  public getAssetClass(): string {\r\n    return this.assetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the asset class of the stock. This is an optional field according to the OFX spec.\r\n   *\r\n   * @param assetClass the asset class of the stock\r\n   */\r\n  public setAssetClass(assetClass: string): void {\r\n    this.assetClass = assetClass;\r\n  }\r\n\r\n  /**\r\n   * Gets the assert class as one of the well-known types.\r\n   *\r\n   * @return the asset class or null if it's not one of the well-known types\r\n   */\r\n  public getAssetClassEnum(): AssetClass {\r\n    return AssetClass_fromOfx(this.getAssetClass());\r\n  }\r\n\r\n  /**\r\n   * Gets the FI-defined asset class of the stock. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @return the FI-defined asset class of the stock\r\n   */\r\n  public getFiAssetClass(): string {\r\n    return this.fiAssetClass;\r\n  }\r\n\r\n  /**\r\n   * Sets the FI-defined asset class of the stock. This is an optional field according to the OFX\r\n   * spec.\r\n   *\r\n   * @param fiAssetClass the FI-defined asset class of the stock\r\n   */\r\n  public setFiAssetClass(fiAssetClass: string): void {\r\n    this.fiAssetClass = fiAssetClass;\r\n  }\r\n}\r\n\r\nAggregate_add( StockSecurityInfo, \"STOCKINFO\" );\r\nElement_add(StockSecurityInfo, { name: \"STOCKTYPE\", order: 20, type: String, read: StockSecurityInfo.prototype.getType, write: StockSecurityInfo.prototype.setType });\r\nElement_add(StockSecurityInfo, { name: \"YIELD\", order: 30, type: Number, read: StockSecurityInfo.prototype.getYield, write: StockSecurityInfo.prototype.setYield });\r\nElement_add(StockSecurityInfo, { name: \"DTYIELDASOF\", order: 40, type: Date, read: StockSecurityInfo.prototype.getDateYieldAsOf, write: StockSecurityInfo.prototype.setDateYieldAsOf });\r\nElement_add(StockSecurityInfo, { name: \"ASSETCLASS\", order: 50, type: String, read: StockSecurityInfo.prototype.getAssetClass, write: StockSecurityInfo.prototype.setAssetClass });\r\nElement_add(StockSecurityInfo, { name: \"FIASSETCLASS\", order: 60, type: String, read: StockSecurityInfo.prototype.getFiAssetClass, write: StockSecurityInfo.prototype.setFiAssetClass });\r\n","import { ResponseMessage } from \"../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\n/**\r\n * Response to a change a user password request.\r\n *\r\n * @see \"Section 2.5.2.2, OFX Spec.\"\r\n */\r\nexport class PasswordChangeResponse extends ResponseMessage {\r\n\r\n  private userId: string;\r\n  private changeTimestamp: Date;\r\n\r\n  /**\r\n   * The id of the user changing password.\r\n   *\r\n   * @return The id of the user changing password.\r\n   */\r\n  public getUserId(): string {\r\n    return this.userId;\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessageName(): string {\r\n    return \"password change\";\r\n  }\r\n\r\n  /**\r\n   * The id of the user changing password.\r\n   *\r\n   * @param userId The id of the user changing password.\r\n   */\r\n  public setUserId(userId: string): void {\r\n    this.userId = userId;\r\n  }\r\n\r\n  /**\r\n   * The timestamp of the password change.\r\n   *\r\n   * @return The timestamp of the password change.\r\n   */\r\n  public getChangeTimestamp(): Date {\r\n    return this.changeTimestamp;\r\n  }\r\n\r\n  /**\r\n   * The timestamp of the password change.\r\n   *\r\n   * @param changeTimestamp The timestamp of the password change.\r\n   */\r\n  public setChangeTimestamp(changeTimestamp: Date): void {\r\n    this.changeTimestamp = changeTimestamp;\r\n  }\r\n}\r\n\r\nAggregate_add( PasswordChangeResponse, \"PINCHRQ\" );\r\nElement_add(PasswordChangeResponse, { name: \"USERID\", required: true, order: 0, type: String, read: PasswordChangeResponse.prototype.getUserId, write: PasswordChangeResponse.prototype.setUserId });\r\nElement_add(PasswordChangeResponse, { name: \"DTCHANGED\", order: 10, type: Date, read: PasswordChangeResponse.prototype.getChangeTimestamp, write: PasswordChangeResponse.prototype.setChangeTimestamp });\r\n","import { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\r\nimport { PasswordChangeResponse } from \"./PasswordChangeResponse\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class PasswordChangeResponseTransaction extends TransactionWrappedResponseMessage<PasswordChangeResponse> {\r\n\r\n  private message: PasswordChangeResponse;\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @return The message.\r\n   */\r\n  public getMessage(): PasswordChangeResponse {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The message.\r\n   *\r\n   * @param message The message.\r\n   */\r\n  public setMessage(message: PasswordChangeResponse): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): PasswordChangeResponse {\r\n    return this.getMessage();\r\n  }\r\n}\r\n\r\nAggregate_add(PasswordChangeResponseTransaction, \"PINCHTRNRS\");\r\nChildAggregate_add(PasswordChangeResponseTransaction, { required: true, order: 30, type: PasswordChangeResponse, read: PasswordChangeResponseTransaction.prototype.getMessage, write: PasswordChangeResponseTransaction.prototype.setMessage });\r\n","import { ResponseMessage } from \"../ResponseMessage\";\r\nimport { StatusHolder } from \"../common/StatusHolder\";\r\nimport { Status } from \"../common/Status\";\r\nimport { FinancialInstitutionInfo } from \"./FinancialInstitution\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n/**\r\n * The signon response message.\r\n *\r\n * @see \"Section 2.5.1.2, OFX Spec.\"\r\n */\r\nexport class SignonResponse extends ResponseMessage implements StatusHolder {\r\n\r\n  private status: Status;\r\n  private timestamp: Date;\r\n  private userKey: string;\r\n  private userKeyExpiration: Date;\r\n  private language: string;\r\n  private profileLastUpdated: Date;\r\n  private accountLastUpdated: Date;\r\n  private financialInstitution: FinancialInstitutionInfo;\r\n  private sessionId: string;\r\n  private accessKey: string;\r\n\r\n  constructor() {\r\n    super();\r\n    this.language = \"ENG\"; //Locale.US.getISO3Language();\r\n  }\r\n\r\n  public getResponseMessageName(): string {\r\n    return \"signon\";\r\n  }\r\n\r\n  public getStatusHolderName(): string {\r\n    return this.getResponseMessageName();\r\n  }\r\n\r\n  /**\r\n   * The signon response status.\r\n   *\r\n   * @return The signon response status.\r\n   */\r\n  public getStatus(): Status {\r\n    return this.status;\r\n  }\r\n\r\n  /**\r\n   * The signon response status.\r\n   *\r\n   * @param status The signon response status.\r\n   */\r\n  public setStatus(status: Status): void {\r\n    this.status = status;\r\n  }\r\n\r\n  /**\r\n   * The timestamp of this response.\r\n   *\r\n   * @return The timestamp of this response.\r\n   */\r\n  public getTimestamp(): Date {\r\n    return this.timestamp;\r\n  }\r\n\r\n  /**\r\n   * The timestamp of this response.\r\n   *\r\n   * @param timestamp The timestamp of this response.\r\n   */\r\n  public setTimestamp(timestamp: Date): void {\r\n    this.timestamp = timestamp;\r\n  }\r\n\r\n  /**\r\n   * The userkey that can be used instead of the username/password.\r\n   *\r\n   * @return The userkey that can be used instead of the username/password.\r\n   */\r\n  public getUserKey(): string {\r\n    return this.userKey;\r\n  }\r\n\r\n  /**\r\n   * The userkey that can be used instead of the username/password.\r\n   *\r\n   * @param userKey The userkey that can be used instead of the username/password.\r\n   */\r\n  public setUserKey(userKey: string): void {\r\n    this.userKey = userKey;\r\n  }\r\n\r\n  /**\r\n   * The date/time of the expiration of the user key.\r\n   *\r\n   * @return The date/time of the expiration of the user key.\r\n   */\r\n  public getUserKeyExpiration(): Date {\r\n    return this.userKeyExpiration;\r\n  }\r\n\r\n  /**\r\n   * The date/time of the expiration of the user key.\r\n   *\r\n   * @param userKeyExpiration The date/time of the expiration of the user key.\r\n   */\r\n  public setUserKeyExpiration(userKeyExpiration: Date): void {\r\n    this.userKeyExpiration = userKeyExpiration;\r\n  }\r\n\r\n  /**\r\n   * The three-letter langauge code.\r\n   *\r\n   * @return The three-letter langauge code.\r\n   * @see java.util.Locale#getISO3Language()\r\n   */\r\n  public getLanguage(): string {\r\n    return this.language;\r\n  }\r\n\r\n  /**\r\n   * The three-letter langauge code.\r\n   *\r\n   * @param language The three-letter langauge code.\r\n   */\r\n  public setLanguage(language: string): void {\r\n    this.language = language;\r\n  }\r\n\r\n  /**\r\n   * The date/time that the FI profile was last updated.\r\n   *\r\n   * @return The date/time that the FI profile was last updated.\r\n   */\r\n  public getProfileLastUpdated(): Date {\r\n    return this.profileLastUpdated;\r\n  }\r\n\r\n  /**\r\n   * The date/time that the FI profile was last updated.\r\n   *\r\n   * @param profileLastUpdated The date/time that the FI profile was last updated.\r\n   */\r\n  public setProfileLastUpdated(profileLastUpdated: Date): void {\r\n    this.profileLastUpdated = profileLastUpdated;\r\n  }\r\n\r\n  /**\r\n   * The date/time that the user's account information was updated.\r\n   *\r\n   * @return The date/time that the user's account information was updated.\r\n   */\r\n  public getAccountLastUpdated(): Date {\r\n    return this.accountLastUpdated;\r\n  }\r\n\r\n  /**\r\n   * The date/time that the user's account information was updated.\r\n   *\r\n   * @param accountLastUpdated The date/time that the user's account information was updated.\r\n   */\r\n  public setAccountLastUpdated(accountLastUpdated: Date): void {\r\n    this.accountLastUpdated = accountLastUpdated;\r\n  }\r\n\r\n  /**\r\n   * The financial instutution identity information.\r\n   *\r\n   * @return The financial instutution identity information.\r\n   */\r\n  public getFinancialInstitution(): FinancialInstitutionInfo {\r\n    return this.financialInstitution;\r\n  }\r\n\r\n  /**\r\n   * The financial instutution identity information.\r\n   *\r\n   * @param financialInstitution The financial instutution identity information.\r\n   */\r\n  public setFinancialInstitution(financialInstitution: FinancialInstitutionInfo): void {\r\n    this.financialInstitution = financialInstitution;\r\n  }\r\n\r\n  /**\r\n   * The session id for the client.\r\n   *\r\n   * @return The session id for the client.\r\n   */\r\n  public getSessionId(): string {\r\n    return this.sessionId;\r\n  }\r\n\r\n  /**\r\n   * The session id for the client.\r\n   *\r\n   * @param sessionId The session id for the client.\r\n   */\r\n  public setSessionId(sessionId: string): void {\r\n    this.sessionId = sessionId;\r\n  }\r\n\r\n  /**\r\n   * The access key that the client should return in the next sign-on requuest.\r\n   *\r\n   * @return The access key that the client should return in the next sign-on requuest.\r\n   */\r\n  public getAccessKey(): string {\r\n    return this.accessKey;\r\n  }\r\n\r\n  /**\r\n   * The access key that the client should return in the next sign-on requuest.\r\n   *\r\n   * @param accessKey The access key that the client should return in the next sign-on requuest.\r\n   */\r\n  public setAccessKey(accessKey: string): void {\r\n    this.accessKey = accessKey;\r\n  }\r\n}\r\n\r\nAggregate_add( SignonResponse, \"SONRS\" );\r\nChildAggregate_add(SignonResponse, { required: true, order: 0, type: Status, read: SignonResponse.prototype.getStatus, write: SignonResponse.prototype.setStatus });\r\nElement_add(SignonResponse, { name: \"DTSERVER\", required: true, order: 10, type: Date, read: SignonResponse.prototype.getTimestamp, write: SignonResponse.prototype.setTimestamp });\r\nElement_add(SignonResponse, { name: \"USERKEY\", order: 20, type: String, read: SignonResponse.prototype.getUserKey, write: SignonResponse.prototype.setUserKey });\r\nElement_add(SignonResponse, { name: \"TSKEYEXPIRE\", order: 30, type: Date, read: SignonResponse.prototype.getUserKeyExpiration, write: SignonResponse.prototype.setUserKeyExpiration });\r\nElement_add(SignonResponse, { name: \"LANGUAGE\", required: true, order: 40, type: String, read: SignonResponse.prototype.getLanguage, write: SignonResponse.prototype.setLanguage });\r\nElement_add(SignonResponse, { name: \"DTPROFUP\", order: 50, type: Date, read: SignonResponse.prototype.getProfileLastUpdated, write: SignonResponse.prototype.setProfileLastUpdated });\r\nElement_add(SignonResponse, { name: \"DTACCTUP\", order: 60, type: Date, read: SignonResponse.prototype.getAccountLastUpdated, write: SignonResponse.prototype.setAccountLastUpdated });\r\nChildAggregate_add(SignonResponse, { order: 70, type: FinancialInstitutionInfo, read: SignonResponse.prototype.getFinancialInstitution, write: SignonResponse.prototype.setFinancialInstitution });\r\nElement_add(SignonResponse, { name: \"SESSCOOKIE\", order: 80, type: String, read: SignonResponse.prototype.getSessionId, write: SignonResponse.prototype.setSessionId });\r\nElement_add(SignonResponse, { name: \"ACCESSKEY\", order: 90, type: String, read: SignonResponse.prototype.getAccessKey, write: SignonResponse.prototype.setAccessKey });\r\n","import { ResponseMessageSet } from \"../ResponseMessageSet\";\r\nimport { SignonResponse } from \"./SignonResponse\";\r\nimport { PasswordChangeResponseTransaction } from \"./PasswordChangeResponseTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n/**\r\n * The sign-on response message set.\r\n *\r\n * @see \"Section 2.5, OFX Spec.\"\r\n */\r\nexport class SignonResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private signonResponse: SignonResponse;\r\n  private passwordChangeResponse: PasswordChangeResponseTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.signon;\r\n  }\r\n\r\n  /**\r\n   * The message for this message set.\r\n   *\r\n   * @return The message for this message set.\r\n   */\r\n  public getSignonResponse(): SignonResponse {\r\n    return this.signonResponse;\r\n  }\r\n\r\n  /**\r\n   * The message for this message set.\r\n   *\r\n   * @param signonResponse The message for this message set.\r\n   */\r\n  public setSignonResponse(signonResponse: SignonResponse): void {\r\n    this.signonResponse = signonResponse;\r\n  }\r\n\r\n  /**\r\n   * The password change response.\r\n   *\r\n   * @return The password change response.\r\n   */\r\n  public getPasswordChangeResponse(): PasswordChangeResponseTransaction {\r\n    return this.passwordChangeResponse;\r\n  }\r\n\r\n  /**\r\n   * The password change response.\r\n   *\r\n   * @param passwordChangeResponse The password change response.\r\n   */\r\n  public setPasswordChangeResponse(passwordChangeResponse: PasswordChangeResponseTransaction): void {\r\n    this.passwordChangeResponse = passwordChangeResponse;\r\n  }\r\n\r\n  //todo: challenge request/response\r\n\r\n  // Inherited.\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\r\n\r\n    if (this.getSignonResponse() != null) {\r\n      messages.push(this.getSignonResponse());\r\n    }\r\n\r\n    return messages;\r\n  }\r\n}\r\n\r\nAggregate_add(SignonResponseMessageSet, \"SIGNONMSGSRSV1\");\r\nChildAggregate_add(SignonResponseMessageSet, { order: 0, type: SignonResponse, read: SignonResponseMessageSet.prototype.getSignonResponse, write: SignonResponseMessageSet.prototype.setSignonResponse });\r\nChildAggregate_add(SignonResponseMessageSet, { order: 10, type: PasswordChangeResponseTransaction, read: SignonResponseMessageSet.prototype.getPasswordChangeResponse, write: SignonResponseMessageSet.prototype.setPasswordChangeResponse });\r\n","import { BankAccountInfo } from \"../banking/BankAccountInfo\";\r\nimport { CreditCardAccountInfo } from \"../creditcard/CreditCardAccountInfo\";\r\nimport { InvestmentAccountInfo } from \"../investment/accounts/InvestmentAccountInfo\";\r\nimport { AccountInfo } from \"../common/AccountInfo\";\r\nimport { OFXException } from \"../../../OFXException\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class AccountProfile {\r\n\r\n  private description: string;\r\n  private phone: string;\r\n  private bankSpecifics: BankAccountInfo;\r\n  private creditCardSpecifics: CreditCardAccountInfo;\r\n  private investSpecifics: InvestmentAccountInfo;\r\n\r\n  /**\r\n   * Description of the account.\r\n   *\r\n   * @return The description of the account.\r\n   */\r\n  public getDescription(): string {\r\n    return this.description;\r\n  }\r\n\r\n  /**\r\n   * The description of the account.\r\n   *\r\n   * @param description The description of the account.\r\n   */\r\n  public setDescription(description: string): void {\r\n    this.description = description;\r\n  }\r\n\r\n  /**\r\n   * Phone number for the account.\r\n   *\r\n   * @return Phone number for the account.\r\n   */\r\n  public getPhone(): string {\r\n    return this.phone;\r\n  }\r\n\r\n  /**\r\n   * Phone number for the account.\r\n   *\r\n   * @param phone Phone number for the account.\r\n   */\r\n  public setPhone(phone: string): void {\r\n    this.phone = phone;\r\n  }\r\n\r\n  /**\r\n   * Account specifics.\r\n   *\r\n   * @return Account specifics.\r\n   */\r\n  public getSpecifics(): AccountInfo {\r\n    if (this.getBankSpecifics() != null && this.getCreditCardSpecifics() != null) {\r\n      throw new OFXException(\"Only one account specifics aggregate can be set at a time.\");\r\n    }\r\n    else if (this.getBankSpecifics() != null) {\r\n      return this.getBankSpecifics();\r\n    } else if (this.getInvestmentSpecifics() != null) {\r\n      return this.getInvestmentSpecifics();\r\n    }\r\n    else {\r\n      return this.getCreditCardSpecifics();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Account specifics.\r\n   *\r\n   * @param specifics Account specifics.\r\n   */\r\n  public setSpecifics(specifics: AccountInfo): void {\r\n    if (specifics instanceof BankAccountInfo) {\r\n      this.setBankSpecifics(<BankAccountInfo> specifics);\r\n    }\r\n    else if (specifics instanceof CreditCardAccountInfo) {\r\n      this.setCreditCardSpecifics(<CreditCardAccountInfo> specifics);\r\n    } else if (specifics instanceof InvestmentAccountInfo) {\r\n      this.setInvestmentSpecifics(<InvestmentAccountInfo> specifics);\r\n    }\r\n    else {\r\n      throw new OFXException(\"Unknown specifics type: \" + specifics);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bank-specific info.\r\n   *\r\n   * @return Bank-specific info.\r\n   */\r\n  public getBankSpecifics(): BankAccountInfo {\r\n    return this.bankSpecifics;\r\n  }\r\n\r\n  /**\r\n   * Bank-specific info.\r\n   *\r\n   * @param bankSpecifics Bank-specific info.\r\n   */\r\n  public setBankSpecifics(bankSpecifics: BankAccountInfo): void {\r\n    this.creditCardSpecifics = null;\r\n    this.investSpecifics = null;\r\n    this.bankSpecifics = bankSpecifics;\r\n  }\r\n\r\n  /**\r\n   * Credit-card account info.\r\n   *\r\n   * @return Credit-card account info.\r\n   */\r\n  public getCreditCardSpecifics(): CreditCardAccountInfo {\r\n    return this.creditCardSpecifics;\r\n  }\r\n\r\n  /**\r\n   * Credit-card account info.\r\n   *\r\n   * @param creditCardSpecifics Credit-card account info.\r\n   */\r\n  public setCreditCardSpecifics(creditCardSpecifics: CreditCardAccountInfo): void {\r\n    this.bankSpecifics = null;\r\n    this.investSpecifics = null;\r\n    this.creditCardSpecifics = creditCardSpecifics;\r\n  }\r\n\r\n  /**\r\n   * Investment account info.\r\n   *\r\n   * @return Investment account info.\r\n   */\r\n  public getInvestmentSpecifics(): InvestmentAccountInfo {\r\n    return this.investSpecifics;\r\n  }\r\n\r\n  /**\r\n   * Investment account info.\r\n   *\r\n   * @param investSpecifics Investment account info.\r\n   */\r\n  public setInvestmentSpecifics(investSpecifics: InvestmentAccountInfo): void {\r\n    this.bankSpecifics = null;\r\n    this.creditCardSpecifics = null;\r\n    this.investSpecifics = investSpecifics;\r\n  }\r\n}\r\n\r\nAggregate_add( AccountProfile, \"ACCTINFO\" );\r\nElement_add(AccountProfile, { name: \"DESC\", order: 0, type: String, read: AccountProfile.prototype.getDescription, write: AccountProfile.prototype.setDescription });\r\nElement_add(AccountProfile, { name: \"PHONE\", order: 10, type: String, read: AccountProfile.prototype.getPhone, write: AccountProfile.prototype.setPhone });\r\nChildAggregate_add(AccountProfile, { order: 20, type: BankAccountInfo, read: AccountProfile.prototype.getBankSpecifics, write: AccountProfile.prototype.setBankSpecifics });\r\nChildAggregate_add(AccountProfile, { order: 30, type: CreditCardAccountInfo, read: AccountProfile.prototype.getCreditCardSpecifics, write: AccountProfile.prototype.setCreditCardSpecifics });\r\nChildAggregate_add(AccountProfile, { order: 40, type: InvestmentAccountInfo, read: AccountProfile.prototype.getInvestmentSpecifics, write: AccountProfile.prototype.setInvestmentSpecifics });\r\n","import { ResponseMessage } from \"../ResponseMessage\";\r\nimport { AccountProfile } from \"./AccountProfile\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class AccountInfoResponse extends ResponseMessage {\r\n\r\n  private lastUpdated: Date;\r\n  private accounts: Array<AccountProfile>;\r\n\r\n  constructor() {\r\n    super();\r\n    this.lastUpdated = new Date(0); //default is never updated.\r\n  }\r\n\r\n  public getResponseMessageName(): string {\r\n    return \"account info\";\r\n  }\r\n\r\n  /**\r\n   * When the account info was last updated.\r\n   *\r\n   * @return When the account info was last updated.\r\n   */\r\n  public getLastUpdated(): Date {\r\n    return this.lastUpdated;\r\n  }\r\n\r\n  /**\r\n   * When the account info was last updated.\r\n   *\r\n   * @param lastUpdated When the account info was last updated.\r\n   */\r\n  public setLastUpdated(lastUpdated: Date): void {\r\n    this.lastUpdated = lastUpdated;\r\n  }\r\n\r\n  /**\r\n   * The accounts.\r\n   *\r\n   * @return The accounts.\r\n   */\r\n  public getAccounts(): Array<AccountProfile> {\r\n    return this.accounts;\r\n  }\r\n\r\n  /**\r\n   * The accounts.\r\n   *\r\n   * @param accounts The accounts.\r\n   */\r\n  public setAccounts(accounts: Array<AccountProfile>): void {\r\n    this.accounts = accounts;\r\n  }\r\n}\r\n\r\nAggregate_add(AccountInfoResponse, \"ACCTINFORS\");\r\nElement_add(AccountInfoResponse, { name: \"DTACCTUP\", required: true, order: 0, type: Date, read: AccountInfoResponse.prototype.getLastUpdated, write: AccountInfoResponse.prototype.setLastUpdated });\r\nChildAggregate_add(AccountInfoResponse, { order: 10, type: Array, collectionEntryType: AccountProfile, read: AccountInfoResponse.prototype.getAccounts, write: AccountInfoResponse.prototype.setAccounts });\r\n","import { AccountInfoResponse } from \"./AccountInfoResponse\";\r\nimport { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class AccountInfoResponseTransaction extends TransactionWrappedResponseMessage<AccountInfoResponse> {\r\n\r\n  private message: AccountInfoResponse;\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @return The wrapped message.\r\n   */\r\n  public getMessage(): AccountInfoResponse {\r\n    return this.message;\r\n  }\r\n\r\n  /**\r\n   * The wrapped message.\r\n   *\r\n   * @param message The wrapped message.\r\n   */\r\n  public setMessage(message: AccountInfoResponse): void {\r\n    this.message = message;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): AccountInfoResponse {\r\n    return this.getMessage();\r\n  }\r\n}\r\n\r\nAggregate_add( AccountInfoResponseTransaction, \"ACCTINFOTRNRS\" );\r\nChildAggregate_add(AccountInfoResponseTransaction, { required: true, order: 30, type: AccountInfoResponse, read: AccountInfoResponseTransaction.prototype.getMessage, write: AccountInfoResponseTransaction.prototype.setMessage });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ResponseMessageSet } from \"../ResponseMessageSet\";\r\nimport { AccountInfoResponseTransaction } from \"./AccountInfoResponseTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class SignupResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private accountInfoResponse: AccountInfoResponseTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.signup;\r\n  }\r\n\r\n  /**\r\n   * The account info response.\r\n   *\r\n   * @return The account info response.\r\n   */\r\n  public getAccountInfoResponse(): AccountInfoResponseTransaction {\r\n    return this.accountInfoResponse;\r\n  }\r\n\r\n  /**\r\n   * The account info response.\r\n   *\r\n   * @param accountInfoResponse The account info response.\r\n   */\r\n  public setAccountInfoResponse(accountInfoResponse: AccountInfoResponseTransaction): void {\r\n    this.accountInfoResponse = accountInfoResponse;\r\n  }\r\n\r\n  /**\r\n   * The response messages.\r\n   *\r\n   * @return The response messages.\r\n   */\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    var messages: Array<ResponseMessage> = new Array<ResponseMessage>();\r\n\r\n    if (this.getAccountInfoResponse() != null) {\r\n      messages.push(this.getAccountInfoResponse());\r\n    }\r\n\r\n    return messages;\r\n  }\r\n}\r\n\r\nAggregate_add(SignupResponseMessageSet, \"SIGNUPMSGSRSV1\");\r\nChildAggregate_add(SignupResponseMessageSet, { order: 0, type: AccountInfoResponseTransaction, read: SignupResponseMessageSet.prototype.getAccountInfoResponse, write: SignupResponseMessageSet.prototype.setAccountInfoResponse });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class ProcDet {\r\n\r\n\tprivate dtAqd: string;\r\n\tprivate dtSale: string;\r\n\tprivate secName: string;\r\n\tprivate costBasis: string;\r\n\tprivate saleSpr: string;\r\n\tprivate longShort: string;\r\n\tprivate wasDisAllowed: string;\r\n\tprivate noncoveredSec: string;\r\n\tprivate basisNotshown: string;\r\n\t/**\r\n\t * @return the dtAqd\r\n\t */\r\n\tpublic getDtAqd(): string {\r\n\t\treturn this.dtAqd;\r\n\t}\r\n\t/**\r\n\t * @param dtAqd the dtAqd to set\r\n\t */\r\n\tpublic setDtAqd(dtAqd: string): void {\r\n\t\tthis.dtAqd = dtAqd;\r\n\t}\r\n\t/**\r\n\t * @return the dtSale\r\n\t */\r\n\tpublic getDtSale(): string {\r\n\t\treturn this.dtSale;\r\n\t}\r\n\t/**\r\n\t * @param dtSale the dtSale to set\r\n\t */\r\n\tpublic setDtSale(dtSale: string): void {\r\n\t\tthis.dtSale = dtSale;\r\n\t}\r\n\t/**\r\n\t * @return the secName\r\n\t */\r\n\tpublic getSecName(): string {\r\n\t\treturn this.secName;\r\n\t}\r\n\t/**\r\n\t * @param secName the secName to set\r\n\t */\r\n\tpublic setSecName(secName: string): void {\r\n\t\tthis.secName = secName;\r\n\t}\r\n\t/**\r\n\t * @return the costBasis\r\n\t */\r\n\tpublic getCostBasis(): string {\r\n\t\treturn this.costBasis;\r\n\t}\r\n\t/**\r\n\t * @param costBasis the costBasis to set\r\n\t */\r\n\tpublic setCostBasis(costBasis: string): void {\r\n\t\tthis.costBasis = costBasis;\r\n\t}\r\n\t/**\r\n\t * @return the saleSpr\r\n\t */\r\n\tpublic getSaleSpr(): string {\r\n\t\treturn this.saleSpr;\r\n\t}\r\n\t/**\r\n\t * @param saleSpr the saleSpr to set\r\n\t */\r\n\tpublic setSaleSpr(saleSpr: string): void {\r\n\t\tthis.saleSpr = saleSpr;\r\n\t}\r\n\t/**\r\n\t * @return the longShort\r\n\t */\r\n\tpublic getLongShort(): string {\r\n\t\treturn this.longShort;\r\n\t}\r\n\t/**\r\n\t * @param longShort the longShort to set\r\n\t */\r\n\tpublic setLongShort(longShort: string): void {\r\n\t\tthis.longShort = longShort;\r\n\t}\r\n\t/**\r\n\t * @return the wasDisAllowed\r\n\t */\r\n\tpublic getWasDisAllowed(): string {\r\n\t\treturn this.wasDisAllowed;\r\n\t}\r\n\t/**\r\n\t * @param wasDisAllowed the wasDisAllowed to set\r\n\t */\r\n\tpublic setWasDisAllowed(wasDisAllowed: string): void {\r\n\t\tthis.wasDisAllowed = wasDisAllowed;\r\n\t}\r\n\t/**\r\n\t * @return the noncoveredSec\r\n\t */\r\n\tpublic getNoncoveredSec(): string {\r\n\t\treturn this.noncoveredSec;\r\n\t}\r\n\t/**\r\n\t * @param noncoveredSec the noncoveredSec to set\r\n\t */\r\n\tpublic setNoncoveredSec(noncoveredSec: string): void {\r\n\t\tthis.noncoveredSec = noncoveredSec;\r\n\t}\r\n\t/**\r\n\t * @return the basisNotshown\r\n\t */\r\n\tpublic getBasisNotshown(): string {\r\n\t\treturn this.basisNotshown;\r\n\t}\r\n\t/**\r\n\t * @param basisNotshown the basisNotshown to set\r\n\t */\r\n\tpublic setBasisNotshown(basisNotshown: string): void {\r\n\t\tthis.basisNotshown = basisNotshown;\r\n\t}\r\n}\r\n\r\nAggregate_add( ProcDet, \"PROCDET_V100\");\r\nElement_add(ProcDet, { name: \"DTAQD\", required: false, order: 0, type: String, read: ProcDet.prototype.getDtAqd, write: ProcDet.prototype.setDtAqd });\r\nElement_add(ProcDet, { name: \"DTSALE\", required: false, order: 2, type: String, read: ProcDet.prototype.getDtSale, write: ProcDet.prototype.setDtSale });\r\nElement_add(ProcDet, { name: \"SECNAME\", required: false, order: 3, type: String, read: ProcDet.prototype.getSecName, write: ProcDet.prototype.setSecName });\r\nElement_add(ProcDet, { name: \"COSTBASIS\", required: false, order: 4, type: String, read: ProcDet.prototype.getCostBasis, write: ProcDet.prototype.setCostBasis });\r\nElement_add(ProcDet, { name: \"SALESPR\", required: false, order: 5, type: String, read: ProcDet.prototype.getSaleSpr, write: ProcDet.prototype.setSaleSpr });\r\nElement_add(ProcDet, { name: \"LONGSHORT\", required: false, order: 6, type: String, read: ProcDet.prototype.getLongShort, write: ProcDet.prototype.setLongShort });\r\nElement_add(ProcDet, { name: \"WASHSALELOSSDISALLOWED\", required: false, order: 7, type: String, read: ProcDet.prototype.getWasDisAllowed, write: ProcDet.prototype.setWasDisAllowed });\r\nElement_add(ProcDet, { name: \"NONCOVEREDSECURITY\", required: false, order: 8, type: String, read: ProcDet.prototype.getNoncoveredSec, write: ProcDet.prototype.setNoncoveredSec });\r\nElement_add(ProcDet, { name: \"BASISNOTSHOWN\", required: false, order: 9, type: String, read: ProcDet.prototype.getBasisNotshown, write: ProcDet.prototype.setBasisNotshown });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ProcDet } from \"./ProcDet\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class ExtDBInfo {\r\n\r\n\tprivate procDet: Array<ProcDet>;\r\n\tprivate teInterest: string;\r\n\tprivate pabInterest: string;\r\n\tprivate teIntDividend: string;\r\n\tprivate pabDividend: string;\r\n\r\n\t/**\r\n\t * @return the procDet\r\n\t */\r\n\tpublic getProcDet(): Array<ProcDet> {\r\n\t\treturn this.procDet;\r\n\t}\r\n\r\n\t/**\r\n\t * @param procDet the procDet to set\r\n\t */\r\n    public setProcDet(procDet: Array<ProcDet>): void {\r\n\t\tthis.procDet = procDet;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the teInterest\r\n\t */\r\n\tpublic getTeInterest(): string {\r\n\t\treturn this.teInterest;\r\n\t}\r\n\r\n\t/**\r\n\t * @param teInterest the teInterest to set\r\n\t */\r\n\tpublic setTeInterest(teInterest: string): void {\r\n\t\tthis.teInterest = teInterest;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the pabInterest\r\n\t */\r\n\tpublic getPabInterest(): string {\r\n\t\treturn this.pabInterest;\r\n\t}\r\n\r\n\t/**\r\n\t * @param pabInterest the pabInterest to set\r\n\t */\r\n\tpublic setPabInterest(pabInterest: string): void {\r\n\t\tthis.pabInterest = pabInterest;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the teIntDividend\r\n\t */\r\n\tpublic getTeIntDividend(): string {\r\n\t\treturn this.teIntDividend;\r\n\t}\r\n\r\n\t/**\r\n\t * @param teIntDividend the teIntDividend to set\r\n\t */\r\n\tpublic setTeIntDividend(teIntDividend: string): void {\r\n\t\tthis.teIntDividend = teIntDividend;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the pabDividend\r\n\t */\r\n\tpublic getPabDividend(): string {\r\n\t\treturn this.pabDividend;\r\n\t}\r\n\r\n\t/**\r\n\t * @param pabDividend the pabDividend to set\r\n\t */\r\n\tpublic setPabDividend(pabDividend: string): void {\r\n\t\tthis.pabDividend = pabDividend;\r\n\t}\r\n}\r\n\r\nAggregate_add( ExtDBInfo, \"EXTDBINFO_V100\");\r\nChildAggregate_add(ExtDBInfo, { required:false, order: 0, type: Array, collectionEntryType: ProcDet, read: ExtDBInfo.prototype.getProcDet, write: ExtDBInfo.prototype.setProcDet });\r\nElement_add(ExtDBInfo, { name: \"TEINTEREST\",required: false , order: 1, type: String, read: ExtDBInfo.prototype.getTeInterest, write: ExtDBInfo.prototype.setTeInterest });\r\nElement_add(ExtDBInfo, { name: \"PABINTEREST\",required: false , order: 2, type: String, read: ExtDBInfo.prototype.getPabInterest, write: ExtDBInfo.prototype.setPabInterest });\r\nElement_add(ExtDBInfo, { name: \"TEINTDIVIDEND\",required: false , order: 3, type: String, read: ExtDBInfo.prototype.getTeIntDividend, write: ExtDBInfo.prototype.setTeIntDividend });\r\nElement_add(ExtDBInfo, { name: \"PABDIVIDEND\",required: false , order: 4, type: String, read: ExtDBInfo.prototype.getPabDividend, write: ExtDBInfo.prototype.setPabDividend });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class PayerAddress {\r\n\r\n\tprivate payerName1: string;\r\n\tprivate payerName2: string;\r\n\tprivate address1: string;\r\n\tprivate address2: string;\r\n\tprivate city: string;\r\n\tprivate state: string;\r\n\tprivate postalCode: string;\r\n\tprivate phone: string;\r\n\t/**\r\n\t * @return the payerName1\r\n\t */\r\n\tpublic getPayerName1(): string {\r\n\t\treturn this.payerName1;\r\n\t}\r\n\t/**\r\n\t * @param payerName1 the payerName1 to set\r\n\t */\r\n\tpublic setPayerName1(payerName1: string): void {\r\n\t\tthis.payerName1 = payerName1;\r\n\t}\r\n\t/**\r\n\t * @return the payerName2\r\n\t */\r\n\tpublic getPayerName2(): string {\r\n\t\treturn this.payerName2;\r\n\t}\r\n\t/**\r\n\t * @param payerName2 the payerName2 to set\r\n\t */\r\n\tpublic setPayerName2(payerName2: string): void {\r\n\t\tthis.payerName2 = payerName2;\r\n\t}\r\n\t/**\r\n\t * @return the address1\r\n\t */\r\n\tpublic getAddress1(): string {\r\n\t\treturn this.address1;\r\n\t}\r\n\t/**\r\n\t * @param address1 the address1 to set\r\n\t */\r\n\tpublic setAddress1(address1: string): void {\r\n\t\tthis.address1 = address1;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the address2\r\n\t */\r\n\tpublic getAddress2(): string {\r\n\t\treturn this.address2;\r\n\t}\r\n\t/**\r\n\t * @param address2 the address2 to set\r\n\t */\r\n\tpublic setAddress2(address2: string): void {\r\n\t\tthis.address2 = address2;\r\n\t}\r\n\t/**\r\n\t * @return the city\r\n\t */\r\n\tpublic getCity(): string {\r\n\t\treturn this.city;\r\n\t}\r\n\t/**\r\n\t * @param city the city to set\r\n\t */\r\n\tpublic setCity(city: string): void {\r\n\t\tthis.city = city;\r\n\t}\r\n\t/**\r\n\t * @return the state\r\n\t */\r\n\tpublic getState(): string {\r\n\t\treturn this.state;\r\n\t}\r\n\t/**\r\n\t * @param state the state to set\r\n\t */\r\n\tpublic setState(state: string): void {\r\n\t\tthis.state = state;\r\n\t}\r\n\t/**\r\n\t * @return the postalCode\r\n\t */\r\n\tpublic getPostalCode(): string {\r\n\t\treturn this.postalCode;\r\n\t}\r\n\t/**\r\n\t * @param postalCode the postalCode to set\r\n\t */\r\n\tpublic setPostalCode(postalCode: string): void {\r\n\t\tthis.postalCode = postalCode;\r\n\t}\r\n\t/**\r\n\t * @return the phone\r\n\t */\r\n\tpublic getPhone(): string {\r\n\t\treturn this.phone;\r\n\t}\r\n\t/**\r\n\t * @param phone the phone to set\r\n\t */\r\n\tpublic setPhone(phone: string): void {\r\n\t\tthis.phone = phone;\r\n\t}\r\n}\r\n\r\nAggregate_add(PayerAddress, \"PAYERADDR\");\r\nElement_add(PayerAddress, { name: \"PAYERNAME1\",required: true , order: 0, type: String, read: PayerAddress.prototype.getPayerName1, write: PayerAddress.prototype.setPayerName1 });\r\nElement_add(PayerAddress, { name: \"PAYERNAME2\",required: false , order: 1, type: String, read: PayerAddress.prototype.getPayerName2, write: PayerAddress.prototype.setPayerName2 });\r\nElement_add(PayerAddress, { name: \"ADDR1\",required: true , order: 2, type: String, read: PayerAddress.prototype.getAddress1, write: PayerAddress.prototype.setAddress1 });\r\nElement_add(PayerAddress, { name: \"ADDR2\",required: true , order: 3, type: String, read: PayerAddress.prototype.getAddress2, write: PayerAddress.prototype.setAddress2 });\r\nElement_add(PayerAddress, { name: \"CITY\",required: true , order: 4, type: String, read: PayerAddress.prototype.getCity, write: PayerAddress.prototype.setCity });\r\nElement_add(PayerAddress, { name: \"STATE\",required: true , order: 5, type: String, read: PayerAddress.prototype.getState, write: PayerAddress.prototype.setState });\r\nElement_add(PayerAddress, { name: \"POSTALCODE\",required: true , order: 6, type: String, read: PayerAddress.prototype.getPostalCode, write: PayerAddress.prototype.setPostalCode });\r\nElement_add(PayerAddress, { name: \"PHONE\",required: false , order: 7, type: String, read: PayerAddress.prototype.getPhone, write: PayerAddress.prototype.setPhone });\r\n","import { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\nexport class RecAddress {\r\n\r\n\tprivate recName1: string;\r\n\tprivate recName2: string;\r\n\tprivate address1: string;\r\n\tprivate address2: string;\r\n\tprivate city: string;\r\n\tprivate state: string;\r\n\tprivate postalCode: string;\r\n\tprivate phone: string;\r\n\t/**\r\n\t * @return the recName1\r\n\t */\r\n\tpublic getRecName1(): string {\r\n\t\treturn this.recName1;\r\n\t}\r\n\t/**\r\n\t * @param recName1 the recName1 to set\r\n\t */\r\n\tpublic setRecName1(recName1: string): void {\r\n\t\tthis.recName1 = recName1;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the recName2\r\n\t */\r\n\tpublic getRecName2(): string {\r\n\t\treturn this.recName2;\r\n\t}\r\n\t/**\r\n\t * @param recName2 the recName2 to set\r\n\t */\r\n\tpublic setRecName2(recName2: string): void {\r\n\t\tthis.recName2 = recName2;\r\n\t}\r\n\t/**\r\n\t * @return the address1\r\n\t */\r\n\tpublic getAddress1(): string {\r\n\t\treturn this.address1;\r\n\t}\r\n\t/**\r\n\t * @param address1 the address1 to set\r\n\t */\r\n\tpublic setAddress1(address1: string): void {\r\n\t\tthis.address1 = address1;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the address2\r\n\t */\r\n\tpublic getAddress2(): string {\r\n\t\treturn this.address2;\r\n\t}\r\n\t/**\r\n\t * @param address2 the address2 to set\r\n\t */\r\n\tpublic setAddress2(address2: string): void {\r\n\t\tthis.address2 = address2;\r\n\t}\r\n\t/**\r\n\t * @return the city\r\n\t */\r\n\tpublic getCity(): string {\r\n\t\treturn this.city;\r\n\t}\r\n\t/**\r\n\t * @param city the city to set\r\n\t */\r\n\tpublic setCity(city: string): void {\r\n\t\tthis.city = city;\r\n\t}\r\n\t/**\r\n\t * @return the state\r\n\t */\r\n\tpublic getState(): string {\r\n\t\treturn this.state;\r\n\t}\r\n\t/**\r\n\t * @param state the state to set\r\n\t */\r\n\tpublic setState(state: string): void {\r\n\t\tthis.state = state;\r\n\t}\r\n\t/**\r\n\t * @return the postalCode\r\n\t */\r\n\tpublic getPostalCode(): string {\r\n\t\treturn this.postalCode;\r\n\t}\r\n\t/**\r\n\t * @param postalCode the postalCode to set\r\n\t */\r\n\tpublic setPostalCode(postalCode: string): void {\r\n\t\tthis.postalCode = postalCode;\r\n\t}\r\n\t/**\r\n\t * @return the phone\r\n\t */\r\n\tpublic getPhone(): string {\r\n\t\treturn this.phone;\r\n\t}\r\n\t/**\r\n\t * @param phone the phone to set\r\n\t */\r\n\tpublic setPhone(phone: string): void {\r\n\t\tthis.phone = phone;\r\n\t}\r\n}\r\n\r\nAggregate_add(RecAddress, \"RECADDR\");\r\nElement_add(RecAddress, { name: \"RECNAME1\",required: true , order: 0, type: String, read: RecAddress.prototype.getRecName1, write: RecAddress.prototype.setRecName1 });\r\nElement_add(RecAddress, { name: \"RECNAME2\",required: false , order: 1, type: String, read: RecAddress.prototype.getRecName2, write: RecAddress.prototype.setRecName2 });\r\nElement_add(RecAddress, { name: \"ADDR1\",required: true , order: 2, type: String, read: RecAddress.prototype.getAddress1, write: RecAddress.prototype.setAddress1 });\r\nElement_add(RecAddress, { name: \"ADDR2\",required: true , order: 3, type: String, read: RecAddress.prototype.getAddress2, write: RecAddress.prototype.setAddress2 });\r\nElement_add(RecAddress, { name: \"CITY\",required: true , order: 4, type: String, read: RecAddress.prototype.getCity, write: RecAddress.prototype.setCity });\r\nElement_add(RecAddress, { name: \"STATE\",required: true , order: 5, type: String, read: RecAddress.prototype.getState, write: RecAddress.prototype.setState });\r\nElement_add(RecAddress, { name: \"POSTALCODE\",required: true , order: 6, type: String, read: RecAddress.prototype.getPostalCode, write: RecAddress.prototype.setPostalCode });\r\nElement_add(RecAddress, { name: \"PHONE\",required: false , order: 7, type: String, read: RecAddress.prototype.getPhone, write: RecAddress.prototype.setPhone });\r\n","import { ExtDBInfo } from \"./ExtDBInfo\";\r\nimport { PayerAddress } from \"./PayerAddress\";\r\nimport { RecAddress } from \"./RecAddress\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class Tax1099B  {\r\n\tprivate srvrtId: string;\r\n\tprivate taxYear: string;\r\n\tprivate extDBInfo: ExtDBInfo;\r\n\tprivate payerAddress: PayerAddress;\r\n\tprivate payerId: string;\r\n\tprivate recAddress: RecAddress;\r\n\tprivate recId: string;\r\n\tprivate recAcct: string;\r\n\r\n\r\n\t  public getSrvrtId(): string {\r\n\t    return this.srvrtId;\r\n\t  }\r\n\r\n\r\n      public setSrvrtId(srvrtId: string): void {\r\n\t    this.srvrtId = srvrtId;\r\n\t  }\r\n\r\n\r\n      public getTaxYear(): string {\r\n\t    return this.taxYear;\r\n\t  }\r\n\r\n\r\n\t  public setTaxYear(taxYear: string): void {\r\n\t    this.taxYear = taxYear;\r\n\t  }\r\n\r\n\t/**\r\n\t * @return the extDBInfo\r\n\t */\r\n\tpublic getExtDBInfo(): ExtDBInfo {\r\n\t\treturn this.extDBInfo;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param extDBInfo the extDBInfo to set\r\n\t */\r\n\tpublic setExtDBInfo(extDBInfo: ExtDBInfo): void {\r\n\t\tthis.extDBInfo = extDBInfo;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the payerAddress\r\n\t */\r\n\tpublic getPayerAddress(): PayerAddress {\r\n\t\treturn this.payerAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerAddress the payerAddress to set\r\n\t */\r\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\r\n\t\tthis.payerAddress = payerAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the payerId\r\n\t */\r\n\tpublic getPayerId(): string {\r\n\t\treturn this.payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerId the payerId to set\r\n\t */\r\n\tpublic setPayerId(payerId: string): void {\r\n\t\tthis.payerId = payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAddress\r\n\t */\r\n\tpublic getRecAddress(): RecAddress {\r\n\t\treturn this.recAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAddress the recAddress to set\r\n\t */\r\n\tpublic setRecAddress(recAddress: RecAddress): void {\r\n\t\tthis.recAddress = recAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the recId\r\n\t */\r\n\tpublic getRecId(): string {\r\n\t\treturn this.recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recId the recId to set\r\n\t */\r\n\tpublic setRecId(recId: string): void {\r\n\t\tthis.recId = recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAcct\r\n\t */\r\n\tpublic getRecAcct(): string {\r\n\t\treturn this.recAcct;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAcct the recAcct to set\r\n\t */\r\n\tpublic setRecAcct(recAcct: string): void {\r\n\t\tthis.recAcct = recAcct;\r\n\t}\r\n}\r\n\r\nAggregate_add( Tax1099B, \"TAX1099B_V100\");\r\nElement_add(Tax1099B, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099B.prototype.getSrvrtId, write: Tax1099B.prototype.setSrvrtId });\r\nElement_add(Tax1099B, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099B.prototype.getTaxYear, write: Tax1099B.prototype.setTaxYear });\r\nChildAggregate_add(Tax1099B, { required:true, order: 2, type: ExtDBInfo, read: Tax1099B.prototype.getExtDBInfo, write: Tax1099B.prototype.setExtDBInfo });\r\nChildAggregate_add(Tax1099B, { required:true, order: 3, type: PayerAddress, read: Tax1099B.prototype.getPayerAddress, write: Tax1099B.prototype.setPayerAddress });\r\nElement_add(Tax1099B, { name: \"PAYERID\", required: true, order: 4, type: String, read: Tax1099B.prototype.getPayerId, write: Tax1099B.prototype.setPayerId });\r\nChildAggregate_add(Tax1099B, { required:true, order: 5, type: RecAddress, read: Tax1099B.prototype.getRecAddress, write: Tax1099B.prototype.setRecAddress });\r\nElement_add(Tax1099B, { name: \"RECID\", required: true, order: 6, type: String, read: Tax1099B.prototype.getRecId, write: Tax1099B.prototype.setRecId });\r\nElement_add(Tax1099B, { name: \"RECACCT\", required: true, order: 7, type: String, read: Tax1099B.prototype.getRecAcct, write: Tax1099B.prototype.setRecAcct });\r\n","import { PayerAddress } from \"./PayerAddress\";\r\nimport { RecAddress } from \"./RecAddress\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class Tax1099DIV  {\r\n\r\n\r\n\tprivate srvrtId: string;\r\n\tprivate taxYear: string;\r\n\tprivate ordDiv: string;\r\n\tprivate qualifiedDiv: string;\r\n\tprivate totCapGain: string;\r\n\tprivate p28Gain: string;\r\n\tprivate unrecSec1250: string;\r\n\tprivate sec1202: string;\r\n\tprivate nonTaxDist: string;\r\n\tprivate fedTaxWh: string;\r\n\tprivate investExp: string;\r\n\tprivate forTaxPd: string;\r\n\tprivate cashLiq: string;\r\n\tprivate nonCashLiq: string;\r\n\r\n\tprivate payerAddress: PayerAddress;\r\n\tprivate payerId: string;\r\n\tprivate recAddress: RecAddress;\r\n\tprivate recId: string;\r\n\tprivate recAcct: string;\r\n\r\n\r\n\t  public getSrvrtId(): string {\r\n\t    return this.srvrtId;\r\n\t  }\r\n\r\n\r\n      public setSrvrtId(srvrtId: string): void {\r\n\t    this.srvrtId = srvrtId;\r\n\t  }\r\n\r\n\r\n      public getTaxYear(): string {\r\n\t    return this.taxYear;\r\n\t  }\r\n\r\n\r\n\t  public setTaxYear(taxYear: string): void {\r\n\t    this.taxYear = taxYear;\r\n\t  }\r\n\r\n\r\n\t/**\r\n\t * @return the ordDiv\r\n\t */\r\n\tpublic getOrdDiv(): string {\r\n\t\treturn this.ordDiv;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param ordDiv the ordDiv to set\r\n\t */\r\n\tpublic setOrdDiv(ordDiv: string): void {\r\n\t\tthis.ordDiv = ordDiv;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the qualifiedDiv\r\n\t */\r\n\tpublic getQualifiedDiv(): string {\r\n\t\treturn this.qualifiedDiv;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param qualifiedDiv the qualifiedDiv to set\r\n\t */\r\n\tpublic setQualifiedDiv(qualifiedDiv: string): void {\r\n\t\tthis.qualifiedDiv = qualifiedDiv;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the totCapGain\r\n\t */\r\n\tpublic getTotCapGain(): string {\r\n\t\treturn this.totCapGain;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param totCapGain the totCapGain to set\r\n\t */\r\n\tpublic setTotCapGain(totCapGain: string): void {\r\n\t\tthis.totCapGain = totCapGain;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the p28Gain\r\n\t */\r\n\tpublic getP28Gain(): string {\r\n\t\treturn this.p28Gain;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param p28Gain the p28Gain to set\r\n\t */\r\n\tpublic setP28Gain(p28Gain: string): void {\r\n\t\tthis.p28Gain = p28Gain;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the unrecSec1250\r\n\t */\r\n\tpublic getUnrecSec1250(): string {\r\n\t\treturn this.unrecSec1250;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param unrecSec1250 the unrecSec1250 to set\r\n\t */\r\n\tpublic setUnrecSec1250(unrecSec1250: string): void {\r\n\t\tthis.unrecSec1250 = unrecSec1250;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the sec1202\r\n\t */\r\n\tpublic getSec1202(): string {\r\n\t\treturn this.sec1202;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param sec1202 the sec1202 to set\r\n\t */\r\n\tpublic setSec1202(sec1202: string): void {\r\n\t\tthis.sec1202 = sec1202;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the nonTaxDist\r\n\t */\r\n\tpublic getNonTaxDist(): string {\r\n\t\treturn this.nonTaxDist;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param nonTaxDist the nonTaxDist to set\r\n\t */\r\n\tpublic setNonTaxDist(nonTaxDist: string): void {\r\n\t\tthis.nonTaxDist = nonTaxDist;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the fedTaxWh\r\n\t */\r\n\tpublic getFedTaxWh(): string {\r\n\t\treturn this.fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param fedTaxWh the fedTaxWh to set\r\n\t */\r\n\tpublic setFedTaxWh(fedTaxWh: string): void {\r\n\t\tthis.fedTaxWh = fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the investExp\r\n\t */\r\n\tpublic getInvestExp(): string {\r\n\t\treturn this.investExp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param investExp the investExp to set\r\n\t */\r\n\tpublic setInvestExp(investExp: string): void {\r\n\t\tthis.investExp = investExp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the forTaxPd\r\n\t */\r\n\tpublic getForTaxPd(): string {\r\n\t\treturn this.forTaxPd;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param forTaxPd the forTaxPd to set\r\n\t */\r\n\tpublic setForTaxPd(forTaxPd: string): void {\r\n\t\tthis.forTaxPd = forTaxPd;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the cashLiq\r\n\t */\r\n\tpublic getCashLiq(): string {\r\n\t\treturn this.cashLiq;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param cashLiq the cashLiq to set\r\n\t */\r\n\tpublic setCashLiq(cashLiq: string): void {\r\n\t\tthis.cashLiq = cashLiq;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the nonCashLiq\r\n\t */\r\n\tpublic getNonCashLiq(): string {\r\n\t\treturn this.nonCashLiq;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param nonCashLiq the nonCashLiq to set\r\n\t */\r\n\tpublic setNonCashLiq(nonCashLiq: string): void {\r\n\t\tthis.nonCashLiq = nonCashLiq;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the payerAddress\r\n\t */\r\n\tpublic getPayerAddress(): PayerAddress {\r\n\t\treturn this.payerAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerAddress the payerAddress to set\r\n\t */\r\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\r\n\t\tthis.payerAddress = payerAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the payerId\r\n\t */\r\n\tpublic getPayerId(): string {\r\n\t\treturn this.payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerId the payerId to set\r\n\t */\r\n\tpublic setPayerId(payerId: string): void {\r\n\t\tthis.payerId = payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAddress\r\n\t */\r\n\tpublic getRecAddress(): RecAddress {\r\n\t\treturn this.recAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAddress the recAddress to set\r\n\t */\r\n\tpublic setRecAddress(recAddress: RecAddress): void {\r\n\t\tthis.recAddress = recAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the recId\r\n\t */\r\n\tpublic getRecId(): string {\r\n\t\treturn this.recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recId the recId to set\r\n\t */\r\n\tpublic setRecId(recId: string): void {\r\n\t\tthis.recId = recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAcct\r\n\t */\r\n\tpublic getRecAcct(): string {\r\n\t\treturn this.recAcct;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAcct the recAcct to set\r\n\t */\r\n\tpublic setRecAcct(recAcct: string): void {\r\n\t\tthis.recAcct = recAcct;\r\n\t}\r\n}\r\n\r\nAggregate_add(Tax1099DIV, \"TAX1099DIV_V100\");\r\nElement_add(Tax1099DIV, { name: \"SRVRTID\",required: false , order: 0, type: String, read: Tax1099DIV.prototype.getSrvrtId, write: Tax1099DIV.prototype.setSrvrtId });\r\nElement_add(Tax1099DIV, { name: \"TAXYEAR\", required: false, order: 1, type: String, read: Tax1099DIV.prototype.getTaxYear, write: Tax1099DIV.prototype.setTaxYear });\r\nElement_add(Tax1099DIV, { name: \"ORDDIV\", required: false, order: 2, type: String, read: Tax1099DIV.prototype.getOrdDiv, write: Tax1099DIV.prototype.setOrdDiv });\r\nElement_add(Tax1099DIV, { name: \"QUALIFIEDDIV\", required: false, order: 3, type: String, read: Tax1099DIV.prototype.getQualifiedDiv, write: Tax1099DIV.prototype.setQualifiedDiv });\r\nElement_add(Tax1099DIV, { name: \"TOTCAPGAIN\", required: false, order: 4, type: String, read: Tax1099DIV.prototype.getTotCapGain, write: Tax1099DIV.prototype.setTotCapGain });\r\nElement_add(Tax1099DIV, { name: \"P28GAIN\", required: false, order: 5, type: String, read: Tax1099DIV.prototype.getP28Gain, write: Tax1099DIV.prototype.setP28Gain });\r\nElement_add(Tax1099DIV, { name: \"UNRECSEC1250\", required: false, order: 6, type: String, read: Tax1099DIV.prototype.getUnrecSec1250, write: Tax1099DIV.prototype.setUnrecSec1250 });\r\nElement_add(Tax1099DIV, { name: \"SEC1202\", required: false, order: 7, type: String, read: Tax1099DIV.prototype.getSec1202, write: Tax1099DIV.prototype.setSec1202 });\r\nElement_add(Tax1099DIV, { name: \"NONTAXDIST\", required: false, order: 8, type: String, read: Tax1099DIV.prototype.getNonTaxDist, write: Tax1099DIV.prototype.setNonTaxDist });\r\nElement_add(Tax1099DIV, { name: \"FEDTAXWH\", required: false, order: 9, type: String, read: Tax1099DIV.prototype.getFedTaxWh, write: Tax1099DIV.prototype.setFedTaxWh });\r\nElement_add(Tax1099DIV, { name: \"INVESTEXP\", required: false, order: 10, type: String, read: Tax1099DIV.prototype.getInvestExp, write: Tax1099DIV.prototype.setInvestExp });\r\nElement_add(Tax1099DIV, { name: \"FORTAXPD\", required: false, order: 11, type: String, read: Tax1099DIV.prototype.getForTaxPd, write: Tax1099DIV.prototype.setForTaxPd });\r\nElement_add(Tax1099DIV, { name: \"CASHLIQ\", required: false, order: 12, type: String, read: Tax1099DIV.prototype.getCashLiq, write: Tax1099DIV.prototype.setCashLiq });\r\nElement_add(Tax1099DIV, { name: \"NONCASHLIQ\", required: false, order: 13, type: String, read: Tax1099DIV.prototype.getNonCashLiq, write: Tax1099DIV.prototype.setNonCashLiq });\r\nChildAggregate_add(Tax1099DIV, { required:true, order: 14, type: PayerAddress, read: Tax1099DIV.prototype.getPayerAddress, write: Tax1099DIV.prototype.setPayerAddress });\r\nElement_add(Tax1099DIV, { name: \"PAYERID\", required: true, order: 15, type: String, read: Tax1099DIV.prototype.getPayerId, write: Tax1099DIV.prototype.setPayerId });\r\nChildAggregate_add(Tax1099DIV, { required:true, order: 16, type: RecAddress, read: Tax1099DIV.prototype.getRecAddress, write: Tax1099DIV.prototype.setRecAddress });\r\nElement_add(Tax1099DIV, { name: \"RECID\", required: true, order: 17, type: String, read: Tax1099DIV.prototype.getRecId, write: Tax1099DIV.prototype.setRecId });\r\nElement_add(Tax1099DIV, { name: \"RECACCT\", required: true, order: 18, type: String, read: Tax1099DIV.prototype.getRecAcct, write: Tax1099DIV.prototype.setRecAcct });\r\n","import { PayerAddress } from \"./PayerAddress\";\r\nimport { RecAddress } from \"./RecAddress\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class Tax1099INT  {\r\n\tprivate srvrtId: string;\r\n\tprivate taxYear: string;\r\n\tprivate intIncome: string;\r\n\tprivate erlWithPen: string;\r\n\tprivate intUsbndtrs: string;\r\n\tprivate fedTaxWh: string;\r\n\tprivate investExp: string;\r\n\tprivate forTaxPd: string;\r\n\r\n\tprivate payerAddress: PayerAddress;\r\n\tprivate payerId: string;\r\n\tprivate recAddress: RecAddress;\r\n\tprivate recId: string;\r\n\tprivate recAcct: string;\r\n\tprivate taxExemptInt: string;\r\n\tprivate specifiedPabInt: string;\r\n\r\n\t  public getSrvrtId(): string {\r\n\t    return this.srvrtId;\r\n\t  }\r\n\r\n\r\n      public setSrvrtId(srvrtId: string): void {\r\n\t    this.srvrtId = srvrtId;\r\n\t  }\r\n\r\n\r\n      public getTaxYear(): string {\r\n\t    return this.taxYear;\r\n\t  }\r\n\r\n\r\n\t  public setTaxYear(taxYear: string): void {\r\n\t    this.taxYear = taxYear;\r\n\t  }\r\n\r\n\r\n\r\n\t/**\r\n\t * @return the intIncome\r\n\t */\r\n\tpublic getIntIncome(): string {\r\n\t\treturn this.intIncome;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param intIncome the intIncome to set\r\n\t */\r\n\tpublic setIntIncome(intIncome: string): void {\r\n\t\tthis.intIncome = intIncome;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the erlWithPen\r\n\t */\r\n\tpublic getErlWithPen(): string {\r\n\t\treturn this.erlWithPen;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param erlWithPen the erlWithPen to set\r\n\t */\r\n\tpublic setErlWithPen(erlWithPen: string): void {\r\n\t\tthis.erlWithPen = erlWithPen;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the intUsbndtrs\r\n\t */\r\n\tpublic getIntUsbndtrs(): string {\r\n\t\treturn this.intUsbndtrs;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param intUsbndtrs the intUsbndtrs to set\r\n\t */\r\n\tpublic setIntUsbndtrs(intUsbndtrs: string): void {\r\n\t\tthis.intUsbndtrs = intUsbndtrs;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the fedTaxWh\r\n\t */\r\n\tpublic getFedTaxWh(): string {\r\n\t\treturn this.fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param fedTaxWh the fedTaxWh to set\r\n\t */\r\n\tpublic setFedTaxWh(fedTaxWh: string): void {\r\n\t\tthis.fedTaxWh = fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the investExp\r\n\t */\r\n\tpublic getInvestExp(): string {\r\n\t\treturn this.investExp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param investExp the investExp to set\r\n\t */\r\n\tpublic setInvestExp(investExp: string): void {\r\n\t\tthis.investExp = investExp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the forTaxPd\r\n\t */\r\n\tpublic getForTaxPd(): string {\r\n\t\treturn this.forTaxPd;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param forTaxPd the forTaxPd to set\r\n\t */\r\n\tpublic setForTaxPd(forTaxPd: string): void {\r\n\t\tthis.forTaxPd = forTaxPd;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the payerAddress\r\n\t */\r\n\tpublic getPayerAddress(): PayerAddress {\r\n\t\treturn this.payerAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerAddress the payerAddress to set\r\n\t */\r\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\r\n\t\tthis.payerAddress = payerAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the payerId\r\n\t */\r\n\tpublic getPayerId(): string {\r\n\t\treturn this.payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerId the payerId to set\r\n\t */\r\n\tpublic setPayerId(payerId: string): void {\r\n\t\tthis.payerId = payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAddress\r\n\t */\r\n\tpublic getRecAddress(): RecAddress {\r\n\t\treturn this.recAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAddress the recAddress to set\r\n\t */\r\n\tpublic setRecAddress(recAddress: RecAddress): void {\r\n\t\tthis.recAddress = recAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the recId\r\n\t */\r\n\tpublic getRecId(): string {\r\n\t\treturn this.recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recId the recId to set\r\n\t */\r\n\tpublic setRecId(recId: string): void {\r\n\t\tthis.recId = recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAcct\r\n\t */\r\n\tpublic getRecAcct(): string {\r\n\t\treturn this.recAcct;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAcct the recAcct to set\r\n\t */\r\n\tpublic setRecAcct(recAcct: string): void {\r\n\t\tthis.recAcct = recAcct;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the taxExemptInt\r\n\t */\r\n\tpublic getTaxExemptInt(): string {\r\n\t\treturn this.taxExemptInt;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param taxExemptInt the taxExemptInt to set\r\n\t */\r\n\tpublic setTaxExemptInt(taxExemptInt: string): void {\r\n\t\tthis.taxExemptInt = taxExemptInt;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the specifiedPabInt\r\n\t */\r\n\tpublic getSpecifiedPabInt(): string {\r\n\t\treturn this.specifiedPabInt;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param specifiedPabInt the specifiedPabInt to set\r\n\t */\r\n\tpublic setSpecifiedPabInt(specifiedPabInt: string): void {\r\n\t\tthis.specifiedPabInt = specifiedPabInt;\r\n\t}\r\n}\r\n\r\nAggregate_add(Tax1099INT, \"TAX1099INT_V100\");\r\nElement_add(Tax1099INT, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099INT.prototype.getSrvrtId, write: Tax1099INT.prototype.setSrvrtId });\r\nElement_add(Tax1099INT, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099INT.prototype.getTaxYear, write: Tax1099INT.prototype.setTaxYear });\r\nElement_add(Tax1099INT, { name: \"INTINCOME\",required: false , order: 2, type: String, read: Tax1099INT.prototype.getIntIncome, write: Tax1099INT.prototype.setIntIncome });\r\nElement_add(Tax1099INT, { name: \"ERLWITHPEN\",required: false , order: 3, type: String, read: Tax1099INT.prototype.getErlWithPen, write: Tax1099INT.prototype.setErlWithPen });\r\nElement_add(Tax1099INT, { name: \"INTUSBNDTRS\",required: false , order: 4, type: String, read: Tax1099INT.prototype.getIntUsbndtrs, write: Tax1099INT.prototype.setIntUsbndtrs });\r\nElement_add(Tax1099INT, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099INT.prototype.getFedTaxWh, write: Tax1099INT.prototype.setFedTaxWh });\r\nElement_add(Tax1099INT, { name: \"INVESTEXP\", required: false, order: 6, type: String, read: Tax1099INT.prototype.getInvestExp, write: Tax1099INT.prototype.setInvestExp });\r\nElement_add(Tax1099INT, { name: \"FORTAXPD\", required: false, order: 7, type: String, read: Tax1099INT.prototype.getForTaxPd, write: Tax1099INT.prototype.setForTaxPd });\r\nChildAggregate_add(Tax1099INT, { required:true, order: 8, type: PayerAddress, read: Tax1099INT.prototype.getPayerAddress, write: Tax1099INT.prototype.setPayerAddress });\r\nElement_add(Tax1099INT, { name: \"PAYERID\", required: true, order: 9, type: String, read: Tax1099INT.prototype.getPayerId, write: Tax1099INT.prototype.setPayerId });\r\nChildAggregate_add(Tax1099INT, { required:true, order: 10, type: RecAddress, read: Tax1099INT.prototype.getRecAddress, write: Tax1099INT.prototype.setRecAddress });\r\nElement_add(Tax1099INT, { name: \"RECID\", required: true, order: 11, type: String, read: Tax1099INT.prototype.getRecId, write: Tax1099INT.prototype.setRecId });\r\nElement_add(Tax1099INT, { name: \"RECACCT\", required: true, order: 12, type: String, read: Tax1099INT.prototype.getRecAcct, write: Tax1099INT.prototype.setRecAcct });\r\nElement_add(Tax1099INT, { name: \"TAXEXEMPTINT\", required: false, order: 13, type: String, read: Tax1099INT.prototype.getTaxExemptInt, write: Tax1099INT.prototype.setTaxExemptInt });\r\nElement_add(Tax1099INT, { name: \"SPECIFIEDPABINT\", required: false, order: 14, type: String, read: Tax1099INT.prototype.getSpecifiedPabInt, write: Tax1099INT.prototype.setSpecifiedPabInt });\r\n","import { PayerAddress } from \"./PayerAddress\";\r\nimport { RecAddress } from \"./RecAddress\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class Tax1099MISC  {\r\n\r\n\r\n\tprivate srvrtId: string;\r\n\tprivate taxYear: string;\r\n\r\n\tprivate royalties: string;\r\n\tprivate otherIncome: string;\r\n\tprivate fedTaxWh: string;\r\n\tprivate subPmts: string;\r\n\r\n\tprivate payerAddress: PayerAddress;\r\n\tprivate payerId: string;\r\n\tprivate recAddress: RecAddress;\r\n\tprivate recId: string;\r\n\tprivate recAcct: string;\r\n\r\n\r\n      public getSrvrtId(): string {\r\n\t    return this.srvrtId;\r\n\t  }\r\n\r\n\r\n      public setSrvrtId(srvrtId: string): void {\r\n\t    this.srvrtId = srvrtId;\r\n\t  }\r\n\r\n\r\n      public getTaxYear(): string {\r\n\t    return this.taxYear;\r\n\t  }\r\n\r\n\r\n\t  public setTaxYear(taxYear: string): void {\r\n\t    this.taxYear = taxYear;\r\n\t  }\r\n\r\n\t/**\r\n\t * @return the royalties\r\n\t */\r\n\tpublic getRoyalties(): string {\r\n\t\treturn this.royalties;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param royalties the royalties to set\r\n\t */\r\n\tpublic setRoyalties(royalties: string): void {\r\n\t\tthis.royalties = royalties;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the otherIncome\r\n\t */\r\n\tpublic getOtherIncome(): string {\r\n\t\treturn this.otherIncome;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param otherIncome the otherIncome to set\r\n\t */\r\n\tpublic setOtherIncome(otherIncome: string): void {\r\n\t\tthis.otherIncome = otherIncome;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the fedTaxWh\r\n\t */\r\n\tpublic getFedTaxWh(): string {\r\n\t\treturn this.fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param fedTaxWh the fedTaxWh to set\r\n\t */\r\n\tpublic setFedTaxWh(fedTaxWh: string): void {\r\n\t\tthis.fedTaxWh = fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the subPmts\r\n\t */\r\n\tpublic getSubPmts(): string {\r\n\t\treturn this.subPmts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param subPmts the subPmts to set\r\n\t */\r\n\tpublic setSubPmts(subPmts: string): void {\r\n\t\tthis.subPmts = subPmts;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the payerAddress\r\n\t */\r\n\tpublic getPayerAddress(): PayerAddress {\r\n\t\treturn this.payerAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerAddress the payerAddress to set\r\n\t */\r\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\r\n\t\tthis.payerAddress = payerAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the payerId\r\n\t */\r\n\tpublic getPayerId(): string {\r\n\t\treturn this.payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerId the payerId to set\r\n\t */\r\n\tpublic setPayerId(payerId: string): void {\r\n\t\tthis.payerId = payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAddress\r\n\t */\r\n\tpublic getRecAddress(): RecAddress {\r\n\t\treturn this.recAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAddress the recAddress to set\r\n\t */\r\n\tpublic setRecAddress(recAddress: RecAddress): void {\r\n\t\tthis.recAddress = recAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the recId\r\n\t */\r\n\tpublic getRecId(): string {\r\n\t\treturn this.recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recId the recId to set\r\n\t */\r\n\tpublic setRecId(recId: string): void {\r\n\t\tthis.recId = recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAcct\r\n\t */\r\n\tpublic getRecAcct(): string {\r\n\t\treturn this.recAcct;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAcct the recAcct to set\r\n\t */\r\n\tpublic setRecAcct(recAcct: string): void {\r\n\t\tthis.recAcct = recAcct;\r\n\t}\r\n}\r\n\r\nAggregate_add( Tax1099MISC, \"TAX1099MISC_V100\");\r\nElement_add(Tax1099MISC, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099MISC.prototype.getSrvrtId, write: Tax1099MISC.prototype.setSrvrtId });\r\nElement_add(Tax1099MISC, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099MISC.prototype.getTaxYear, write: Tax1099MISC.prototype.setTaxYear });\r\nElement_add(Tax1099MISC, { name: \"ROYALTIES\",required: false , order: 2, type: String, read: Tax1099MISC.prototype.getRoyalties, write: Tax1099MISC.prototype.setRoyalties });\r\nElement_add(Tax1099MISC, { name: \"OTHERINCOME\",required: false , order: 3, type: String, read: Tax1099MISC.prototype.getOtherIncome, write: Tax1099MISC.prototype.setOtherIncome });\r\nElement_add(Tax1099MISC, { name: \"FEDTAXWH\",required: false , order: 4, type: String, read: Tax1099MISC.prototype.getFedTaxWh, write: Tax1099MISC.prototype.setFedTaxWh });\r\nElement_add(Tax1099MISC, { name: \"SUBPMTS\",required: false , order: 5, type: String, read: Tax1099MISC.prototype.getSubPmts, write: Tax1099MISC.prototype.setSubPmts });\r\nChildAggregate_add(Tax1099MISC, { required:true, order: 6, type: PayerAddress, read: Tax1099MISC.prototype.getPayerAddress, write: Tax1099MISC.prototype.setPayerAddress });\r\nElement_add(Tax1099MISC, { name: \"PAYERID\", required: true, order: 7, type: String, read: Tax1099MISC.prototype.getPayerId, write: Tax1099MISC.prototype.setPayerId });\r\nChildAggregate_add(Tax1099MISC, { required:true, order: 8, type: RecAddress, read: Tax1099MISC.prototype.getRecAddress, write: Tax1099MISC.prototype.setRecAddress });\r\nElement_add(Tax1099MISC, { name: \"RECID\", required: true, order: 9, type: String, read: Tax1099MISC.prototype.getRecId, write: Tax1099MISC.prototype.setRecId });\r\nElement_add(Tax1099MISC, { name: \"RECACCT\", required: true, order: 10, type: String, read: Tax1099MISC.prototype.getRecAcct, write: Tax1099MISC.prototype.setRecAcct });\r\n","import { PayerAddress } from \"./PayerAddress\";\r\nimport { RecAddress } from \"./RecAddress\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class Tax1099OID  {\r\n\r\n\r\n\tprivate srvrtId: string;\r\n\tprivate taxYear: string;\r\n\r\n\tprivate originalDisc: string;\r\n\tprivate otherPerInt: string;\r\n\tprivate erlWithPen: string;\r\n\tprivate fedTaxWh: string;\r\n\tprivate desc: string;\r\n\tprivate oidOnUstres: string;\r\n\tprivate investExp: string;\r\n\r\n\tprivate payerAddress: PayerAddress;\r\n\tprivate payerId: string;\r\n\tprivate recAddress: RecAddress;\r\n\tprivate recId: string;\r\n\tprivate recAcct: string;\r\n\r\n\r\n\t  public getSrvrtId(): string {\r\n\t    return this.srvrtId;\r\n\t  }\r\n\r\n\r\n      public setSrvrtId(srvrtId: string): void {\r\n\t    this.srvrtId = srvrtId;\r\n\t  }\r\n\r\n\r\n      public getTaxYear(): string {\r\n\t    return this.taxYear;\r\n\t  }\r\n\r\n\r\n\t  public setTaxYear(taxYear: string): void {\r\n\t    this.taxYear = taxYear;\r\n\t  }\r\n\r\n\t/**\r\n\t * @return the originalDisc\r\n\t */\r\n\tpublic getOriginalDisc(): string {\r\n\t\treturn this.originalDisc;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param originalDisc the originalDisc to set\r\n\t */\r\n\tpublic setOriginalDisc(originalDisc: string): void {\r\n\t\tthis.originalDisc = originalDisc;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the otherPerInt\r\n\t */\r\n\tpublic getOtherPerInt(): string {\r\n\t\treturn this.otherPerInt;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param otherPerInt the otherPerInt to set\r\n\t */\r\n\tpublic setOtherPerInt(otherPerInt: string): void {\r\n\t\tthis.otherPerInt = otherPerInt;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the erlWithPen\r\n\t */\r\n\tpublic getErlWithPen(): string {\r\n\t\treturn this.erlWithPen;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param erlWithPen the erlWithPen to set\r\n\t */\r\n\tpublic setErlWithPen(erlWithPen: string): void {\r\n\t\tthis.erlWithPen = erlWithPen;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the fedTaxWh\r\n\t */\r\n\tpublic getFedTaxWh(): string {\r\n\t\treturn this.fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param fedTaxWh the fedTaxWh to set\r\n\t */\r\n\tpublic setFedTaxWh(fedTaxWh: string): void {\r\n\t\tthis.fedTaxWh = fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the desc\r\n\t */\r\n\tpublic getDesc(): string {\r\n\t\treturn this.desc;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param desc the desc to set\r\n\t */\r\n\tpublic setDesc(desc: string): void {\r\n\t\tthis.desc = desc;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the oidOnUstres\r\n\t */\r\n\tpublic getOidOnUstres(): string {\r\n\t\treturn this.oidOnUstres;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param oidOnUstres the oidOnUstres to set\r\n\t */\r\n\tpublic setOidOnUstres(oidOnUstres: string): void {\r\n\t\tthis.oidOnUstres = oidOnUstres;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the investExp\r\n\t */\r\n\tpublic getInvestExp(): string {\r\n\t\treturn this.investExp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param investExp the investExp to set\r\n\t */\r\n\tpublic setInvestExp(investExp: string): void {\r\n\t\tthis.investExp = investExp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the payerAddress\r\n\t */\r\n\tpublic getPayerAddress(): PayerAddress {\r\n\t\treturn this.payerAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerAddress the payerAddress to set\r\n\t */\r\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\r\n\t\tthis.payerAddress = payerAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the payerId\r\n\t */\r\n\tpublic getPayerId(): string {\r\n\t\treturn this.payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerId the payerId to set\r\n\t */\r\n\tpublic setPayerId(payerId: string): void {\r\n\t\tthis.payerId = payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAddress\r\n\t */\r\n\tpublic getRecAddress(): RecAddress {\r\n\t\treturn this.recAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAddress the recAddress to set\r\n\t */\r\n\tpublic setRecAddress(recAddress: RecAddress): void {\r\n\t\tthis.recAddress = recAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the recId\r\n\t */\r\n\tpublic getRecId(): string {\r\n\t\treturn this.recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recId the recId to set\r\n\t */\r\n\tpublic setRecId(recId: string): void {\r\n\t\tthis.recId = recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAcct\r\n\t */\r\n\tpublic getRecAcct(): string {\r\n\t\treturn this.recAcct;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAcct the recAcct to set\r\n\t */\r\n\tpublic setRecAcct(recAcct: string): void {\r\n\t\tthis.recAcct = recAcct;\r\n\t}\r\n}\r\n\r\nAggregate_add(Tax1099OID, \"TAX1099OID_V100\");\r\nElement_add(Tax1099OID, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099OID.prototype.getSrvrtId, write: Tax1099OID.prototype.setSrvrtId });\r\nElement_add(Tax1099OID, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099OID.prototype.getTaxYear, write: Tax1099OID.prototype.setTaxYear });\r\nElement_add(Tax1099OID, { name: \"ORIGISDISC\", required: false, order: 2, type: String, read: Tax1099OID.prototype.getOriginalDisc, write: Tax1099OID.prototype.setOriginalDisc });\r\nElement_add(Tax1099OID, { name: \"OTHERPERINT\", required: false, order: 3, type: String, read: Tax1099OID.prototype.getOtherPerInt, write: Tax1099OID.prototype.setOtherPerInt });\r\nElement_add(Tax1099OID, { name: \"ERLWITHPEN\", required: false, order: 4, type: String, read: Tax1099OID.prototype.getErlWithPen, write: Tax1099OID.prototype.setErlWithPen });\r\nElement_add(Tax1099OID, { name: \"FEDTAXWH\", required: false, order: 5, type: String, read: Tax1099OID.prototype.getFedTaxWh, write: Tax1099OID.prototype.setFedTaxWh });\r\nElement_add(Tax1099OID, { name: \"DESCRIPTION\", required: true, order: 6, type: String, read: Tax1099OID.prototype.getDesc, write: Tax1099OID.prototype.setDesc });\r\nElement_add(Tax1099OID, { name: \"OIDONUSTRES\", required: false, order: 7, type: String, read: Tax1099OID.prototype.getOidOnUstres, write: Tax1099OID.prototype.setOidOnUstres });\r\nElement_add(Tax1099OID, { name: \"INVESTEXP\", required: false, order: 8, type: String, read: Tax1099OID.prototype.getInvestExp, write: Tax1099OID.prototype.setInvestExp });\r\nChildAggregate_add(Tax1099OID, { required:true, order: 9, type: PayerAddress, read: Tax1099OID.prototype.getPayerAddress, write: Tax1099OID.prototype.setPayerAddress });\r\nElement_add(Tax1099OID, { name: \"PAYERID\", required: true, order: 10, type: String, read: Tax1099OID.prototype.getPayerId, write: Tax1099OID.prototype.setPayerId });\r\nChildAggregate_add(Tax1099OID, { required:true, order: 11, type: RecAddress, read: Tax1099OID.prototype.getRecAddress, write: Tax1099OID.prototype.setRecAddress });\r\nElement_add(Tax1099OID, { name: \"RECID\", required: true, order: 12, type: String, read: Tax1099OID.prototype.getRecId, write: Tax1099OID.prototype.setRecId });\r\nElement_add(Tax1099OID, { name: \"RECACCT\", required: true, order: 13, type: String, read: Tax1099OID.prototype.getRecAcct, write: Tax1099OID.prototype.setRecAcct });\r\n","import { PayerAddress } from \"./PayerAddress\";\r\nimport { RecAddress } from \"./RecAddress\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class Tax1099R  {\r\n\tprivate srvrtId: string;\r\n\tprivate taxYear: string;\r\n\tprivate grossDist: string;\r\n\r\n\tprivate taxAmt: string;\r\n\tprivate taxAmtNd: string;\r\n\tprivate capGain: string;\r\n\tprivate fedTaxWh: string;\r\n\tprivate empContins: string;\r\n\tprivate netUnapEmp: string;\r\n\tprivate distCode: string;\r\n\tprivate iraSepSimp: string;\r\n\tprivate annCtrctDist: string;\r\n\tprivate totEmpCount: string;\r\n\r\n\tprivate payerAddress: PayerAddress;\r\n\tprivate payerId: string;\r\n\tprivate recAddress: RecAddress;\r\n\tprivate recId: string;\r\n\tprivate recAcct: string;\r\n\r\n\r\n\t  public getSrvrtId(): string {\r\n\t    return this.srvrtId;\r\n\t  }\r\n\r\n\r\n      public setSrvrtId(srvrtId: string): void {\r\n\t    this.srvrtId = srvrtId;\r\n\t  }\r\n\r\n\r\n      public getTaxYear(): string {\r\n\t    return this.taxYear;\r\n\t  }\r\n\r\n\r\n\t  public setTaxYear(taxYear: string): void {\r\n\t    this.taxYear = taxYear;\r\n\t  }\r\n\r\n\r\n\t  /**\r\n\t\t * @return the grossDist\r\n\t\t */\r\n\t\tpublic getGrossDist(): string {\r\n\t\t\treturn this.grossDist;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @param grossDist the grossDist to set\r\n\t\t */\r\n\t\tpublic setGrossDist(grossDist: string): void {\r\n\t\t\tthis.grossDist = grossDist;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @return the taxAmt\r\n\t\t */\r\n\t\tpublic getTaxAmt(): string {\r\n\t\t\treturn this.taxAmt;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @param taxAmt the taxAmt to set\r\n\t\t */\r\n\t\tpublic setTaxAmt(taxAmt: string): void {\r\n\t\t\tthis.taxAmt = taxAmt;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @return the taxAmtNd\r\n\t\t */\r\n\t\tpublic getTaxAmtNd(): string {\r\n\t\t\treturn this.taxAmtNd;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @param taxAmtNd the taxAmtNd to set\r\n\t\t */\r\n\t\tpublic setTaxAmtNd(taxAmtNd: string): void {\r\n\t\t\tthis.taxAmtNd = taxAmtNd;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @return the capGain\r\n\t\t */\r\n\t\tpublic getCapGain(): string {\r\n\t\t\treturn this.capGain;\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * @param capGain the capGain to set\r\n\t\t */\r\n\t\tpublic setCapGain(capGain: string): void {\r\n\t\t\tthis.capGain = capGain;\r\n\t\t}\r\n\r\n\r\n\r\n\r\n\t/**\r\n\t * @return the fedTaxWh\r\n\t */\r\n\tpublic getFedTaxWh(): string {\r\n\t\treturn this.fedTaxWh;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param fedTaxWh the fedTaxWh to set\r\n\t */\r\n\tpublic setFedTaxWh(fedTaxWh: string): void {\r\n\t\tthis.fedTaxWh = fedTaxWh;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the empContins\r\n\t */\r\n\tpublic getEmpContins(): string {\r\n\t\treturn this.empContins;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param empContins the empContins to set\r\n\t */\r\n\tpublic setEmpContins(empContins: string): void {\r\n\t\tthis.empContins = empContins;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the netUnapEmp\r\n\t */\r\n\tpublic getNetUnapEmp(): string {\r\n\t\treturn this.netUnapEmp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param netUnapEmp the netUnapEmp to set\r\n\t */\r\n\tpublic setNetUnapEmp(netUnapEmp: string): void {\r\n\t\tthis.netUnapEmp = netUnapEmp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the distCode\r\n\t */\r\n\tpublic getDistCode(): string {\r\n\t\treturn this.distCode;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param distCode the distCode to set\r\n\t */\r\n\tpublic setDistCode(distCode: string): void {\r\n\t\tthis.distCode = distCode;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the iraSepSimp\r\n\t */\r\n\tpublic getIraSepSimp(): string {\r\n\t\treturn this.iraSepSimp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param iraSepSimp the iraSepSimp to set\r\n\t */\r\n\tpublic setIraSepSimp(iraSepSimp: string): void {\r\n\t\tthis.iraSepSimp = iraSepSimp;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the annCtrctDist\r\n\t */\r\n\tpublic getAnnCtrctDist(): string {\r\n\t\treturn this.annCtrctDist;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param annCtrctDist the annCtrctDist to set\r\n\t */\r\n\tpublic setAnnCtrctDist(annCtrctDist: string): void {\r\n\t\tthis.annCtrctDist = annCtrctDist;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the totEmpCount\r\n\t */\r\n\tpublic getTotEmpCount(): string {\r\n\t\treturn this.totEmpCount;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param totEmpCount the totEmpCount to set\r\n\t */\r\n\tpublic setTotEmpCount(totEmpCount: string): void {\r\n\t\tthis.totEmpCount = totEmpCount;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the payerAddress\r\n\t */\r\n\tpublic getPayerAddress(): PayerAddress {\r\n\t\treturn this.payerAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerAddress the payerAddress to set\r\n\t */\r\n\tpublic setPayerAddress(payerAddress: PayerAddress): void {\r\n\t\tthis.payerAddress = payerAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the payerId\r\n\t */\r\n\tpublic getPayerId(): string {\r\n\t\treturn this.payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param payerId the payerId to set\r\n\t */\r\n\tpublic setPayerId(payerId: string): void {\r\n\t\tthis.payerId = payerId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAddress\r\n\t */\r\n\tpublic getRecAddress(): RecAddress {\r\n\t\treturn this.recAddress;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAddress the recAddress to set\r\n\t */\r\n\tpublic setRecAddress(recAddress: RecAddress): void {\r\n\t\tthis.recAddress = recAddress;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the recId\r\n\t */\r\n\tpublic getRecId(): string {\r\n\t\treturn this.recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recId the recId to set\r\n\t */\r\n\tpublic setRecId(recId: string): void {\r\n\t\tthis.recId = recId;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @return the recAcct\r\n\t */\r\n\tpublic getRecAcct(): string {\r\n\t\treturn this.recAcct;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @param recAcct the recAcct to set\r\n\t */\r\n\tpublic setRecAcct(recAcct: string): void {\r\n\t\tthis.recAcct = recAcct;\r\n\t}\r\n}\r\n\r\nAggregate_add(Tax1099R, \"TAX1099R_V100\");\r\nElement_add(Tax1099R, { name: \"SRVRTID\",required: true , order: 0, type: String, read: Tax1099R.prototype.getSrvrtId, write: Tax1099R.prototype.setSrvrtId });\r\nElement_add(Tax1099R, { name: \"TAXYEAR\", required: true, order: 1, type: String, read: Tax1099R.prototype.getTaxYear, write: Tax1099R.prototype.setTaxYear });\r\nElement_add(Tax1099R, { name: \"GROSSDIST\", required: true, order: 2, type: String, read: Tax1099R.prototype.getGrossDist, write: Tax1099R.prototype.setGrossDist });\r\nElement_add(Tax1099R, { name: \"TAXAMT\", required: false, order: 3, type: String, read: Tax1099R.prototype.getTaxAmt, write: Tax1099R.prototype.setTaxAmt });\r\nElement_add(Tax1099R, { name: \"TAXAMTND\", required: false, order: 4, type: String, read: Tax1099R.prototype.getTaxAmtNd, write: Tax1099R.prototype.setTaxAmtNd });\r\nElement_add(Tax1099R, { name: \"CAPGAIN\", required: false, order: 5, type: String, read: Tax1099R.prototype.getCapGain, write: Tax1099R.prototype.setCapGain });\r\nElement_add(Tax1099R, { name: \"FEDTAXWH\", required: false, order: 6, type: String, read: Tax1099R.prototype.getFedTaxWh, write: Tax1099R.prototype.setFedTaxWh });\r\nElement_add(Tax1099R, { name: \"EMPCONTINS\", required: false, order: 7, type: String, read: Tax1099R.prototype.getEmpContins, write: Tax1099R.prototype.setEmpContins });\r\nElement_add(Tax1099R, { name: \"NETUNAPEMP\", required: false, order: 8, type: String, read: Tax1099R.prototype.getNetUnapEmp, write: Tax1099R.prototype.setNetUnapEmp });\r\nElement_add(Tax1099R, { name: \"DISTCODE\", required: true, order: 9, type: String, read: Tax1099R.prototype.getDistCode, write: Tax1099R.prototype.setDistCode });\r\nElement_add(Tax1099R, { name: \"IRASEPSIMP\", required: true, order: 10, type: String, read: Tax1099R.prototype.getIraSepSimp, write: Tax1099R.prototype.setIraSepSimp });\r\nElement_add(Tax1099R, { name: \"ANNCTRCTDIST\", required: false, order: 11, type: String, read: Tax1099R.prototype.getAnnCtrctDist, write: Tax1099R.prototype.setAnnCtrctDist });\r\nElement_add(Tax1099R, { name: \"TOTEMPCONT\", required: false, order: 12, type: String, read: Tax1099R.prototype.getTotEmpCount, write: Tax1099R.prototype.setTotEmpCount });\r\nChildAggregate_add(Tax1099R, { required:true, order: 13, type: PayerAddress, read: Tax1099R.prototype.getPayerAddress, write: Tax1099R.prototype.setPayerAddress });\r\nElement_add(Tax1099R, { name: \"PAYERID\", required: true, order: 14, type: String, read: Tax1099R.prototype.getPayerId, write: Tax1099R.prototype.setPayerId });\r\nChildAggregate_add(Tax1099R, { required:true, order: 15, type: RecAddress, read: Tax1099R.prototype.getRecAddress, write: Tax1099R.prototype.setRecAddress });\r\nElement_add(Tax1099R, { name: \"RECID\", required: true, order: 16, type: String, read: Tax1099R.prototype.getRecId, write: Tax1099R.prototype.setRecId });\r\nElement_add(Tax1099R, { name: \"RECACCT\", required: true, order: 17, type: String, read: Tax1099R.prototype.getRecAcct, write: Tax1099R.prototype.setRecAcct });\r\n","import { T1099Request } from \"../common/T1099Request\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { Element_add } from \"../../../meta/Element_add\";\r\n\r\n\r\nexport class Tax1099Request extends T1099Request {\r\n\r\n    public getTaxYear(): string {\r\n\t\treturn this.taxYear;\r\n\t}\r\n\r\n\tpublic setTaxYear(taxYear: string): void {\r\n\t\tthis.taxYear = taxYear;\r\n\t}\r\n\r\n\tprivate taxYear: string;\r\n}\r\n\r\nAggregate_add(Tax1099Request, \"TAX1099RQ\");\r\nElement_add(Tax1099Request, { name: \"TAXYEAR\", required: true, order: 0, type: String, read: Tax1099Request.prototype.getTaxYear, write: Tax1099Request.prototype.setTaxYear });\r\n","import { TransactionWrappedRequestMessage } from \"../TransactionWrappedRequestMessage\";\r\nimport { Tax1099Request } from \"./Tax1099Request\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class Tax1099RequestTransaction extends TransactionWrappedRequestMessage<Tax1099Request> {\r\n\r\n  private tax1099Request: Tax1099Request;\r\n\r\n  /**\r\n   * The tax1099Request.\r\n   *\r\n   * @return The tax1099Request.\r\n   */\r\n  public getTax1099Request(): Tax1099Request {\r\n    return this.tax1099Request;\r\n  }\r\n\r\n  /**\r\n   * The tax1099Request.\r\n   *\r\n   * @param tax1099Request The message.\r\n   *\r\n   */\r\n  public setTax1099Request(tax1099Request: Tax1099Request): void {\r\n    this.tax1099Request = tax1099Request;\r\n  }\r\n\r\n  // Inherited.\r\n  public setWrappedMessage(tax1099Request: Tax1099Request): void {\r\n\t  this.setTax1099Request(tax1099Request);\r\n  }\r\n}\r\n\r\nAggregate_add(Tax1099RequestTransaction, \"TAX1099TRNRQ\");\r\nChildAggregate_add(Tax1099RequestTransaction, { required: true, order: 30, type: Tax1099Request, read: Tax1099RequestTransaction.prototype.getTax1099Request, write: Tax1099RequestTransaction.prototype.setTax1099Request });\r\n","import { RequestMessageSet } from \"../RequestMessageSet\";\r\nimport { Tax1099RequestTransaction } from \"./Tax1099RequestTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { RequestMessage } from \"../RequestMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\nexport class Tax1099RequestMessageSet extends RequestMessageSet {\r\n\r\n  private taxRequestTransaction: Tax1099RequestTransaction;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.tax1099;\r\n  }\r\n\r\n  /**\r\n   * The statement request.\r\n   *\r\n   * @return The statement request.\r\n   */\r\n  public getTaxRequestTransaction(): Tax1099RequestTransaction {\r\n    return this.taxRequestTransaction;\r\n  }\r\n\r\n  /**\r\n   * The statement request.\r\n   *\r\n   * @param taxRequestTransaction The statement request.\r\n   */\r\n  public setTaxRequestTransaction(taxRequestTransaction: Tax1099RequestTransaction) {\r\n    this.taxRequestTransaction = taxRequestTransaction;\r\n  }\r\n\r\n  // Inherited.\r\n  public getRequestMessages(): Array<RequestMessage> {\r\n    var requestMessages: Array<RequestMessage> = new Array<RequestMessage>();\r\n    if (this.getTaxRequestTransaction() != null) {\r\n      requestMessages.push(this.getTaxRequestTransaction());\r\n    }\r\n    return requestMessages;\r\n  }\r\n}\r\n\r\nAggregate_add(Tax1099RequestMessageSet, \"TAX1099MSGSRQV1\" );\r\nChildAggregate_add(Tax1099RequestMessageSet, { order: 0, type: Tax1099RequestTransaction, read: Tax1099RequestMessageSet.prototype.getTaxRequestTransaction, write: Tax1099RequestMessageSet.prototype.setTaxRequestTransaction });\r\n","import { T1099Response } from \"../common/T1099Response\";\r\nimport { Tax1099DIV } from \"./Tax1099DIV\";\r\nimport { Tax1099INT } from \"./Tax1099INT\";\r\nimport { Tax1099R } from \"./Tax1099R\";\r\nimport { Tax1099B } from \"./Tax1099B\";\r\nimport { Tax1099MISC } from \"./Tax1099MISC\";\r\nimport { Tax1099OID } from \"./Tax1099OID\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class Tax1099Response extends T1099Response {\r\n\r\n\t// private tax1099div: Tax1099DIV;\r\n\tprivate lstTax1099DIV: Array<Tax1099DIV>;\r\n\r\n\tprivate lstTax1099INT: Array<Tax1099INT>;\r\n\r\n\tprivate lstTax1099R: Array<Tax1099R>;\r\n\r\n\tprivate lstTax1099B: Array<Tax1099B>;\r\n\r\n\tprivate lstTax1099MISC: Array<Tax1099MISC>;\r\n\r\n\tprivate lstTax1099OID: Array<Tax1099OID>;\r\n\r\n\t/**\r\n\t * @return the lstTax1099DIV\r\n\t */\r\n\tpublic getLstTax1099DIV(): Array<Tax1099DIV> {\r\n\t\treturn this.lstTax1099DIV;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lstTax1099DIV\r\n\t *            the lstTax1099DIV to set\r\n\t */\r\n    public setLstTax1099DIV(lstTax1099DIV: Array<Tax1099DIV>): void {\r\n\t\tthis.lstTax1099DIV = lstTax1099DIV;\r\n\t}\r\n\r\n\r\n\r\n\tpublic getResponseMessageName(): string {\r\n\t\treturn \"1099 Tax details\";\r\n\t}\r\n\r\n\t/**\r\n\t * @return the lstTax1099INT\r\n\t */\r\n\tpublic getLstTax1099INT(): Array<Tax1099INT> {\r\n\t\treturn this.lstTax1099INT;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lstTax1099INT the lstTax1099INT to set\r\n\t */\r\n    public setLstTax1099INT(lstTax1099INT: Array<Tax1099INT>): void {\r\n\t\tthis.lstTax1099INT = lstTax1099INT;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the lstTax1099R\r\n\t */\r\n\tpublic getLstTax1099R(): Array<Tax1099R> {\r\n\t\treturn this.lstTax1099R;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lstTax1099R the lstTax1099R to set\r\n\t */\r\n    public setLstTax1099R(lstTax1099R: Array<Tax1099R>): void {\r\n\t\tthis.lstTax1099R = lstTax1099R;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the lstTax1099B\r\n\t */\r\n\tpublic getLstTax1099B(): Array<Tax1099B> {\r\n\t\treturn this.lstTax1099B;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lstTax1099B the lstTax1099B to set\r\n\t */\r\n    public setLstTax1099B(lstTax1099B: Array<Tax1099B>): void {\r\n\t\tthis.lstTax1099B = lstTax1099B;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the lstTax1099MISC\r\n\t */\r\n\tpublic getLstTax1099MISC(): Array<Tax1099MISC> {\r\n\t\treturn this.lstTax1099MISC;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lstTax1099MISC the lstTax1099MISC to set\r\n\t */\r\n    public setLstTax1099MISC(lstTax1099MISC: Array<Tax1099MISC>): void {\r\n\t\tthis.lstTax1099MISC = lstTax1099MISC;\r\n\t}\r\n\r\n\t/**\r\n\t * @return the lstTax1099OID\r\n\t */\r\n\tpublic getLstTax1099OID(): Array<Tax1099OID> {\r\n\t\treturn this.lstTax1099OID;\r\n\t}\r\n\r\n\t/**\r\n\t * @param lstTax1099OID the lstTax1099OID to set\r\n\t */\r\n    public setLstTax1099OID(lstTax1099OID: Array<Tax1099OID>): void {\r\n\t\tthis.lstTax1099OID = lstTax1099OID;\r\n\t}\r\n}\r\n\r\nAggregate_add(Tax1099Response, \"TAX1099RS\");\r\nChildAggregate_add(Tax1099Response, { required: false, order: 0, type: Array, collectionEntryType: Tax1099DIV, read: Tax1099Response.prototype.getLstTax1099DIV, write: Tax1099Response.prototype.setLstTax1099DIV });\r\nChildAggregate_add(Tax1099Response, { required: false, order: 1, type: Array, collectionEntryType: Tax1099INT, read: Tax1099Response.prototype.getLstTax1099INT, write: Tax1099Response.prototype.setLstTax1099INT });\r\nChildAggregate_add(Tax1099Response, { required: false, order: 2, type: Array, collectionEntryType: Tax1099R, read: Tax1099Response.prototype.getLstTax1099R, write: Tax1099Response.prototype.setLstTax1099R });\r\nChildAggregate_add(Tax1099Response, { required: false, order: 3, type: Array, collectionEntryType: Tax1099B, read: Tax1099Response.prototype.getLstTax1099B, write: Tax1099Response.prototype.setLstTax1099B });\r\nChildAggregate_add(Tax1099Response, { required: false, order: 4, type: Array, collectionEntryType: Tax1099MISC, read: Tax1099Response.prototype.getLstTax1099MISC, write: Tax1099Response.prototype.setLstTax1099MISC });\r\nChildAggregate_add(Tax1099Response, { required: false, order:5, type: Array, collectionEntryType: Tax1099OID, read: Tax1099Response.prototype.getLstTax1099OID, write: Tax1099Response.prototype.setLstTax1099OID });\r\n","import { TransactionWrappedResponseMessage } from \"../TransactionWrappedResponseMessage\";\r\nimport { Tax1099Response } from \"./Tax1099Response\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class Tax1099ResponseTransaction extends TransactionWrappedResponseMessage<Tax1099Response> {\r\n\r\n  private tax1099Response: Tax1099Response;\r\n\r\n  /**\r\n   * The tax1099Response.\r\n   *\r\n   * @return The tax1099Response.\r\n   */\r\n  public getTax1099Response(): Tax1099Response {\r\n    return this.tax1099Response;\r\n  }\r\n\r\n  /**\r\n   * The tax1099Response.\r\n   *\r\n   * @param tax1099Response The message.\r\n   */\r\n  public setTax1099Response(tax1099Response: Tax1099Response): void {\r\n    this.tax1099Response = tax1099Response;\r\n  }\r\n\r\n  // Inherited.\r\n  public getWrappedMessage(): Tax1099Response {\r\n    return this.getTax1099Response();\r\n  }\r\n}\r\n\r\nAggregate_add(Tax1099ResponseTransaction, \"TAX1099TRNRS\");\r\nChildAggregate_add(Tax1099ResponseTransaction, { required: false, order: 2, type: Tax1099Response, read: Tax1099ResponseTransaction.prototype.getTax1099Response, write: Tax1099ResponseTransaction.prototype.setTax1099Response });\r\n","import { ResponseMessageSet } from \"../ResponseMessageSet\";\r\nimport { Tax1099ResponseTransaction } from \"./Tax1099ResponseTransaction\";\r\nimport { MessageSetType } from \"../MessageSetType\";\r\nimport { OFXException } from \"../../../OFXException\";\r\nimport { ResponseMessage } from \"../ResponseMessage\";\r\nimport { Aggregate_add } from \"../../../meta/Aggregate_Add\";\r\nimport { ChildAggregate_add } from \"../../../meta/ChildAggregate_add\";\r\n\r\n\r\nexport class Tax1099ResponseMessageSet extends ResponseMessageSet {\r\n\r\n  private taxResponseTransaction: Array<Tax1099ResponseTransaction>;\r\n\r\n  public getType(): MessageSetType {\r\n    return MessageSetType.tax1099;\r\n  }\r\n\r\n  /**\r\n   * The taxResponseTransaction list.\r\n   *\r\n   * Most OFX files have a single statement response, except MT2OFX\r\n   * which outputs OFX with multiple statement responses\r\n   * in a single banking response message set.\r\n   *\r\n   * @return The taxResponseTransaction list.\r\n   */\r\n  public getTaxResponseTransaction(): Array<Tax1099ResponseTransaction> {\r\n    return this.taxResponseTransaction;\r\n  }\r\n\r\n  /**\r\n   * The taxResponseTransaction.\r\n   *\r\n   * @param taxResponseTransaction The statement responses.\r\n   */\r\n  public setTaxResponseTransaction(taxResponseTransaction: Tax1099ResponseTransaction | Array<Tax1099ResponseTransaction>): void {\r\n    if (taxResponseTransaction instanceof Array) {\r\n      this.taxResponseTransaction = <Array<Tax1099ResponseTransaction>>taxResponseTransaction;\r\n    } else if (taxResponseTransaction instanceof Tax1099ResponseTransaction) {\r\n      this.taxResponseTransaction = [<Tax1099ResponseTransaction>taxResponseTransaction];\r\n    } else {\r\n      throw new OFXException(\"invalid type\");\r\n    }\r\n  }\r\n\r\n  // Inherited.\r\n  public getResponseMessages(): Array<ResponseMessage> {\r\n    return this.taxResponseTransaction;\r\n  }\r\n\r\n  /**\r\n   * The first statement response.\r\n   *\r\n   * @return the first bank statement response.\r\n   * @deprecated Use getStatementResponses() because sometimes there are multiple responses\r\n   */\r\n  public getStatementResponse(): Tax1099ResponseTransaction {\r\n    return this.taxResponseTransaction == null || this.taxResponseTransaction.length == 0 ? null : this.taxResponseTransaction[0];\r\n  }\r\n}\r\n\r\nAggregate_add(Tax1099ResponseMessageSet, \"TAX1099MSGSRSV1\");\r\nChildAggregate_add(Tax1099ResponseMessageSet, { order: 0, type: Array, collectionEntryType: Tax1099ResponseTransaction, read: Tax1099ResponseMessageSet.prototype.getTaxResponseTransaction, write: Tax1099ResponseMessageSet.prototype.setTaxResponseTransaction });\r\n","\r\nimport { OFXRuntimeException } from '../OFXRuntimeException'\r\n\r\n/**\r\n * Thrown when a required attribute of an aggregate is null or empty.\r\n */\r\nexport class RequiredAttributeException extends OFXRuntimeException {\r\n\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n}\r\n","\r\n/**\r\n * Annotation for a method that returns an OFX aggregate.\r\n */\r\nexport class Aggregate {\r\n  private _value: string;\r\n\r\n  constructor(value: string) {\r\n    this._value = value;\r\n  }\r\n\r\n  /**\r\n   * The name of the aggregate.\r\n   *\r\n   * @return The name of the aggregate.\r\n   */\r\n  public value(): string {\r\n    return this._value;\r\n  }\r\n}\r\n"],"names":["OFXException","Error","[object Object]","message","e","super","this","innerError","OFXRuntimeException","OFXStatusException","status","OFXTransactionException","UnsupportedOFXSecurityTypeException","NoOFXResponseException","DefaultApplicationContext","appId","appVersion","OFXApplicationContextHolder","CURRENT_CONTEXT","context","MessageSetType","AccountType","SortedSet","compareFcn","valueArray","isSorted","assert","sort","element","indexOf","push","insert","index","splice","length","_default","value","defaultValue","isAssignableFrom","entryType","assignableTo","prototype","PropertyDescriptor","params","propertyType","type","readMethod","read","writeMethod","write","ChildAggregate","_order","order","_name","name","_required","required","_collectionEntryType","collectionEntryType","Element","AggregateAttributeType","AggregateAttribute","arg","AggregateAttributeFromElement","AggregateAttributeFromChildAggregate","elementInfo","getReadMethod","getWriteMethod","attributeType","getPropertyType","ELEMENT","toString_","collection","childAggregate","aggregateInfo","AggregateIntrospector","getAggregateInfo","getName","CHILD_AGGREGATE","instance","val","call","get","contentCompare","left","right","AggregateInfo","owner","parentInfo","headers","attributes","header","parentAttributes","values","i","attribute","orderHint","candidates","Array","collectionBucket","isArray","getArrayEntryType","getOrder","candidate","Object","keys","headerKey","headerValue","clazz","aggregate","Aggregate","getOwner","proto","getPrototypeOf","constructor","aggregateName","AGGREGATE_CLASSES_BY_NAME","placeholderName","setName","getAncestorAggregateInfo","addChildAggregate","addElement","addHeader","Aggregate_add","addAggregate","Element_add","BankAccountDetails","bankId","getBankId","routingNumber","setBankId","branchId","accountNumber","accountType","accountKey","String","getBranchId","setBranchId","getAccountNumber","setAccountNumber","getAccountType","setAccountType","getAccountKey","setAccountKey","CreditCardAccountDetails","InvestmentAccountDetails","brokerId","getBrokerId","setBrokerId","StatementRange","includeTransactions","start","end","Date","getStart","setStart","getEnd","setEnd","Boolean","getIncludeTransactions","setIncludeTransactions","BaseAccountImpl","details","username","password","institution","messageType","getMessageSetType","banking","getDetails","creditcard","investment","range","request","createAuthenticatedRequest","requestTransaction","createTransaction","setWrappedMessage","createStatementRequest","getMessageSets","createRequestMessageSet","sendRequest","then","response","doGeneralValidationChecks","unwrapStatementResponse","RequestMessageSet","version","getType","RequestMessage","TransactionWrappedRequestMessage","UID","UUID.v1","clientCookie","transactionAuthorizationNumber","ChildAggregate_add","getUID","setUID","getClientCookie","setClientCookie","getTransactionAuthorizationNumber","setTransactionAuthorizationNumber","StatementRequest","statementRange","getStatementRange","setStatementRange","BankStatementRequest","account","getAccount","setAccount","BankStatementRequestTransaction","setMessage","getMessage","BankingRequestMessageSet","statementRequest","requestMessages","getStatementRequest","setStatementRequest","BankingAccountImpl","bankingSet","getMessageSet","statementTransactionResponse","getStatementResponse","statement","transaction","bankingRequest","bankRequest","BaseFinancialInstitutionData","id","fid","organization","ofxUrl","OFXURL","CreditCardStatementRequest","CreditCardStatementRequestTransaction","CreditCardRequestMessageSet","CreditCardAccountImpl","creditCardSet","creditCardRequest","Header","Header_add","assert.ok","ApplicationSecurity","RequestEnvelope","security","NONE","lastProcessedUID","messageSets","getSecurity","setSecurity","getLastProcessedUID","setLastProcessedUID","setMessageSets","FinancialInstitutionInfo","getId","setId","getOrganization","setOrganization","SignonRequest","language","applicationId","applicationVersion","timestamp","userId","userKey","generateUserKey","financialInstitution","sessionId","clientUID","additionalCredentials1","additionalCredentials2","authToken","accessKey","getTimestamp","setTimestamp","getUserId","setUserId","getPassword","setPassword","getUserKey","setUserKey","getGenerateUserKey","setGenerateUserKey","getLanguage","setLanguage","getFinancialInstitution","setFinancialInstitution","getSessionId","setSessionId","getApplicationId","setApplicationId","getApplicationVersion","setApplicationVersion","getClientUID","setClientUID","getAdditionalCredentials1","setAdditionalCredentials1","getAdditionalCredentials2","setAdditionalCredentials2","getAuthToken","setAuthToken","getAccessKey","setAccessKey","ClientRoutingCapability","ProfileRequest","routingCapability","MESSAGE_SET","profileLastUpdated","getRoutingCapability","setRoutingCapability","getProfileLastUpdated","setProfileLastUpdated","ProfileRequestTransaction","ProfileRequestMessageSet","profile","profileRequest","getProfileRequest","setProfileRequest","AccountInfoRequest","lastUpdated","getLastUpdated","setLastUpdated","AccountInfoRequestTransaction","SignupRequestMessageSet","signup","accountInfoRequest","messages","getAccountInfoRequest","setAccountInfoRequest","IncludePosition","includePositions","sentDownDate","getDateSentDown","setDateSentDown","getIncludePositions","setIncludePositions","InvestmentStatementRequest","includeOpenOrders","includeBalance","includePosition","getIncludeOpenOrders","setIncludeOpenOrders","getIncludePosition","setIncludePosition","getIncludeBalance","setIncludeBalance","InvestmentStatementRequestTransaction","SecurityId","uniqueId","uniqueIdType","getUniqueId","setUniqueId","getUniqueIdType","setUniqueIdType","SecurityRequest","securityId","tickerSymbol","fiId","getSecurityId","setSecurityId","getTickerSymbol","setTickerSymbol","getFiId","setFiId","SecurityListRequest","securityRequests","getSecurityRequests","setSecurityRequests","SecurityListRequestTransaction","InvestmentStatementRequestMessageSet","SecurityListRequestMessageSet","securityListRequest","getSecurityListRequest","setSecurityListRequest","InvestmentAccountImpl","createStatementRequestMessageSet","securities","createSecurityListRequest","createSecurityListRequestMessageSet","unwrapSecurityList","investmentStatementSet","securityListMessageSet","investment_security","setSecurityList","getSecurityList","investmentStatementRequest","investRequest","securityListSet","securityList","PasswordChangeRequest","newPassword","getNewPassword","setNewPassword","PasswordChangeRequestTransaction","SignonRequestMessageSet","signon","signonRequest","passwordChangeRequest","getSignonRequest","getPasswordChangeRequest","instanceof_StatusHolder","obj","getStatusHolderName","getStatus","setSignonRequest","setPasswordChangeRequest","ResponseMessage","Severity","StatusCode","KnownCode","code","defaultSeverity","KnownCodes","getCode","toString","INFO","ERROR","SUCCESS","CLIENT_UP_TO_DATE","GENERAL_ERROR","GENERAL_ACCOUNT_ERROR","ACCOUNT_NOT_FOUND","ACCOUNT_CLOSED","ACCOUNT_NOT_AUTHORIZED","DATE_TOO_SOON","DUPLICATE_REQUEST","UNSUPPORTED_VERSION","INVALID_TAN","MFA_CHALLENGE_REQUIRED","MFA_CHALLENGE_FAILED","PASSWORD_CHANGE_REQUIRED","SIGNON_INVALID","CUSTOMER_ACCOUNT_IN_USE","PASSWORD_LOCKED","INVALID_CLIENT_UID","CONTACT_FI","AUTHTOKEN_REQUIRED","INVALID_AUTHTOKEN","NO_DATA","DB_EXCEPTION","NO_TAXSUPPORT","Status","severity","undefined","getDefaultSeverity","setCode","getSeverity","setSeverity","TransactionWrappedResponseMessage","getResponseMessageName","getWrappedMessage","setStatus","FinancialInstitutionImpl","data","connection","ANONYMOUS_USER","createProfileTransaction","getData","getOFXURL","getProfile","signupRequest","createAccountInfoTransaction","getAccountProfiles","createSignonRequest","url","getConnection","profileSet","transactionResponse","getProfileResponse","requestSet","responseSet","getSignonResponse","transactionIds","requestMessage","getRequestMessages","responseMessage","getResponseMessages","validateStatus","uid","statusHolder","profileTx","createProfileRequest","fi","getFinancialInstitutionId","getCurrentContext","getAppId","getAppVersion","createAccountInfoRequest","messageSet","getAccountInfoResponse","infoResponse","getAccounts","OFXConnectionException","OFXServerException","httpCode","debug","require","LOG","info","warning","error","UnknownStatusCode","DefaultStringConversion","formatDate","statusCode","fromCode","Number","parseFloat","toUpperCase","parseDate","year","parseInt","substr","month","day","hour","minute","second","milli","bracket","close","substring","UTC","date","gmt","valueOf","getTimezoneOffset","pad","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","dpad","getMilliseconds","num","size","s","AggregateMarshaller","conversion","writer","hasHeaders","headerValues","getHeaders","convertedValues","getConversion","writeHeaders","writeStartAggregate","AggregateAttributes","getAttributes","writeAggregateAttributes","writeEndAggregate","aggregateAttributes","aggregateAttribute","childValue","objValue","attributeName","strValue","trim","writeElement","isRequired","StringReader","text","_text","_cursor","_mark","cbuf","offset","arguments","readChar","Math","min","ch","DefaultHandler","OFXParseException","Stack","apply","pop","OFXParseEventType","OFXParseEvent","eventType","eventValue","OFXV2ContentHandler","ofxHandler","eventStack","startedEvents","parser","ontext","bind","onopentag","onclosetag","node","qName","isEmpty","peek","getEventType","isAlreadyStarted","getEventValue","startAggregate","event","eventToFinish","CHARACTERS","chars","elementEvent","onElement","endAggregate","arraysEqual","a1","a2","BaseOFXReader","contentHandler","handler","reader","firstElementStart","getFirstElementStart","buffer","mark","contains","shiftAndAppend","matches","OFX_2_PROCESSING_INSTRUCTION_PATTERN","exec","processOFXv2Headers","reset","parseV2FromFirstElement","remainder","processOFXv1Headers","parseV1FromFirstElement","c","shifted","sax.parser","getContentHandler","install","lines","split","line","colonIndex","onHeader","nameValuePairs","nameValuePair","equalsIndex","replace","OFXSyntaxException","AggregateInfoHolder","arg1","arg2","arg3","currentAttributeIndex","AggregateInfoHolder1","AggregateInfoHolder3","ignoredAggregateName","isBeingSkipped","AggregateStackContentHandler","root","stack","parsingRoot","headerType","getHeaderType","setHeader","fromString","getAttribute","set","getAttributeType","infoHolder","aggregateType","findAggregateByName","isSkipping","AggregateUnmarshaller","stream","newReader","setContentHandler","parse","ResponseMessageSet","ResponseEnvelope","OutputBuffer","encoding","join","reduce","previousValue","currentValue","StreamWriter","out","append","OFXV1Writer","LINE_SEPARATOR","headersWritten","writeAttributesOnNewLine","newWriter","println","print","olduid","isWriteAttributesOnNewLine","flush","DefaultAjaxHandler","verb","async","Promise","resolve","reject","XMLHttpRequest","onloadCalled","open","setRequestHeader","onload","responseText","onerror","send","OFXV1Connection","marshaller","unmarshaller","ajax","outBuffer","ofxWriter","newOFXWriter","getMarshaller","marshal","logRequest","sendBuffer","in_","logResponse","unmarshal","inBuffer","outText","getAsync","Content-Type","Accept","getUnmarshaller","OFXV2Writer","OFXV2Connection","AccountStatus","BankAccountInfo","bankAccount","getBankAccount","supportsTransactionDetailOperations","supportsTransferToOtherAccountOperations","supportsTransferFromOtherAccountOperations","setBankAccount","getSupportsTransactionDetailOperations","setSupportsTransactionDetailOperations","getSupportsTransferToOtherAccountOperations","setSupportsTransferToOtherAccountOperations","getSupportsTransferFromOtherAccountOperations","setSupportsTransferFromOtherAccountOperations","InvestmentTransactionType","CorrectionAction","Payee","address1","address2","address3","city","state","zip","country","phone","getAddress1","setAddress1","getAddress2","setAddress2","getAddress3","setAddress3","getCity","setCity","getState","setState","getZip","setZip","getCountry","setCountry","getPhone","setPhone","Currency","exchangeRate","getExchangeRate","setExchangeRate","Transaction","transactionType","datePosted","dateInitiated","dateAvailable","amount","correctionId","correctionAction","tempId","checkNumber","referenceNumber","standardIndustrialCode","payeeId","payee","bankAccountTo","creditCardAccountTo","memo","currency","originalCurrency","getTransactionType","setTransactionType","getDatePosted","setDatePosted","getDateInitiated","setDateInitiated","getDateAvailable","setDateAvailable","getBigDecimalAmount","setBigDecimalAmount","getCorrectionId","setCorrectionId","getCorrectionAction","setCorrectionAction","getTempId","setTempId","getCheckNumber","setCheckNumber","getReferenceNumber","setReferenceNumber","getStandardIndustrialCode","setStandardIndustrialCode","getPayeeId","setPayeeId","getPayee","setPayee","getBankAccountTo","setBankAccountTo","getCreditCardAccountTo","setCreditCardAccountTo","getMemo","setMemo","getCurrency","setCurrency","getOriginalCurrency","setOriginalCurrency","TransactionList","transactions","getTransactions","setTransactions","BalanceInfo","asOfDate","getAmount","setAmount","getAsOfDate","setAsOfDate","StatementResponse","currencyCode","transactionList","ledgerBalance","availableBalance","marketingInfo","getCurrencyCode","setCurrencyCode","getTransactionList","setTransactionList","getLedgerBalance","setLedgerBalance","getAvailableBalance","setAvailableBalance","getMarketingInfo","setMarketingInfo","BankStatementResponse","BankStatementResponseTransaction","BankingResponseMessageSet","statementResponses","statementResponse","getStatementResponses","setStatementResponses","BalanceRecordType","BalanceRecord","description","ProcessorDayOff_fromOfx","ofxVal","ProcessorDayOff","MONDAY","TUESDAY","WEDNESDAY","THURSDAY","FRIDAY","SATURDAY","SUNDAY","getDescription","setDescription","setType","getValue","setValue","T1099Request","T1099Response","TransactionType","TransferInfo","bankAccountFrom","creditCardAccountFrom","acct","setBankAccountFrom","setCreditCardAccountFrom","accountTo","due","getBankAccountFrom","getCreditCardAccountFrom","getDue","setDue","TransferStatusEvent","TransferStatus","getEvent","setEvent","setDate","CreditCardAccountInfo","creditCardAccount","getCreditCardAccount","setCreditCardAccount","CreditCardStatementResponse","CreditCardStatementResponseTransaction","CreditCardResponseMessageSet","InvestmentAccountType_fromOfx","InvestmentAccountType","INDIVIDUAL","JOINT","CORPORATE","ActivationStatus_fromOfx","ActivationStatus","ACTIVE","PENDING","AVAILABLE","UnitedStatesAccountType","ofxMapping","401K","R401K","403B","R403B","IRA","KEOUGH","OTHER","SARSEP","SIMPLE","NORMAL","TDA","TRUST","UGMA","UnitedStatesAccountType_fromOfx","InvestmentAccountInfo","investmentAccount","getInvestmentAccount","unitedStatesAccountType","supportsChecking","activationStatus","getActivationStatus","investmentAccountType","getInvestmentAccountType","optionLevel","SubAccountType_fromOfx","SubAccountType","CASH","MARGIN","SHORT","PositionType_fromOfx","PositionType","LONG","setInvestmentAccount","getUnitedStatesAccountType","setUnitedStatesAccountType","getSupportsChecking","setSupportsChecking","setActivationStatus","setInvestmentAccountType","getOptionLevel","setOptionLevel","Inv401KSource","PRETAX","AFTERTAX","AFTER_TAX","MATCH","PROFITSHARING","PROFIT_SHARING","ROLLOVER","OTHERVEST","OTHER_VEST","OTHERNONVEST","OTHER_NONVEST","Inv401KSource_fromOfx","InvestmentPosition","heldInAccount","getHeldInAccount","positionType","getPositionType","units","unitPrice","marketValue","marketValueDate","inv401kSource","get401kSource","setHeldInAccount","setPositionType","getUnits","setUnits","getUnitPrice","setUnitPrice","getMarketValue","setMarketValue","getMarketValueDate","setMarketValueDate","set401kSource","BasePosition","investmentPosition","getInvestmentPosition","setInvestmentPosition","DebtPosition","InvestmentPositionList","positions","getPositions","setPositions","MutualFundPosition","unitsStreet","unitsUser","reinvestDividends","reinvestCapitalGains","ShortOptionSecurity_fromOfx","ShortOptionSecurity","NAKED","COVERED","getUnitsStreet","setUnitsStreet","getUnitsUser","setUnitsUser","getReinvestDividends","setReinvestDividends","getReinvestCapitalGains","setReinvestCapitalGains","OptionsPosition","secured","getSecured","setSecured","OtherPosition","StockPosition","BalanceList","balanceRecords","getBalanceRecords","setBalanceRecords","InvestmentBalance","availableCash","marginBalance","shortBalance","buyingPower","balanceList","getAvailableCash","setAvailableCash","getMarginBalance","setMarginBalance","getShortBalance","setShortBalance","getBuyingPower","setBuyingPower","getBalanceList","setBalanceList","BaseInvestmentTransaction","getInvestmentTransaction","getTransactionId","getServerId","getTradeDate","getSettlementDate","getReversalTransactionId","InvestmentBankTransaction","subAccountFund","getSubAccountFund","getTransaction","setTransaction","setSubAccountFund","InvestmentTransactionList","bankTransactions","getInvestmentTransactions","setInvestmentTransactions","getBankTransactions","setBankTransactions","InvestmentStatementResponse","dateOfStatement","investmentTransactionList","positionList","accountBalance","getDateOfStatement","setDateOfStatement","getInvestmentTransactionList","setInvestmentTransactionList","getPositionList","setPositionList","getAccountBalance","setAccountBalance","InvestmentStatementResponseTransaction","InvestmentStatementResponseMessageSet","InvestmentTransaction","transactionId","serverId","tradeDate","settlementDate","reversalTransactionId","setTransactionId","setServerId","setTradeDate","setSettlementDate","setReversalTransactionId","OriginalCurrency","currencyRate","getCurrencyRate","setCurrencyRate","BuyInvestmentTransaction","investmentTransaction","markup","commission","taxes","fees","load","total","originalCurrencyInfo","subAccountSecurity","getSubAccountSecurity","subAcctFund","setInvestmentTransaction","getMarkup","setMarkup","getCommission","setCommission","getTaxes","setTaxes","getFees","setFees","getLoad","setLoad","getTotal","setTotal","getOriginalCurrencyInfo","setOriginalCurrencyInfo","setSubAccountSecurity","BaseBuyInvestmentTransaction","buyInvestment","getBuyInvestment","setBuyInvestment","BaseOtherInvestmentTransaction","SellInvestmentTransaction","markdown","withholding","taxExempt","gain","loanId","stateWithholding","penalty","getMarkdown","setMarkdown","getWithholding","setWithholding","getTaxExempt","setTaxExempt","getGain","setGain","getLoanId","setLoanId","getStateWithholding","setStateWithholding","getPenalty","setPenalty","BaseSellInvestmentTransaction","sellInvestment","getSellInvestment","setSellInvestment","BuyDebtTransaction","BUY_DEBT","accruedInterest","BuyType_fromOfx","BuyType","BUY","BUY_TO_COVER","getAccruedInterest","setAccruedInterest","BuyMutualFundTransaction","BUY_MUTUAL_FUND","buyType","relatedTransactionId","OptionBuyType_fromOfx","OptionBuyType","BUY_TO_OPEN","BUY_TO_CLOSE","getBuyType","setBuyType","getRelatedTransactionId","setRelatedTransactionId","BuyOptionTransaction","BUY_OPTION","optionBuyType","sharesPerContact","getOptionBuyType","setOptionBuyType","getSharesPerContract","setSharesPerContract","BuyOtherTransaction","BUY_OTHER","BuyStockTransaction","BUY_STOCK","CloseOptionAction_fromOfx","CloseOptionAction","EXERCISE","ASSIGN","EXPIRE","CloseOptionTransaction","CLOSE_OPTION","optionAction","getOptionAction","IncomeType_fromOfx","IncomeType","LONG_TERM_CAP_GAINS","SHORT_TERM_CAP_GAINS","DIVIDEND","INTEREST","MISC","setOptionAction","getSharesPerContact","setSharesPerContact","IncomeTransaction","INCOME","incomeType","getIncomeType","subAcctSec","setIncomeType","InvestmentExpenseTransaction","INVESTMENT_EXPENSE","JournalFundTransaction","JOURNAL_FUND","subAccountFrom","getFromSubAccountFund","subAccountTo","getToSubAccountFund","setFromSubAccountFund","setToSubAccountFund","JournalSecurityTransaction","JOURNAL_SECURITY","MarginInterestTransaction","MARGIN_INTEREST","OptionSellType_fromOfx","OptionSellType","SELL_TO_OPEN","SELL_TO_CLOSE","ReinvestIncomeTransaction","REINVEST_INCOME","RelatedOptionType_fromOfx","RelatedOptionType","SPREAD","STRADDLE","ReturnOfCapitalTransaction","RETURN_OF_CAPITAL","SellDebtReason_fromOfx","SellDebtReason","CALL","SELL","MATURITY","SellDebtTransaction","SELL_DEBT","sellReason","getSellReason","SellType_fromOfx","SellType","SELL_SHORT","setSellReason","SellMutualFundTransaction","SELL_MUTUAL_FUND","sellType","averageCostBasis","getSellType","setSellType","getAverageCostBasis","setAverageCostBasis","SellOptionTransaction","SELL_OPTION","optionSellType","relatedType","getRelatedType","getOptionSellType","setOptionSellType","setRelatedType","SellOtherTransaction","SELL_OTHER","SellStockTransaction","SELL_STOCK","SplitTransaction","SPLIT","oldUnits","newUnits","numerator","denominator","cashForFractionalUnits","TransferAction_fromOfx","TransferAction","IN","OUT","getOldUnits","setOldUnits","getNewUnits","setNewUnits","getNumerator","setNumerator","getDenominator","setDenominator","getCashForFractionalUnits","setCashForFractionalUnits","TransferInvestmentTransaction","TRANSFER","transferAction","getTransferAction","purchaseDate","setTransferAction","getPurchaseDate","setPurchaseDate","SynchronizationCapability","CoreMessageSetInfo","serviceProviderName","sslRequired","realm","syncCapability","fileBasedErrorRecoverySupport","timeout","getVersion","setVersion","getServiceProviderName","setServiceProviderName","getUrl","setUrl","getSslRequired","setSslRequired","getRealm","setRealm","getSyncCapability","setSyncCapability","getFileBasedErrorRecoverySupport","setFileBasedErrorRecoverySupport","getIntuTimeout","setIntuTimeout","VersionSpecificMessageSetInfo","core","getCore","setCore","AbstractMessageSetInfo","versionSpecificInformationList","getVersionSpecificInformationList","setVersionSpecificInformationList","CharacterType","MessageSetInfoList","informationList","getInformationList","setInformationList","SignonInfo","passwordCaseSensitive","passwordSpecialCharsAllowed","passwordSpacesAllowed","minPasswordCharacters","maxPasswordCharacters","passwordCharacterType","changePasswordSupported","changePasswordFirstRequired","additionalCredientialsLabel1","additionalCredientialsLabel2","clientUIDRequired","authTokenRequiredForFirstSignon","authTokenLabel","authTokenInfoURL","mfaSupported","mfaChallengeRequiredForFirstSignon","getMinPasswordCharacters","setMinPasswordCharacters","getMaxPasswordCharacters","setMaxPasswordCharacters","getPasswordCharacterType","setPasswordCharacterType","getPasswordCaseSensitive","setPasswordCaseSensitive","getPasswordSpecialCharsAllowed","setPasswordSpecialCharsAllowed","getPasswordSpacesAllowed","setPasswordSpacesAllowed","getChangePasswordSupported","setChangePasswordSupported","getChangePasswordFirstRequired","setChangePasswordFirstRequired","getAdditionalCredientialsLabel1","setAdditionalCredientialsLabel1","getAdditionalCredientialsLabel2","setAdditionalCredientialsLabel2","getClientUIDRequired","setClientUIDRequired","getAuthTokenRequiredForFirstSignon","setAuthTokenRequiredForFirstSignon","getAuthTokenLabel","setAuthTokenLabel","getAuthTokenInfoURL","setAuthTokenInfoURL","getMfaSupported","setMfaSupported","getMfaChallengeRequiredForFirstSignon","setMfaChallengeRequiredForFirstSignon","SignonInfoList","infoList","getInfoList","setInfoList","ProfileResponse","messageSetList","signonInfoList","financialInstitutionName","customerServicePhone","technicalSupportPhone","fax","siteURL","email","getMessageSetProfile_noversion","getMessageSetProfile_version","profiles","getProfiles","getMessageSetList","versionSpecificInfo","getSignonInfoList","signonInfo","setMessageSetList","setSignonInfoList","getFinancialInstitutionName","setFinancialInstitutionName","getCustomerServicePhone","setCustomerServicePhone","getTechnicalSupportPhone","setTechnicalSupportPhone","getFax","setFax","getSiteURL","setSiteURL","getEmail","setEmail","ProfileResponseTransaction","ProfileResponseMessageSet","profileResponse","setProfileResponse","TransferProfile","processorDaysOff","processEndTime","supportsScheduledTransfers","supportsRecurringTransfers","supportsLoanTransfers","supportsScheduledLoanTransfers","supportsRecurringLoanTransfers","supportsTransferModification","supportsModelModification","modelWindow","withdrawnDays","defaultDaysToPay","getProcessorDaysOff","setProcessorDaysOff","getProcessEndTime","setProcessEndTime","getSupportsScheduledTransfers","setSupportsScheduledTransfers","getSupportsRecurringTransfers","setSupportsRecurringTransfers","getSupportsLoanTransfers","setSupportsLoanTransfers","getSupportsScheduledLoanTransfers","setSupportsScheduledLoanTransfers","getSupportsRecurringLoanTransfers","setSupportsRecurringLoanTransfers","getSupportsTransferModification","setSupportsTransferModification","getSupportsModelModification","setSupportsModelModification","getModelWindow","setModelWindow","getWithdrawnDays","setWithdrawnDays","getDefaultDaysToPay","setDefaultDaysToPay","StopCheckProfile","canUseRange","canUseDescription","stopCheckFee","getCanUseRange","setCanUseRange","getCanUseDescription","setCanUseDescription","getStopCheckFee","setStopCheckFee","EmailProfile","canEmail","canNotify","getCanEmail","setCanEmail","getCanNotify","setCanNotify","ImageProfile","closingImageAvailable","transactionImageAvailable","getClosingImageAvailable","setClosingImageAvailable","getTransactionImageAvailable","setTransactionImageAvailable","BankingV1MessageSetInfo","invalidAccountTypes","closingAvail","transferProfile","stopCheckProfile","emailProfile","imageProfile","getInvalidAccountTypes","setInvalidAccountTypes","getClosingAvail","setClosingAvail","getTransferProfile","setTransferProfile","getStopCheckProfile","setStopCheckProfile","getEmailProfile","setEmailProfile","getImageProfile","setImageProfile","BankingMessageSetInfo","version1Info","getVersion1Info","setVersion1Info","BillpayV1MessageSetInfo","payments","daysWith","transferDaysWith","transferDefaultDaysToPay","processorEndTime","postProcessorWindow","supportsStatusUpdateViaPaymentModificationResponse","supportsPaymentByAddress","supportsPaymentByTransfer","supportsPaymentByPayeeId","userCanAddPayee","supportsExtendedPayment","canModifyPayments","canModifyModels","supportsDifferentFirstPayment","supportsDifferentLastPayment","supportsBillPresentmentContext","getDaysWith","setDaysWith","getTransferDaysWith","setTransferDaysWith","getTransferDefaultDaysToPay","setTransferDefaultDaysToPay","getProcessorEndTime","setProcessorEndTime","getPostProcessorWindow","setPostProcessorWindow","getSupportsStatusUpdateViaPaymentModificationResponse","setSupportsStatusUpdateViaPaymentModificationResponse","getSupportsPaymentByAddress","setSupportsPaymentByAddress","getSupportsPaymentByTransfer","setSupportsPaymentByTransfer","getSupportsPaymentByPayeeId","setSupportsPaymentByPayeeId","getUserCanAddPayee","setUserCanAddPayee","getSupportsExtendedPayment","setSupportsExtendedPayment","getCanModifyPayments","setCanModifyPayments","getCanModifyModels","setCanModifyModels","getSupportsDifferentFirstPayment","setSupportsDifferentFirstPayment","getSupportsDifferentLastPayment","setSupportsDifferentLastPayment","getSupportsBillPresentmentContext","setSupportsBillPresentmentContext","BillpayMessageSetInfo","CreditCardV1MessageSetInfo","CreditCardMessageSetInfo","EmailV1MessageSetInfo","supportsMail","supportsMimeType","getSupportsMail","setSupportsMail","getSupportsMimeType","setSupportsMimeType","EmailMessageSetInfo","InterbankTransferV1MessageSetInfo","interbank_transfer","supportsBillPay","cancelWindow","domesticInterbankTransferFee","internationalInterbankTransferFee","getSupportsBillPay","setSupportsBillPay","getCancelWindow","setCancelWindow","getDomesticInterbankTransferFee","setDomesticInterbankTransferFee","getInternationalInterbankTransferFee","setInternationalInterbankTransferFee","InterbankTransferMessageSetInfo","InvestmentV1MessageSetInfo","supportsStatementsDownload","supportsOpenOrdersDownload","supportsPositionsDownload","supportsBalanceDownload","supportsEmail","supports401kInformation","supportsClosingStatements","getSupportsStatementsDownload","setSupportsStatementsDownload","getSupportsOpenOrdersDownload","setSupportsOpenOrdersDownload","getSupportsPositionsDownload","setSupportsPositionsDownload","getSupportsBalanceDownload","setSupportsBalanceDownload","getSupportsEmail","setSupportsEmail","getSupports401kInformation","setSupports401kInformation","getSupportsClosingStatements","setSupportsClosingStatements","InvestmentMessageSetInfo","ProfileV1MessageSetInfo","ProfileMessageSetInfo","SecurityListV1MessageSetInfo","supportsSecurityListDownload","getSupportsSecurityListDownload","setSupportsSecurityListDownload","SecurityListMessageSetInfo","SignOnV1MessageSetInfo","SignOnMessageSetInfo","ClientEnrollment","accountRequired","getAccountRequired","setAccountRequired","WebEnrollment","OtherEnrollment","SignupV1MessageSetInfo","clientEnrollment","webEnrollment","otherEnrollment","supportsClientUserInfoChanges","supportsAvailableAccounts","supportsClientServiceActivationRequests","getClientEnrollment","setClientEnrollment","getWebEnrollment","setWebEnrollment","getOtherEnrollment","setOtherEnrollment","getSupportsClientUserInfoChanges","setSupportsClientUserInfoChanges","getSupportsAvailableAccounts","setSupportsAvailableAccounts","getSupportsClientServiceActivationRequests","setSupportsClientServiceActivationRequests","SignupMessageSetInfo","WireTransferV1MessageSetInfo","wire_transfer","domesticWireTransferFee","internationalWireTransferFee","getDomesticWireTransferFee","setDomesticWireTransferFee","getInternationalWireTransferFee","setInternationalWireTransferFee","WireTransferMessageSetInfo","AssetClass_fromOfx","AssetClass","DOMESTIC_BOND","INTL_BOND","LARGE_STOCK","SMALL_STOCK","INTL_STOCK","MONEY_MARKET","SecurityInfo","securityName","rating","getSecurityName","setSecurityName","getRating","setRating","getUnitPriceAsOfDate","setUnitPriceAsOfDate","BaseSecurityInfo","securityInfo","getSecurityInfo","CallType_fromOfx","CallType","PUT","PREFUND","CouponFrequency_fromOfx","CouponFrequency","MONTHLY","QUARTERLY","SEMIANNUAL","ANNUAL","DebtClass_fromOfx","DebtClass","TREASURY","MUNICIPAL","DebtType_fromOfx","DebtType","COUPON","ZERO","setSecurityInfo","DebtSecurityInfo","parValue","debtType","getDebtType","debtClass","couponRate","nextMaturityDate","couponFrequency","getCouponFrequency","callPrice","yieldToCall","nextCallDate","callType","getCallType","yieldToMaturity","debtMaturityDate","assetClass","getAssetClass","fiAssetClass","MutualFundType_fromOfx","MutualFundType","OPEN_END","CLOSE_END","getParValue","setParValue","setDebtType","getDebtClass","setDebtClass","getCouponRate","setCouponRate","getNextMaturityDate","setNextMaturityDate","setCouponFrequency","getCallPrice","setCallPrice","getYieldToCall","setYieldToCall","getNextCallDate","setNextCallDate","setCallType","getYieldToMaturity","setYieldToMaturity","getDebtMaturityDate","setDebtMaturityDate","setAssetClass","getFiAssetClass","setFiAssetClass","MutualFundSecurityInfo","mfType","yield","yield_","dateYieldAsOf","OptionType_fromOfx","OptionType","getYield","setYield","getDateYieldAsOf","setDateYieldAsOf","OptionSecurityInfo","optionType","getOptionType","strikePrice","expirationDate","underlyingSecurity","setOptionType","getStrikePrice","setStrikePrice","getExpirationDate","setExpirationDate","getUnderlyingSecurity","setUnderlyingSecurity","OtherSecurityInfo","typeDesc","getTypeDesc","setTypeDesc","SecurityList","securityInfos","getSecurityInfos","setSecurityInfos","SecurityListResponse","SecurityListResponseTransaction","SecurityListResponseMessageSet","securityListResponse","ret","StockType_fromOfx","StockType","COMMON","PREFERRED","CONVERTIBLE","getSecurityListResponse","setSecurityListResponse","StockSecurityInfo","stockType","PasswordChangeResponse","changeTimestamp","getChangeTimestamp","setChangeTimestamp","PasswordChangeResponseTransaction","SignonResponse","userKeyExpiration","accountLastUpdated","getUserKeyExpiration","setUserKeyExpiration","getAccountLastUpdated","setAccountLastUpdated","SignonResponseMessageSet","signonResponse","passwordChangeResponse","setSignonResponse","getPasswordChangeResponse","setPasswordChangeResponse","AccountProfile","getBankSpecifics","getCreditCardSpecifics","getInvestmentSpecifics","specifics","setBankSpecifics","setCreditCardSpecifics","setInvestmentSpecifics","bankSpecifics","creditCardSpecifics","investSpecifics","AccountInfoResponse","accounts","setAccounts","AccountInfoResponseTransaction","SignupResponseMessageSet","accountInfoResponse","setAccountInfoResponse","ProcDet","dtAqd","dtSale","secName","costBasis","saleSpr","longShort","wasDisAllowed","noncoveredSec","basisNotshown","getDtAqd","setDtAqd","getDtSale","setDtSale","getSecName","setSecName","getCostBasis","setCostBasis","getSaleSpr","setSaleSpr","getLongShort","setLongShort","getWasDisAllowed","setWasDisAllowed","getNoncoveredSec","setNoncoveredSec","getBasisNotshown","setBasisNotshown","ExtDBInfo","procDet","teInterest","pabInterest","teIntDividend","pabDividend","getProcDet","setProcDet","getTeInterest","setTeInterest","getPabInterest","setPabInterest","getTeIntDividend","setTeIntDividend","getPabDividend","setPabDividend","PayerAddress","payerName1","payerName2","postalCode","getPayerName1","setPayerName1","getPayerName2","setPayerName2","getPostalCode","setPostalCode","RecAddress","recName1","recName2","getRecName1","setRecName1","getRecName2","setRecName2","Tax1099B","srvrtId","taxYear","extDBInfo","payerAddress","payerId","recAddress","recId","recAcct","getSrvrtId","setSrvrtId","getTaxYear","setTaxYear","getExtDBInfo","setExtDBInfo","getPayerAddress","setPayerAddress","getPayerId","setPayerId","getRecAddress","setRecAddress","getRecId","setRecId","getRecAcct","setRecAcct","Tax1099DIV","ordDiv","qualifiedDiv","totCapGain","p28Gain","unrecSec1250","sec1202","nonTaxDist","fedTaxWh","investExp","forTaxPd","cashLiq","nonCashLiq","getOrdDiv","setOrdDiv","getQualifiedDiv","setQualifiedDiv","getTotCapGain","setTotCapGain","getP28Gain","setP28Gain","getUnrecSec1250","setUnrecSec1250","getSec1202","setSec1202","getNonTaxDist","setNonTaxDist","getFedTaxWh","setFedTaxWh","getInvestExp","setInvestExp","getForTaxPd","setForTaxPd","getCashLiq","setCashLiq","getNonCashLiq","setNonCashLiq","Tax1099INT","intIncome","erlWithPen","intUsbndtrs","taxExemptInt","specifiedPabInt","getIntIncome","setIntIncome","getErlWithPen","setErlWithPen","getIntUsbndtrs","setIntUsbndtrs","getTaxExemptInt","setTaxExemptInt","getSpecifiedPabInt","setSpecifiedPabInt","Tax1099MISC","royalties","otherIncome","subPmts","getRoyalties","setRoyalties","getOtherIncome","setOtherIncome","getSubPmts","setSubPmts","Tax1099OID","originalDisc","otherPerInt","desc","oidOnUstres","getOriginalDisc","setOriginalDisc","getOtherPerInt","setOtherPerInt","getDesc","setDesc","getOidOnUstres","setOidOnUstres","Tax1099R","grossDist","taxAmt","taxAmtNd","capGain","empContins","netUnapEmp","distCode","iraSepSimp","annCtrctDist","totEmpCount","getGrossDist","setGrossDist","getTaxAmt","setTaxAmt","getTaxAmtNd","setTaxAmtNd","getCapGain","setCapGain","getEmpContins","setEmpContins","getNetUnapEmp","setNetUnapEmp","getDistCode","setDistCode","getIraSepSimp","setIraSepSimp","getAnnCtrctDist","setAnnCtrctDist","getTotEmpCount","setTotEmpCount","Tax1099Request","Tax1099RequestTransaction","tax1099Request","setTax1099Request","getTax1099Request","Tax1099RequestMessageSet","tax1099","taxRequestTransaction","getTaxRequestTransaction","setTaxRequestTransaction","Tax1099Response","lstTax1099DIV","lstTax1099INT","lstTax1099R","lstTax1099B","lstTax1099MISC","lstTax1099OID","getLstTax1099DIV","setLstTax1099DIV","getLstTax1099INT","setLstTax1099INT","getLstTax1099R","setLstTax1099R","getLstTax1099B","setLstTax1099B","getLstTax1099MISC","setLstTax1099MISC","getLstTax1099OID","setLstTax1099OID","Tax1099ResponseTransaction","tax1099Response","getTax1099Response","setTax1099Response","Tax1099ResponseMessageSet","taxResponseTransaction","getTaxResponseTransaction","setTaxResponseTransaction","RequiredAttributeException","_value"],"mappings":"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"}
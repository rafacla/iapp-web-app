/**
 * Investment transaction aggregate ("INVTRAN").
 * @see "Section 13.9.2.4.1, OFX Spec"
 */
export declare class InvestmentTransaction {
    private transactionId;
    private serverId;
    private tradeDate;
    private settlementDate;
    private reversalTransactionId;
    private memo;
    /**
     * Gets the unique financial institution assigned transaction id. This is a
     * required field according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @return the financial institution asssigned transaction id
     */
    getTransactionId(): string;
    /**
     * Sets the unique financial institution assigned transaction id. This is a
     * required field according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @param transactionId the financial institution asssigned transaction id
     */
    setTransactionId(transactionId: string): void;
    /**
     * Gets the server assigned transaction id. This is an optional field
     * according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @return the server assigned transaction id
     */
    getServerId(): string;
    /**
     * Sets the server assigned transaction id. This is an optional field
     * according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @param serverId the server assigned transaction id
     */
    setServerId(serverId: string): void;
    /**
     * Gets the trade date of the transaction. For stock splits, this is the
     * day of record. This is a required field according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @return the trade date
     */
    getTradeDate(): Date;
    /**
     * Sets the trade date of the transaction. For stock splits, this is the
     * day of record. This is a required field according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @param tradeDate the trade date
     */
    setTradeDate(tradeDate: Date): void;
    /**
     * Gets the settlement date of the transaction. For stock splits, this is the
     * day of of execution. This is an optional field according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @return the trade date
     */
    getSettlementDate(): Date;
    /**
     * Sets the settlement date of the transaction. For stock splits, this is the
     * day of of execution. This is an optional field according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @param settlementDate the trade date
     */
    setSettlementDate(settlementDate: Date): void;
    /**
     * For a reveral transaction, gets the financial institution assigned
     * transaction id for the transaction being revesed.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @return the transaction id of the transaction being reversed
     */
    getReversalTransactionId(): string;
    /**
     * For a reveral transaction, gets the financial institution assigned
     * transaction id for the transaction being revesed.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @param reversalTransactionId the transaction id of the transaction being reversed
     */
    setReversalTransactionId(reversalTransactionId: string): void;
    /**
     * Gets the memo associated with the transaction. This is an optional field
     * according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @return the memo
     */
    getMemo(): string;
    /**
     * Sets the memo associated with the transaction. This is an optional field
     * according to the OFX spec.
     * @see "Section 13.9.2.4.1, OFX Spec"
     *
     * @param memo the memo
     */
    setMemo(memo: string): void;
}

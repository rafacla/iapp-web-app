import { SecurityId } from "./SecurityId";
/**
 * Info about a security.
 * @see "Section 13.8.5.1, OFX Spec"
 */
export declare class SecurityInfo {
    private securityId;
    private securityName;
    private tickerSymbol;
    private fiId;
    private rating;
    private unitPrice;
    private marketValueDate;
    private currencyCode;
    private memo;
    /**
     * Gets the unique security id for the security. This is a required field according to the OFX
     * spec.
     *
     * @return the security id
     */
    getSecurityId(): SecurityId;
    /**
     * Sets the unique security id for the security. This is a required field according to the OFX
     * spec.
     *
     * @param securityId the security id
     */
    setSecurityId(securityId: SecurityId): void;
    /**
     * Gets the full name of the security. This is a required field according to the OFX spec.
     *
     * @return the full name of the security
     */
    getSecurityName(): string;
    /**
     * Sets the full name of the security. This is a required field according to the OFX spec.
     *
     * @param securityName the full name of the security
     */
    setSecurityName(securityName: string): void;
    /**
     * Gets the ticker symbol for the security. This is an optional field according to the OFX spec.
     *
     * @return the ticket symbol or null if there's no ticker symbol
     */
    getTickerSymbol(): string;
    /**
     * Sets the ticker symbol for the security. This is an optional field according to the OFX spec.
     *
     * @param tickerSymbol the ticket symbol or null if there's no ticker symbol
     */
    setTickerSymbol(tickerSymbol: string): void;
    /**
     * Gets the FI ID number for the security. This is an optional field according to the OFX spec.
     *
     * @return the FI ID number for the security
     */
    getFiId(): string;
    /**
     * Sets the FI ID number for the security. This is an optional field according to the OFX spec.
     *
     * @param fiId the FI ID number for the security
     */
    setFiId(fiId: string): void;
    /**
     * Gets the rating of the security. This is an optional field according to the OFX spec.
     *
     * @return the rating
     */
    getRating(): string;
    /**
     * Sets the rating of the security. This is an optional field according to the OFX spec.
     *
     * @param rating the rating
     */
    setRating(rating: string): void;
    /**
     * Gets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the
     * share price. For bonds, this is the percentage of par. For options, this is the per share (not
     * per contact) price. This is a noptional field according to the OFX spec.
     * @see "Section 13.9.2.4.3, OFX Spec"
     *
     * @return the per unit price
     */
    getUnitPrice(): number;
    /**
     * Sets the price per commonly-quoted unit. For stocks, mutual funds, and others, this is the
     * share price. For bonds, this is the percentage of par. For options, this is the per share (not
     * per contact) price. This is an optional field according to the OFX spec.
     * @see "Section 13.9.2.4.3, OFX Spec"
     *
     * @param unitPrice the per unit price
     */
    setUnitPrice(unitPrice: number): void;
    /**
     * Gets the date as-of for the unit price. This is an optional field according to the OFX spec.
     *
     * @return the date as-of for the unit price
     */
    getUnitPriceAsOfDate(): Date;
    /**
     * Sets the date as-of for the unit price. This is an optional field according to the OFX spec.
     *
     * param marketValueDate the date as-of for the unit price
     */
    setUnitPriceAsOfDate(marketValueDate: Date): void;
    /**
     * Gets the overriding currency code for the security. If not set, implies the default currency.
     * This is an optional field according to the OFX spec.
     *
     * @return the overriding currency code or null to mean the default currency
     */
    getCurrencyCode(): string;
    /**
     * Sets the overriding currency code for the security. If not set, implies the default currency.
     * This is an optional field according to the OFX spec.
     *
     * @param currencyCode the overriding currency code or null to mean the default currency
     */
    setCurrencyCode(currencyCode: string): void;
    /**
     * Gets any memo associated with the security. This is an optional field according to the OFX
     * spec.
     *
     * @return the memo
     */
    getMemo(): string;
    /**
     * Sets any memo associated with the security. This is an optional field according to the OFX
     * spec.
     *
     * @param memo the memo
     */
    setMemo(memo: string): void;
}

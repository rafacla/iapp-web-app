import { Severity, StatusCode } from './StatusCode';
/**
 * Known status codes.
 */
export declare class KnownCode extends StatusCode {
    static SUCCESS: KnownCode;
    static CLIENT_UP_TO_DATE: KnownCode;
    static GENERAL_ERROR: KnownCode;
    static GENERAL_ACCOUNT_ERROR: KnownCode;
    static ACCOUNT_NOT_FOUND: KnownCode;
    static ACCOUNT_CLOSED: KnownCode;
    static ACCOUNT_NOT_AUTHORIZED: KnownCode;
    static DATE_TOO_SOON: KnownCode;
    static DUPLICATE_REQUEST: KnownCode;
    static UNSUPPORTED_VERSION: KnownCode;
    static INVALID_TAN: KnownCode;
    static MFA_CHALLENGE_REQUIRED: KnownCode;
    static MFA_CHALLENGE_FAILED: KnownCode;
    static PASSWORD_CHANGE_REQUIRED: KnownCode;
    static SIGNON_INVALID: KnownCode;
    static CUSTOMER_ACCOUNT_IN_USE: KnownCode;
    static PASSWORD_LOCKED: KnownCode;
    static INVALID_CLIENT_UID: KnownCode;
    static CONTACT_FI: KnownCode;
    static AUTHTOKEN_REQUIRED: KnownCode;
    static INVALID_AUTHTOKEN: KnownCode;
    static NO_DATA: KnownCode;
    static DB_EXCEPTION: KnownCode;
    static NO_TAXSUPPORT: KnownCode;
    static KnownCodes: KnownCode[];
    private code;
    private message;
    private defaultSeverity;
    constructor(code: number, message: string, defaultSeverity: Severity);
    getCode(): number;
    getMessage(): string;
    getDefaultSeverity(): Severity;
    static fromCode(code: number): KnownCode;
    toString(): string;
}
/**
 * Transaction status element.
 *
 * @see "Section 3.1.4, OFX Spec"
 */
export declare class Status {
    private code;
    private severity;
    private message;
    constructor();
    /**
     * Status code.
     *
     * @return The status code.
     */
    getCode(): StatusCode;
    /**
     * Status code.
     *
     * @param code Status code.
     */
    setCode(code: StatusCode): void;
    /**
     * The severity.
     *
     * @return The severity.
     */
    getSeverity(): Severity;
    /**
     * The severity.
     *
     * @param severity The severity.
     */
    setSeverity(severity: Severity): void;
    /**
     * Server-supplied message.
     *
     * @return Server-supplied message.
     */
    getMessage(): string;
    /**
     * Server-supplied message.
     *
     * @param message Server-supplied message.
     */
    setMessage(message: string): void;
}
